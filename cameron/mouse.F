C $Log: not supported by cvs2svn $
C Revision 1.3  1999/02/23 19:44:55  dosuser
C RIC: The New Cameron Sources. Now we have one set of source code
C      for the DOS (Salford) and GID (DF&VC++) versions.
C      Need new scripts for some of the Cameron features. Need new
C      makefile.
C


CRYSTALS CODE FOR MOUSE.FOR
CODE FOR ZMLAB
      SUBROUTINE ZMLAB
C This routine controls the MOUSE movement of atomic labelling. It
C operators as follows :-
C 1) 1st left mouse button click - select label.
C The selected label disappears (is written in the background color)
C and is outlined with a red?? box.
C The atom referred to by the label is highlighted by a cross.
C 2) 2nd left mouse button click is the new label position.
C Draw label in new position. Turn off cross. Get rid of box
C around old label position.
C
C If the user hits the right mouse button then the operation is stopped.
C If the user hits the V key (for view) then the picture is redrawn and
C labelling is then resumed.
      
\CAMPAR
\CAMCOM
\CAMANA
\CAMDAT
\CAMCAL
\CAMMSE
\CAMMEN
\CAMCHR
\CAMGRP
\CAMCOL
\CAMFLG
\CAMSHR
\CAMVER
\CAMKEY
\CAMBTN
\CAMBLK
\XIOBUF

      INTEGER IB,KK
C THE CODE BELOW IS THE 'EVENT LOOP' WHICH ACTS ON BUTTON PRESSES AND
C V KEY PRESSES.
C Update status bar
      CALL ZMORE('Mouse label control activated.',0)
      CALL ZMORE('Options: Click atom to label',0)
      CALL ZMORE('         Click label to move, then new location',0)
      CALL ZMORE('         V to update view, RETURN to end labelling',0)
      CALL ZMORE1('Mouse label control activated.',0)

10    CONTINUE

C This machine specific stuff is much easier to understand
C if you look at the Fortran that is generated by EDITOR...

C Get the mouse information
&DOS      IB = KMSGET(JX,JY,JF)
&GID      IUNIT = 5
&GID      IB = KRDLIN ( IUNIT, CLINE, LENUSE )

&DOS      IF ((IB.EQ.0).AND.(JF.GT.0)) THEN
&GID      IF ( CLINE(1:6) .EQ. 'LCLICK' ) THEN
C Left mouse button has been pressed.
&GID        READ (CLINE(7:),*)JX,JY
        CALL ZLBUT(JX,JY)
        GOTO 10

&GID      ELSE IF ( CLINE(1:1) .EQ. 'V' ) THEN
&GID        CALL ZDOVI
&GID        GOTO 10

&GID      ELSE

&DOS      ELSE IF ((IB.EQ.0).AND.(JF.LT.0)) THEN

&DOSC Right mouse button has been pressed.
&GIDC Non-left click action e.g. return,
        RETURN
      ENDIF

&DOSC Check the keyboard
&DOS      CALL ZGTKY1(KK)
&DOS      IF ((KK.EQ.ICUV).OR.(KK.EQ.ICLV)) THEN
&DOSC V KEY HAS BEEN PRESSED - WE NEED TO REDRAW THE PICTURE
&DOS        CALL ZDOVI
&DOS        GOTO 10
&DOS      ENDIF
&DOSC ALSO RETURN ON A RETURN KEY HIT
&DOS      IF (KK.EQ.ICRET) THEN
&DOS        RETURN
&DOS      ENDIF
&DOS      GOTO 10
      END
 
CODE FOR ZLBUT
      SUBROUTINE ZLBUT (IMX,IMY)
C A LEFT MOUSE BUTTON PRESS HAS BEEN FOUND - LOOK TO SEE WHETHER THERE
C IS A LABEL UNDER THE MOUSE CURSOR.
      
\CAMPAR
\CAMCOM
\CAMANA
\CAMDAT
\CAMCAL
\CAMMSE
\CAMMEN
\CAMCHR
\CAMGRP
\CAMCOL
\CAMFLG
\CAMSHR
\CAMVER
\CAMKEY
\CAMBTN
\CAMBLK
\XIOBUF

      CHARACTER*20 CLAB
      INTEGER IMX,IMY,IX,IY,ICOL,IB,KK
      REAL LABLN
C WORK OUT THE LIMITS - THE LABELS SHOULD ONLY GO INTO THE MIDDLE 90%
C OF THE SCREEN
C      XMIN = (-0.9*XCEN)/SCALE + XCP
C      XMAX = (0.9*XCEN)/SCALE + XCP
C      YMIN = (-0.9*YCEN)/SCALE + YCP
C      YMAX = (0.9*YCEN)/SCALE + YCP
      TENPIX = REAL(ILSIZE)/SCALE
      RSMALL = ( 2.0 / SCALE ) **2
C CONVERT TO ANGSTROM COORDINATES
      X = (IMX-XCEN-XOFF)/SCALE + XCP
      Y = (IMY-YCEN-YOFF)/SCALE + YCP
C      IF (X.LT.XMIN .OR. X.GT.XMAX .OR. Y.LT.YMIN .OR. Y.GT.YMAX)
C     + RETURN
C NOW LOOP OVER ALL LABELLED ATOMS
      ILNO = 0
      DO 10 I = ISVIEW, IFVIEW-1 , IPACKT
C DO NOT COUNT EXCLUDED ATOMS
        IF (RSTORE(I+IPCK+1).LT.0) GOTO 10
C CHECK FOR ATOM LABELLING
        IF (NINT(RSTORE(I+IATTYP+2)).NE.1) GOTO 10
C GET THE ATOM LABEL POSITION
        RLX = RSTORE(I+ILAB)
        RLY = RSTORE(I+ILAB+1)
        RLL = RSTORE(I+ILAB+2)
C CHECK FOR X COORD FIRST
        IF ((X.GE.RLX).AND.(X.LE.RLX+RLL)) THEN
C NOW CHECK Y COORD
          IF ((Y.GE.RLY).AND.(Y.LE.RLY+TENPIX)) THEN
C WE HAVE FOUND A LABEL.
            ILNO = I
            GOTO 20
          ENDIF
        ENDIF
10    CONTINUE
20    CONTINUE
      IF (ILNO.EQ.0) THEN
C WE HAVE NOT FOUND A LABEL. LOOK FOR AN ATOM INSTEAD.
        DO 40 I = ISVIEW , IFVIEW-1 , IPACKT
C DO NOT INCLUDE EXCLUDED ATOMS
          IF (RSTORE(I+IPCK+1).LT.0.0) GOTO 40
          D = (X-RSTORE(I+IXYZO))**2 + (Y-RSTORE(I+IXYZO+1))**2
          IF (D.LE.RSTORE(I+IATTYP+4)**2.OR.D.LE.RSMALL) THEN
C WE HAVE FOUND AN ATOM - IS IT ALREADY LABELLED?
            IF (NINT(RSTORE(I+IATTYP+2)).EQ.1) GOTO 50
C IF NOT DRAW THE LABEL AND LABEL IT
            IX = NINT (( RSTORE(I+IXYZO) - XCP)*SCALE)
            IY = NINT (( RSTORE(I+IXYZO+1) - YCP)*SCALE)
            ILL = (I-IRATOM)/IPACKT + ICATOM
            IL = INDEX (CSTORE(ILL),' ') - 1
            IF (IL.LT.1) GOTO 40
C CHECK FOR PACK LABELLING
            IF ((IPACK.GT.0).AND.(IPLAB.EQ.1)) THEN
              CALL ZPLABL (I,CLAB,IL)
            ELSE
              CLAB = CSTORE(ILL)
            ENDIF
C DRAW THE LABEL
            CALL ZDRTEX(IX,IY,CLAB(1:IL),IDEVCL(ILABCL+1))
&GID            CALL ZMORE('^^CH SHOW',0)
&GID            CALL ZMORE('^^CR',0)
C SAVE THE LABEL COORDINATES
            RSTORE(I+ILAB) = RSTORE(I+IXYZO)
            RSTORE(I+ILAB+1) = RSTORE(I+IXYZO+1)
            RSTORE(I+ILAB+2) = IL*TENPIX*0.8
            RSTORE(I+IATTYP+2) = 1.0
            GOTO 50
          ENDIF
40      CONTINUE
50      CONTINUE
        RETURN
      ENDIF
      IX = NINT (( RLX - XCP) * SCALE )
      IY = NINT (( RLY - YCP )*SCALE )
      ILL = (ILNO-IRATOM)/IPACKT + ICATOM
      IL  = INDEX (CSTORE(ILL),' ') - 1
      IF (IL.LT.1) RETURN
C CHECK FOR PACK LABELLING
      IF ((IPACK.GT.0).AND.(IPLAB.EQ.1)) THEN
        CALL ZPLABL (ILNO,CLAB,IL)
      ELSE
        CLAB = CSTORE(ILL)
      ENDIF
C FIND OUT THE LABEL LENGTH
      LABLN = TENPIX * REAL(IL) * 0.8
C NEED TO HIDE THE MOUSE CURSOR DURING DRAWING
C NOW DRAW THE ATOM LABEL IN THE BACKGROUND COLOUR
      CALL ZDRTEX (IX,IY,CLAB(1:IL),IDEVCL(IBACK+1))
&GID      CALL ZMORE('^^CH SHOW',0)
&GID      CALL ZMORE('^^CR',0)
C DRAW THE CROSS AND THE BOX
      ICOL = 4
      CALL ZMBXCR (ILNO,ICOL,ICOL)
&GID      CALL ZMORE('^^CH SHOW',0)
&GID      CALL ZMORE('^^CR',0)
C NOW WAIT FOR THE NEXT LEFT BUTTON PRESS
30    CONTINUE


C DVF GUI VERSION CODE
&GID      IUNIT = 5
&GID      IB = KRDLIN ( IUNIT, CLINE, LENUSE )
&GID      IF ( CLINE(1:6) .NE. 'LCLICK' ) THEN
C THIS ATOM IS NOT TO BE LABELLED
&GID          CALL ZMBXCR(ILNO,IBACK,IBACK)
&GID          RSTORE(ILNO+IATTYP+2) = 0.0
&GID          RETURN
&GID      ENDIF
&GID      READ (CLINE(7:),*)IMX,IMY

C SALFORD DOS AND WIN32 CODE.
&DOS      IB = KMSGET(IMX,IMY,JF)
&DOS      IF ((IB.EQ.0).AND.(JF.GT.0)) THEN
&DOS      IF ((IB.LT.0).AND.(JF.LE.0)) THEN
C No mouse click, check for keypresses.
&DOS        CALL ZGTKY1 (KK)
&DOS        IF ((CHAR(KK).EQ.'N').OR.(CHAR(KK).EQ.'n')) THEN
C THIS ATOM IS NOT TO BE LABELLED
&DOS          CALL ZMBXCR(ILNO,IBACK,IBACK)
&DOS          RSTORE(ILNO+IATTYP+2) = 0.0
&DOS          RETURN
&DOS        ELSE IF (CHAR(KK).NE.'#') THEN
&DOS          GOTO 30
&DOS        ENDIF
&DOS      ENDIF

C LEFT BUTTON HAS BEEN PRESSED
C CONVERT THE COORDS TO ORTHOGONAL ONES
      RSTORE(ILNO+ILAB) = (IMX-XCEN-XOFF)/SCALE + XCP
      RSTORE(ILNO+ILAB+1) = (IMY-YCEN-YOFF)/SCALE + YCP
      RSTORE(ILNO+ILAB+2) = LABLN
C CHECK THAT THE LABEL POSITION IS VALID
C      IF (RSTORE(ILNO+ILAB).LT.XMIN .OR.
C     + RSTORE(ILNO+ILAB)+LABLN.GT. XMAX .OR.
C     + RSTORE(ILNO+ILAB+1).LT.YMIN .OR.
C     + RSTORE(ILNO+ILAB+1)+TENPIX.GT.YMAX) THEN
C        CALL ZBEEP
C        GOTO 30
C      ENDIF
C DRAW THE CROSS AND THE BOX
      CALL ZMBXCR (ILNO,IBACK,IBACK)
C NOW DRAW THE NEW LABEL
      IX = IMX - XCEN - XOFF
      IY = IMY - YCEN - YOFF
      CALL ZDRTEX (IX,IY,CLAB(1:IL),IDEVCL(ILABCL+1))
&GID      CALL ZMORE('^^CH SHOW',0)
&GID      CALL ZMORE('^^CR',0)
      RETURN
      END
 
 
CODE FOR ZMBXCR
      SUBROUTINE ZMBXCR (ILNO,ICOL1,ICOL2)
      
\CAMPAR
\CAMCOM
\CAMANA
\CAMDAT
\CAMCAL
\CAMMSE
\CAMMEN
\CAMCHR
\CAMGRP
\CAMCOL
\CAMFLG
\CAMSHR
\CAMVER
\CAMKEY
\CAMBTN
\CAMBLK
\XIOBUF

      INTEGER IBX(5),IBY(5),IX,IY,ICOL1,ICOL2
C THIS ROUTINE DRAWS A CROSS OVER THE ATOM IN COLOUR ICOL1
C AND A BOX AROUND THE LABEL IN COLOUR ICOL2
      TENPIX = REAL(ILSIZE)/SCALE
      RLX = RSTORE(ILNO+ILAB)
      RLY = RSTORE(ILNO+ILAB+1)
      RLL = RSTORE(ILNO+ILAB+2)
      IX = NINT ((RSTORE(ILNO+IXYZO) - XCP)*SCALE + XCEN + XOFF)
      IY = NINT ((RSTORE(ILNO+IXYZO+1) - YCP)*SCALE + YCEN + YOFF)
      IBX(1) = IX
      IBX(2) = IX
      IBY(1) = IY - 25
      IBY(2) = IY + 25
      CALL ZPLINE(IBX,IBY,2,ICOL1)
      IBX(1) = IX - 25
      IBX(2) = IX + 25
      IBY(1) = IY
      IBY(2) = IY
      CALL ZPLINE(IBX,IBY,2,ICOL1)
      IX = NINT (( RLX - XCP) * SCALE + XCEN + XOFF)
      IY = NINT (( RLY - YCP) * SCALE + YCEN + YOFF)
      IBX(1) = IX - 2
      IBX(2) = IBX(1) + RLL*SCALE + 2
      IBX(3) = IBX(2)
      IBX(4) = IBX(1)
      IBX(5) = IBX(1)
      IBY(1) = IY - 2
      IBY(2) = IBY(1)
      IBY(3) = IBY(1) + TENPIX*SCALE + 4
      IBY(4) = IBY(3)
      IBY(5) = IBY(1)
      CALL ZPLINE(IBX,IBY,5,ICOL2)
      RETURN
      END
