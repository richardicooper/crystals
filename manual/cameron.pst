%!PS
/top  720 def /bottom   50 def /indent   10 def 
/linegap   10 def /leftmargin  108 def /right  543 def 
/ytitle  756 def /ybanner  264 def 
/pageno    0 def /chapno    0 def /sectno    0 def /point   10 def 
%begin postscript header                                                        
/num 10 string def                                                              
%                                                                               
/Banner                                                                         
{                                                                               
pageno 0 ne {showpage} if                                                       
/Times-Roman findfont 30 scalefont setfont                                      
/ypos ybanner def                                                               
/wid banner stringwidth pop def                                                 
/w right wid sub def                                                            
w ypos moveto                                                                   
banner show                                                                     
/Times-Roman findfont point scalefont setfont                                   
}                                                                               
def                                                                             
%                                                                               
/Newpage                                                                        
{                                                                               
pageno 0 ne {showpage} if                                                       
/Times-Roman findfont 10 scalefont setfont                                      
/ypos ytitle def                                                                
leftmargin ypos moveto                                                          
title show                                                                      
/Times-Roman findfont point scalefont setfont                                   
pageno -1 gt {                                                                  
/pageno pageno 1 add def                                                        
right ypos moveto                                                               
pageno num cvs show }                                                           
if                                                                              
pageno -1 eq                                                                    
{                                                                               
right ypos moveto                                                               
(i) show                                                                        
}                                                                               
if                                                                              
pageno -2 eq                                                                    
{                                                                               
right ypos moveto                                                               
(ii) show                                                                       
}                                                                               
if                                                                              
pageno -3 eq                                                                    
{                                                                               
right ypos moveto                                                               
(iii) show                                                                      
}                                                                               
if                                                                              
pageno -4 eq                                                                    
{                                                                               
right ypos moveto                                                               
(iv) show                                                                       
}                                                                               
if                                                                              
pageno -5 eq                                                                    
{                                                                               
right ypos moveto                                                               
(v) show                                                                        
}                                                                               
if                                                                              
pageno -6 eq                                                                    
{                                                                               
right ypos moveto                                                               
(vi) show                                                                       
}                                                                               
if                                                                              
pageno -7 eq                                                                    
{                                                                               
right ypos moveto                                                               
(vii) show                                                                      
}                                                                               
if                                                                              
pageno -8 eq                                                                    
{                                                                               
right ypos moveto                                                               
(viii) show                                                                     
}                                                                               
if                                                                              
pageno -9 eq                                                                    
{                                                                               
right ypos moveto                                                               
(ix) show                                                                       
}                                                                               
if                                                                              
pageno -10 eq                                                                   
{                                                                               
right ypos moveto                                                               
(x) show                                                                        
}                                                                               
if                                                                              
pageno 0 lt                                                                     
{                                                                               
/pageno pageno 1 sub def                                                        
}                                                                               
if                                                                              
/ypos top def                                                                   
}                                                                               
def                                                                             
                                                                                
/Chapter                                                                        
{                                                                               
ypos top ne                                                                     
{ Newpage } if                                                                  
/chap (Chapter ) def                                                            
/Times-Bold findfont 14 scalefont setfont                                       
/chapno chapno 1 add def                                                        
/wid chap stringwidth pop def                                                   
/n chapno num cvs def                                                           
/wnum n stringwidth pop def                                                     
/wid wid wnum add def                                                           
/w right leftmargin sub wid sub 2 div leftmargin add def                        
w ypos moveto                                                                   
chap show                                                                       
n show                                                                          
%draw line                                                                      
/x currentpoint pop def                                                         
/ypos ypos 5 sub def                                                            
newpath                                                                         
x ypos moveto                                                                   
w ypos lineto                                                                   
0 setgray                                                                       
stroke                                                                          
/sectno 0 def                                                                   
/ypos ypos linegap sub  def                                                     
/Times-Roman findfont point scalefont setfont                                   
%add other text if required                                                     
ichap 1 eq                                                                      
{ /wid chaptext stringwidth pop def                                             
/w right leftmargin sub wid sub 2 div leftmargin add def                        
w ypos moveto                                                                   
chaptext show                                                                   
/ypos ypos linegap sub linegap sub def                                          
/ichap 0 def                                                                    
}                                                                               
if                                                                              
}                                                                               
def                                                                             
                                                                                
                                                                                
/Write                                                                          
                                                                                
{ /Times-Roman findfont point scalefont setfont                                 
/linewidth right left sub def                                                   
/wid textstring stringwidth pop def                                             
/ckern linewidth wid sub def                                                    
last 1 eq                                                                       
{ /ckern 0 def } if                                                             
ckern 0 ne                                                                      
{ /ckern ckern numspace div def } if                                            
left ypos moveto %set starting position of text                                 
ckern 0 8#040 textstring widthshow                                              
%adds ckern to each space ( 8#040 )                                             
%wstring show                                                                   
/ypos ypos linegap sub def % move down the page                                 
} def                                                                           
                                                                                
/WriteCalc                                                                      
                                                                                
{ /Times-Roman findfont point scalefont setfont                                 
left ypos moveto                                                                
/linewidth right left sub def                                                   
/wid textstring stringwidth pop def                                             
/ckern linewidth wid sub def                                                    
last 1 eq                                                                       
{ /ckern 0 def } if                                                             
ckern 0 ne                                                                      
{ /ckern ckern numspace div def } if                                            
} def                                                                           
                                                                                
/WritePart                                                                      
{                                                                               
ckern 0 8#040 textstring widthshow                                              
%adds ckern to each space ( 8#040 )                                             
%wstring show                                                                   
} def                                                                           
                                                                                
/WriteBold                                                                      
{                                                                               
/Times-Bold findfont point scalefont setfont                                    
ckern 0 8#040 textstring widthshow                                              
/Times-Roman findfont point scalefont setfont                                   
} def                                                                           
                                                                                
/WriteItalic                                                                    
{                                                                               
/Times-Italic findfont point scalefont setfont                                  
ckern 0 8#040 textstring widthshow                                              
/Times-Roman findfont point scalefont setfont                                   
} def                                                                           
                                                                                
/Literal                                                                        
{                                                                               
/Courier-BoldOblique findfont litpoint scalefont setfont                        
left ypos moveto                                                                
litstring show                                                                  
/ypos ypos litgap sub def                                                       
/Times-Roman findfont point scalefont setfont                                   
}                                                                               
def                                                                             
                                                                                
                                                                                
/Blank                                                                          
{                                                                               
ypos top ne                                                                     
{ /ypos ypos linegap sub def } if                                               
} def                                                                           
                                                                                
/LitBlank                                                                       
{                                                                               
ypos top ne                                                                     
{ /ypos ypos litgap sub def } if                                                
} def                                                                           
                                                                                
/Instruction                                                                    
{                                                                               
%ind is the indent required specified previously                                
/Times-Bold findfont point scalefont setfont                                    
left ypos moveto                                                                
instr show                                                                      
/ypos ypos linegap sub def                                                      
/left left indent add def                                                       
%indenting for text following                                                   
/Times-Roman findfont point scalefont setfont                                   
/ypos ypos linegap def                                                          
}                                                                               
def                                                                             
                                                                                
/Section                                                                        
                                                                                
{ /left leftmargin def                                                          
%bold and underlined followed by text secttext                                  
/Times-Bold findfont point scalefont setfont                                    
/sectno sectno 1 add def                                                        
left ypos moveto                                                                
/n chapno num cvs def                                                           
n show                                                                          
(.) show                                                                        
/n sectno num cvs def                                                           
n show                                                                          
( ) show                                                                        
secttext show                                                                   
/x currentpoint pop def                                                         
/ypos ypos 4 sub def                                                            
newpath                                                                         
0 setgray                                                                       
x ypos moveto                                                                   
left ypos lineto                                                                
stroke                                                                          
/Times-Roman findfont point scalefont setfont                                   
/ypos ypos linegap sub def                                                      
}                                                                               
def                                                                             
                                                                                
/List                                                                           
{                                                                               
/Times-Bold findfont point scalefont setfont                                    
/listno listno 1 add def                                                        
/n listno num cvs def                                                           
left ypos moveto                                                                
n show                                                                          
(\)) show                                                                       
/Times-Roman findfont point scalefont setfont                                   
left indent add ypos moveto                                                     
liststring show                                                                 
/ypos ypos linegap sub def                                                      
}                                                                               
def                                                                             
                                                                                
/Docontents                                                                     
{                                                                               
/pageno -1 def                                                                  
Newpage                                                                         
/ctext (Table of Contents) def                                                  
/Times-Bold findfont 14 scalefont setfont                                       
/wid ctext stringwidth pop def                                                  
/w right leftmargin sub wid sub 2 div leftmargin add def                        
w ypos moveto                                                                   
ctext show                                                                      
/x currentpoint pop def                                                         
/ypos ypos 5 sub def                                                            
newpath                                                                         
x ypos moveto                                                                   
w ypos lineto                                                                   
0 setgray                                                                       
stroke                                                                          
/ypos ypos linegap sub def                                                      
/Times-Roman findfont point scalefont setfont                                   
}                                                                               
def                                                                             
                                                                                
/Indexchapter                                                                   
{                                                                               
/ypos ypos linegap sub def                                                      
ypos bottom lt                                                                  
{ Newpage } if                                                                  
/left leftmargin indent add def                                                 
left ypos moveto                                                                
(Chapter ) show                                                                 
/n chapno num cvs def                                                           
n show                                                                          
( : ) show                                                                      
Indextext show                                                                  
right indent sub ypos moveto                                                    
/n Indexpage num cvs def                                                        
n show                                                                          
}                                                                               
def                                                                             
                                                                                
/Indexsection                                                                   
{                                                                               
/ypos ypos linegap sub def                                                      
ypos bottom lt                                                                  
{ Newpage } if                                                                  
/left leftmargin indent add indent add def                                      
left ypos moveto                                                                
Indextext show                                                                  
right indent sub ypos moveto                                                    
/n Indexpage num cvs def                                                        
n show                                                                          
}                                                                               
def                                                                             
                                                                                
/Endcontents                                                                    
{                                                                               
ypos top ne { Newpage } if                                                      
}                                                                               
def                                                                             
                                                                                
/Doindex                                                                        
{                                                                               
ypos top ne {Newpage} if                                                        
/itext (Index) def                                                              
%djw /Times-Bold findfont 14 scalefont setfont                                  
/Times-Bold findfont 12 scalefont setfont                                       
/wid itext stringwidth pop def                                                  
/w right leftmargin sub wid sub 2 div leftmargin add def                        
w ypos moveto                                                                   
itext show                                                                      
/x currentpoint pop def                                                         
/ypos ypos 5 sub def                                                            
newpath                                                                         
x ypos moveto                                                                   
w ypos lineto                                                                   
0 setgray                                                                       
stroke                                                                          
/ypos ypos linegap sub def                                                      
%djw /Times-Roman findfont 10 scalefont setfont                                 
/Times-Roman findfont 8 scalefont setfont                                       
/oldtext ( ) def                                                                
/indexline 15 def                                                               
/indexflag 0 def                                                                
/column2 right leftmargin sub 2 div leftmargin add def                          
/yindtop ypos def                                                               
}                                                                               
def                                                                             
                                                                                
/Index                                                                          
{                                                                               
Indextext oldtext eq                                                            
  {                                                                             
  (,) show                                                                      
   /n Indexpage num cvs def                                                     
   n show                                                                       
  }                                                                             
if                                                                              
Indextext oldtext ne                                                            
  {                                                                             
%djw  /ypos ypos indexline sub def                                              
  /ypos ypos linegap sub def                                                    
  ypos bottom lt                                                                
    {                                                                           
    indexflag 0 eq                                                              
      {                                                                         
      /indexflag 2 def                                                          
      /ypos yindtop indexline sub def                                           
      }                                                                         
    if                                                                          
    indexflag 1 eq                                                              
      {                                                                         
      Newpage                                                                   
      /yindtop ypos def                                                         
      /indexflag 0 def                                                          
%djw      /Times-Roman findfont 10 scalefont setfont                            
      /Times-Roman findfont 8 scalefont setfont                                 
      }                                                                         
    if                                                                          
    indexflag 2 eq                                                              
      {                                                                         
      /indexflag 1 def                                                          
      }                                                                         
    if                                                                          
    indexflag 3 eq                                                              
      {                                                                         
      Newpage                                                                   
      /yindtop ypos def                                                         
%djw      /Times-Roman findfont 10 scalefont setfont                            
      /Times-Roman findfont 8 scalefont setfont                                 
      }                                                                         
    if                                                                          
    }                                                                           
  if                                                                            
  indexflag 0 eq                                                                
    {                                                                           
    leftmargin ypos moveto                                                      
    }                                                                           
  if                                                                            
  indexflag 1 eq                                                                
    {                                                                           
    column2 ypos moveto                                                         
    }                                                                           
  if                                                                            
  indexflag 3 eq                                                                
    {                                                                           
    leftmargin ypos moveto                                                      
    }                                                                           
  if                                                                            
  Indextext show                                                                
  (  ) show                                                                     
  /n Indexpage num cvs def                                                      
  n show                                                                        
  /oldtext Indextext def                                                        
  }                                                                             
if                                                                              
}                                                                               
def                                                                             
%end postscript header                                                          
/title (               INTRODUCTION) def                                                                                                                                                                                                                                                                    
/banner (INTRODUCTION) def                                                                                                                                                                                                                                                                                  
Newpage
/chaptext (Introduction) def                                                                                                                                                                                                                                                                                
/ichap 1 def                                                                                                                                                                                                                                                                                                
Chapter 
/left leftmargin def 
/left  118 def /ipflag    1 def /numspace   13 def
/textstring (
CAMERON was designed and built in the Chemical Crystallography Laboratory, Oxford, by Lisa Pearce,
) def
/last 0 def 
Write
/left  108 def /ipflag    0 def /numspace   14 def
/textstring (
Keith Prout and David Watkin. Many people have contributed ides for improvements, and Louis Ferrugia
) def
/last 0 def 
Write
/ipflag    0 def /left  108 def
/last 1 def 
/textstring (
pioneerd a completely WINDOWS based version. 
) def
Write
/secttext (HOW TO CONTROL THE PROGRAM) def Section                                                                                                                                                                                                                                                          
/left  118 def /ipflag    1 def /numspace   19 def
/textstring (
The program is controlled by typing commands at the keyboard, by use of a mouse to pick items from a
) def
/last 0 def 
Write
/ipflag    0 def /left  108 def
/last 1 def 
/textstring (
menu, or by using the mouse to manipulate the diagram. 
) def
Write
/secttext (Command Groups) def Section                                                                                                                                                                                                                                                                      
/left  118 def /ipflag    1 def /numspace   13 def
/textstring (
The commands have been collected into groups \(twenty-three at present\). Each group contains commands
) def
/last 0 def 
Write
/left  108 def /ipflag    0 def /numspace   15 def
/textstring (
and sub-commands which perform related functions or which will act as qualifiers to each other. The
) def
/last 0 def 
Write
/left  108 def /ipflag    0 def /numspace   13 def
/textstring (
command processor will spot invalid combinations of commands and sub-commands and enter error mode.
) def
/last 0 def 
Write
/ipflag    0 def /left  108 def
/last 1 def 
/textstring (
Once in this mode the error can be corrected. 
) def
Write
/left  118 def /ipflag    1 def /numspace   17 def
/textstring (
Command groups are used to decide when the user has finished entering all the qualifiers for a particular
) def
/last 0 def 
Write
/left  108 def /ipflag    0 def /numspace   16 def
/textstring (
operation. The qualifiers are assumed to be finished when a command of another group is entered. For
) def
/last 0 def 
Write
/ipflag    0 def /left  108 def
/last 1 def 
/textstring (
example :- 
) def
Write
/left leftmargin def 
/litpoint     8 def 
/litgap     8 def 
LitBlank
/litstring 
(XROT 20 YROT 30 VIEW LINE ALL) def Literal                                                                                                                                                                                                                                                                 
LitBlank
/left  118 def /ipflag    1 def /numspace   19 def
/textstring (
XROT, YROT and VIEW are all in the same group but LINE \(a command that sets the drawing style\) is
) def
/last 0 def 
WriteCalc
/textstring (XROT, ) def
WriteBold
/textstring (YROT ) def
WriteBold
/textstring (and ) def WritePart
/textstring (VIEW ) def
WriteBold
/textstring (are all in the same group but ) def WritePart
/textstring (LINE ) def
WriteBold
/textstring (\(a command that sets the drawing style\) is) def WritePart
/ypos ypos linegap sub def
/left  108 def /ipflag    0 def /numspace   15 def
/textstring (
not. When the command processor reaches the LINE command it will then execute the previous commands
) def
/last 0 def 
WriteCalc
/textstring (not. When the command processor reaches the ) def WritePart
/textstring (LINE ) def
WriteBold
/textstring (command it will then execute the previous commands) def WritePart
/ypos ypos linegap sub def
/left  108 def /ipflag    0 def /numspace   21 def
/textstring (
ie XROT to VIEW. This is useful because it means that the user does not need to input all the qualifiers on
) def
/last 0 def 
WriteCalc
/textstring (ie ) def WritePart
/textstring (XROT ) def
WriteBold
/textstring (to ) def WritePart
/textstring (VIEW. ) def
WriteBold
/textstring (This is useful because it means that the user does not need to input all the qualifiers on) def WritePart
/ypos ypos linegap sub def
/left  108 def /ipflag    0 def /numspace   21 def
/textstring (
one line, and also because the user does not need to tell the computer when it has finished with an operation -
) def
/last 0 def 
Write
/ipflag    0 def /left  108 def
/last 1 def 
/textstring (
the computer is able to work this out for itself. The input lines :- 
) def
Write
/left leftmargin def 
/litpoint     8 def 
/litgap     8 def 
LitBlank
/litstring 
(XROT 20 YROT 30 VIEW LINE) def Literal                                                                                                                                                                                                                                                                     
LitBlank
/ipflag    0 def /left  108 def
/last 1 def 
/textstring (
and 
) def
Write
/left leftmargin def 
/litpoint     8 def 
/litgap     8 def 
LitBlank
/litstring 
(XROT 20) def Literal                                                                                                                                                                                                                                                                                       
/litstring 
(YROT) def Literal                                                                                                                                                                                                                                                                                          
/litstring 
(20 VIEW) def Literal                                                                                                                                                                                                                                                                                       
/litstring 
(LINE) def Literal                                                                                                                                                                                                                                                                                          
LitBlank
/ipflag    0 def /left  108 def
/last 1 def 
/textstring (
will produce exactly the same results. 
) def
Write
/left  118 def /ipflag    1 def /numspace   18 def
/textstring (
If the user wishes to execute a group of commands without entering a command of another group this can
) def
/last 0 def 
Write
/ipflag    0 def /left  108 def
/last 1 def 
/textstring (
be done by sending a blank line to the command processor \(ie press the RETURN key twice\). 
) def
Write
/left leftmargin def 
/litpoint     8 def 
/litgap     8 def 
LitBlank
/litstring 
(XROT 20 YROT 30 VIEW <RETURN> <RETURN>) def Literal                                                                                                                                                                                                                                                        
LitBlank
/ipflag    0 def /left  108 def
/last 1 def 
/textstring (
will execute the three commands without the need for LINE. 
) def
WriteCalc
/textstring (will execute the three commands without the need for ) def WritePart
/textstring (LINE. ) def
WriteBold
/ypos ypos linegap sub def
/secttext (ERROR HANDLING) def Section                                                                                                                                                                                                                                                                      
/left  118 def /ipflag    1 def /numspace   17 def
/textstring (
The command processor is able to check for some errors in the commands input by the user. The
) def
/last 0 def 
Write
/ipflag    0 def /left  108 def
/last 1 def 
/textstring (
computer checks for two types of error: 
) def
Write
Blank
/left leftmargin def 
/litpoint     8 def 
/litgap     8 def 
LitBlank
/litstring 
(1. Whether a command \/ sub-command combination is valid.) def Literal                                                                                                                                                                                                                                     
/litstring 
(2. Whether the arguments supplied after a command are valid and also if there is) def Literal                                                                                                                                                                                                              
/litstring 
(the correct number of arguments.) def Literal                                                                                                                                                                                                                                                              
LitBlank
/left  118 def /ipflag    1 def /numspace   20 def
/textstring (
The action taken after an error depends upon the setting of the EDIT flag. If EDIT is OFF, only an error
) def
/last 0 def 
WriteCalc
/textstring (The action taken after an error depends upon the setting of the ) def WritePart
/textstring (EDIT ) def
WriteBold
/textstring (flag. If EDIT is OFF, only an error) def WritePart
/ypos ypos linegap sub def
/left  108 def /ipflag    0 def /numspace   20 def
/textstring (
message is displayed. If EDIT is ON, the faulty input can be edited. Once an error has been detected the user
) def
/last 0 def 
Write
/left  108 def /ipflag    0 def /numspace   19 def
/textstring (
can take action and modify the input line so that as many commands as possible can be processed. \(If error
) def
/last 0 def 
Write
/left  108 def /ipflag    0 def /numspace   19 def
/textstring (
checking is not carried out at this level, the detection of an error while executing a command will cause that
) def
/last 0 def 
Write
/ipflag    0 def /left  108 def
/last 1 def 
/textstring (
command - and possibly its sub commands - to be lost.\) 
) def
Write
/ipflag    1 def /left  118 def
/last 1 def 
/textstring (
The user is given three options once an error has been detected. 
) def
Write
/left leftmargin def 
/instr (Abandon) def Instruction                                                                                                                                                                                                                                                                            
/ipflag    0 def /left  118 def
/last 1 def 
/textstring (
Do not execute any more commands not yet executed. 
) def
Write
/left leftmargin def 
/instr (Edit) def Instruction                                                                                                                                                                                                                                                                               
/left  118 def /ipflag    0 def /numspace   20 def
/textstring (
The action taken by choosing the second option will depend on the nature of the error. If a word has been
) def
/last 0 def 
Write
/left  118 def /ipflag    0 def /numspace   18 def
/textstring (
input that the computer has not recognised the user will be asked to enter an alternative word. If <return>
) def
/last 0 def 
Write
/left  118 def /ipflag    0 def /numspace   21 def
/textstring (
is used then the word is replaced by a blank space - it is effectively deleted from the input line. If too
) def
/last 0 def 
Write
/left  118 def /ipflag    0 def /numspace   14 def
/textstring (
many arguments are supplied the user is given the opportunity to delete the excess arguments.
) def
/last 0 def 
Write
/ipflag    0 def /left  118 def
/last 1 def 
/textstring (
Alternatively if arguments are missing the user will be asked to input them. 
) def
Write
/left leftmargin def 
/instr (Help) def Instruction                                                                                                                                                                                                                                                                               
/left  118 def /ipflag    0 def /numspace   18 def
/textstring (
Help information is supplied if the user requests it. This will say what arguments, if any, are required by
) def
/last 0 def 
Write
/ipflag    0 def /left  118 def
/last 1 def 
/textstring (
the current command. Also, if any sub commands are valid in the context of the error these are listed. 
) def
Write
/ipflag    1 def /left  128 def
/last 1 def 
/textstring (
For example, the input line 
) def
Write
/left leftmargin def 
/litpoint     8 def 
/litgap     8 def 
LitBlank
Newpage
/litstring 
(XROT 10 YROT ZROT 15 VIEW) def Literal                                                                                                                                                                                                                                                                     
LitBlank
/ipflag    0 def /left  118 def
/last 1 def 
/textstring (
contains an error - an argument is missing after YROT. The program will give the user three options :- 
) def
WriteCalc
/textstring (contains an error - an argument is missing after ) def WritePart
/textstring (YROT. ) def
WriteBold
/textstring (The program will give the user three options :- ) def WritePart
/ypos ypos linegap sub def
/left leftmargin def 
/litpoint     8 def 
/litgap     8 def 
LitBlank
/litstring 
(Abandon      Don't execute any of the commands) def Literal                                                                                                                                                                                                                                                
/litstring 
(Edit         The user can supply the needed argument) def Literal                                                                                                                                                                                                                                          
/litstring 
(             and the new line is then processed.) def Literal                                                                                                                                                                                                                                              
/litstring 
(Help         This will display the help information) def Literal                                                                                                                                                                                                                                           
Blank
/litstring 
(     This command requires one numeric argument - the angle of rotation in degre) def Literal                                                                                                                                                                                                              
LitBlank
/secttext (The HELP facility) def Section                                                                                                                                                                                                                                                                   
/left  118 def /ipflag    1 def /numspace   18 def
/textstring (
The CAMERON HELP facility can be entered in one of two ways, either once an error has occurred \(as
) def
/last 0 def 
WriteCalc
/textstring (The CAMERON ) def WritePart
/textstring (HELP ) def
WriteBold
/textstring (facility can be entered in one of two ways, either once an error has occurred \(as) def WritePart
/ypos ypos linegap sub def
/left  108 def /ipflag    0 def /numspace   16 def
/textstring (
described above\) or by requesting it directly. This second way of accessing HELP is achieved by entering
) def
/last 0 def 
Write
/left  108 def /ipflag    0 def /numspace   21 def
/textstring (
'HELP' or '?' at any point in the input line. If a command follows 'HELP' \/ '?' then information is given on
) def
/last 0 def 
WriteCalc
/textstring ('HELP' ) def
WriteBold
/textstring (or '?' at any point in the input line. If a command follows ) def WritePart
/textstring ('HELP' ) def
WriteBold
/textstring (\/ '?' then information is given on) def WritePart
/ypos ypos linegap sub def
/left  108 def /ipflag    0 def /numspace   17 def
/textstring (
this command - otherwise information is given on the previous command \(if any\). If no HELP is available
) def
/last 0 def 
Write
/left  108 def /ipflag    0 def /numspace   16 def
/textstring (
\(because the command is not recognised\) then the user is supplied with general HELP information. The only
) def
/last 0 def 
Write
/left  108 def /ipflag    0 def /numspace   17 def
/textstring (
difference between 'HELP' and '?' is in the detail of the information supplied. Each command comes with a
) def
/last 0 def 
Write
/left  108 def /ipflag    0 def /numspace   17 def
/textstring (
help information line. Entering '?' will provide the user with the information line for the command on which
) def
/last 0 def 
Write
/left  108 def /ipflag    0 def /numspace   18 def
/textstring (
you have requested HELP and a list of the sub-commands that are valid at this point. Entering 'HELP' gives
) def
/last 0 def 
Write
/left  108 def /ipflag    0 def /numspace   17 def
/textstring (
the same information except that the help line for each of the sub-commands shown is also listed. 'HELP'
) def
/last 0 def 
Write
/ipflag    0 def /left  108 def
/last 1 def 
/textstring (
will therefore provide the user with more detailed information than '?' will. 
) def
Write
/left  118 def /ipflag    1 def /numspace   17 def
/textstring (
Once the HELP information has been read the user may 'Continue' or 'Abort'. The later two options are
) def
/last 0 def 
Write
/left  108 def /ipflag    0 def /numspace   17 def
/textstring (
the same as for Error Handling and are described above. 'Continue' simply removes the word 'HELP' or '?'
) def
/last 0 def 
Write
/ipflag    0 def /left  108 def
/last 1 def 
/textstring (
\(and any following words\) from the input line and the user can carry on as before. 
) def
Write
/secttext (Mouse Activation) def Section                                                                                                                                                                                                                                                                    
/left  118 def /ipflag    1 def /numspace   21 def
/textstring (
The Mouse can be used to pick out atoms \(and elements if a KEY is present\). In some cases this is much
) def
/last 0 def 
Write
/left  108 def /ipflag    0 def /numspace   19 def
/textstring (
quicker than typing on the keyboard - especially if the user does not know the names of the atoms concerned.
) def
/last 0 def 
Write
/ipflag    0 def /left  108 def
/last 1 def 
/textstring (
The mouse cursor \(an arrow\) is present once an appropriate output device has been chosen. 
) def
Write
/left  118 def /ipflag    1 def /numspace   17 def
/textstring (
For some commands the mouse is used for functions other than atom\/element picking. In such cases - eg
) def
/last 0 def 
Write
/ipflag    0 def /left  108 def
/last 1 def 
/textstring (
text positioning and labelling - the mouse is activated by typing MOUSE as a separate command. 
) def
Write
Blank
/secttext (General Input Syntax) def Section                                                                                                                                                                                                                                                                
/left  118 def /ipflag    1 def /numspace   18 def
/textstring (
When the atoms are in their initial state \(ie no symmetry operators have been applied\) they are referred to
) def
/last 0 def 
Write
/left  108 def /ipflag    0 def /numspace   16 def
/textstring (
by their normal atom or element names. With commands that allow elements to be affected eg COLOUR,
) def
/last 0 def 
Write
/left  108 def /ipflag    0 def /numspace   21 def
/textstring (
BALL you may use a '*' to refer to ALL atoms. For example CONNECT O * 0.0 3.0 will find all bonds
) def
/last 0 def 
Write
/left  108 def /ipflag    0 def /numspace   19 def
/textstring (
between oxygen and any other atom within 3 angstroms. A '*' can also be used to refer to GROUP names
) def
/last 0 def 
Write
/ipflag    0 def /left  108 def
/last 1 def 
/textstring (
\(see DEFGROUP later\). 
) def
Write
/left  118 def /ipflag    1 def /numspace   14 def
/textstring (
Once pack operations have been carried out the atoms are identified differently. During PACK and
) def
/last 0 def 
Write
/ipflag    0 def /left  108 def
/last 1 def 
/textstring (
ENCLOSURE the user is provided with information similar to :- 
) def
Write
/left leftmargin def 
/litpoint     8 def 
/litgap     8 def 
LitBlank
/litstring 
(2 additional symmetry generated units.) def Literal                                                                                                                                                                                                                                                        
LitBlank
/left  108 def /ipflag    0 def /numspace   16 def
/textstring (
The atoms generated will be referred to by suffixing their packnumber eg O1_2. These numbers can be
) def
/last 0 def 
Write
/left  108 def /ipflag    0 def /numspace   14 def
/textstring (
shown by using LABEL GENERATED. Therefore, consider an asymmetric unit which contains N1 and O2.
) def
/last 0 def 
Write
/ipflag    0 def /left  108 def
/last 1 def 
/textstring (
The following will be available after packing:- 
) def
Write
/left leftmargin def 
/litpoint     8 def 
/litgap     8 def 
LitBlank
/litstring 
(N1_1      the single atom) def Literal                                                                                                                                                                                                                                                                     
/litstring 
(N1        all N1 atoms in the packed structure) def Literal                                                                                                                                                                                                                                                
/litstring 
(N         all the nitrogen atoms) def Literal                                                                                                                                                                                                                                                              
/litstring 
(N_2       all the nitrogen atoms with pack number 2) def Literal                                                                                                                                                                                                                                           
/litstring 
(*_1       all the atoms with pack number 2) def Literal                                                                                                                                                                                                                                                    
LitBlank
/left  108 def /ipflag    0 def /numspace   14 def
/textstring (
These pack numbered atom identifiers are produced by mouse clicking on the atoms concerned. The
) def
/last 0 def 
Write
/left  108 def /ipflag    0 def /numspace   14 def
/textstring (
symmetry operation used to generate the atoms can be found from INFO PACKNUMBER. The operators
) def
/last 0 def 
Write
/ipflag    0 def /left  108 def
/last 1 def 
/textstring (
are also written to the CRYSTALS listing file 
) def
Write
Blank
/left  118 def /ipflag    1 def /numspace   19 def
/textstring (
When CAMERON is parsing the commands input it checks to see whether the next work on the line is a
) def
/last 0 def 
Write
/left  108 def /ipflag    0 def /numspace   17 def
/textstring (
command or not. Only the first 4 characters of each word are significant. Therefore, the processor will not
) def
/last 0 def 
Write
/left  108 def /ipflag    0 def /numspace   15 def
/textstring (
know the difference between the command COLOUR and the file COLOUR.PST. If you require the later
) def
/last 0 def 
Write
/ipflag    0 def /left  108 def
/last 1 def 
/textstring (
then it must be enclosed in quotes - eg COPY "COLOUR.PST". 
) def
Write
/title (               HOW TO GET STARTED) def                                                                                                                                                                                                                                                              
/banner (HOW TO GET STARTED) def                                                                                                                                                                                                                                                                            
Newpage
/chaptext (How To Get Started) def                                                                                                                                                                                                                                                                          
/ichap 1 def                                                                                                                                                                                                                                                                                                
Chapter 
/left leftmargin def 
/left  118 def /ipflag    1 def /numspace   20 def
/textstring (
There is a basic 'startup' procedure that can be followed in order to get a picture on to the screen. The
) def
/last 0 def 
Write
/ipflag    0 def /left  108 def
/last 1 def 
/textstring (
following steps are required :- 
) def
Write
/left leftmargin def 
/litpoint     8 def 
/litgap     8 def 
LitBlank
/litstring 
(1\)      Load in a spacegroup if required) def Literal                                                                                                                                                                                                                                                     
/litstring 
(2\)      Load in the unit cell dimensions) def Literal                                                                                                                                                                                                                                                     
/litstring 
(3\)      Load in the atomic coordinates) def Literal                                                                                                                                                                                                                                                       
/litstring 
(4\)      Select an output device) def Literal                                                                                                                                                                                                                                                              
/litstring 
(5\)      Set the atom drawing style to BALL) def Literal                                                                                                                                                                                                                                                   
/litstring 
(6\)      Draw a picture) def Literal                                                                                                                                                                                                                                                                       
LitBlank
/left  108 def /ipflag    0 def /numspace   16 def
/textstring (
This can be accomplished with the following commands, which are illustrated for a compound which has a
) def
/last 0 def 
Write
/left  108 def /ipflag    0 def /numspace   13 def
/textstring (
spacegroup P 21, unit cell parameters a=6.0, b=7.0, c=8.0, alpha=90, beta=115, gamma=90. The atomic
) def
/last 0 def 
Write
/ipflag    0 def /left  108 def
/last 1 def 
/textstring (
coordinates are held in a "list5" type file NIGEL.L5. 
) def
Write
/left leftmargin def 
/litpoint     8 def 
/litgap     8 def 
LitBlank
/litstring 
(SPACEGROUP P 21) def Literal                                                                                                                                                                                                                                                                               
/litstring 
(INPUT) def Literal                                                                                                                                                                                                                                                                                         
/litstring 
(CELL 6 7 8 90 115 90) def Literal                                                                                                                                                                                                                                                                          
/litstring 
(LIST5 NIGEL.L5) def Literal                                                                                                                                                                                                                                                                                
/litstring 
(DEVICE VGA) def Literal                                                                                                                                                                                                                                                                                    
/litstring 
(BALL ALL) def Literal                                                                                                                                                                                                                                                                                      
/litstring 
(FILL) def Literal                                                                                                                                                                                                                                                                                          
/litstring 
(VIEW) def Literal                                                                                                                                                                                                                                                                                          
LitBlank
/left  118 def /ipflag    1 def /numspace   17 def
/textstring (
From here the view direction can be controlled via XROT, YROT, ZROT or CURSOR. If you require a
) def
/last 0 def 
Write
/ipflag    0 def /left  108 def
/last 1 def 
/textstring (
picture of all the atoms in the unit cell, and the unit the commands are :- 
) def
Write
/left leftmargin def 
/litpoint     8 def 
/litgap     8 def 
LitBlank
/litstring 
(PACK CELL) def Literal                                                                                                                                                                                                                                                                                     
/litstring 
(INCLUDE CELL) def Literal                                                                                                                                                                                                                                                                                  
/litstring 
(VIEW) def Literal                                                                                                                                                                                                                                                                                          
LitBlank
/title (               DATA INPUT) def                                                                                                                                                                                                                                                                      
/banner (DATA INPUT) def                                                                                                                                                                                                                                                                                    
Newpage
/chaptext (Data Input) def                                                                                                                                                                                                                                                                                  
/ichap 1 def                                                                                                                                                                                                                                                                                                
Chapter 
/left leftmargin def 
/left  118 def /ipflag    1 def /numspace   15 def
/textstring (
At present data is read from CRYSTALS generated LIST5 files and CSSR files \(see the CRYSTALS
) def
/last 0 def 
Write
/ipflag    0 def /left  108 def
/last 1 def 
/textstring (
manual\). 
) def
Write
/secttext (Input of CRYSTALS List 5 files) def Section                                                                                                                                                                                                                                                      
/left  118 def /ipflag    1 def /numspace   18 def
/textstring (
These files do not contain information on the dimensions of the unit cell. It is therefore necessary to use
) def
/last 0 def 
Write
/ipflag    0 def /left  108 def
/last 1 def 
/textstring (
CELL to enter this information prior to the reading of the list 5 file. 
) def
Write
/left leftmargin def 
/instr (INPUT) def Instruction                                                                                                                                                                                                                                                                              
/left leftmargin indent add def 
/instr (CELL) def Instruction                                                                                                                                                                                                                                                                               
/ipflag    0 def /left  128 def
/last 1 def 
/textstring (
The syntax of this sub-command is :- 
) def
Write
/left leftmargin def 
/litpoint     8 def 
/litgap     8 def 
LitBlank
/litstring 
(INPUT CELL a b c alpha beta gamma) def Literal                                                                                                                                                                                                                                                             
LitBlank
/left  128 def /ipflag    0 def /numspace   16 def
/textstring (
ie we require six arguments - cell dimensions in angstroms and angles in degrees. Their values are
) def
/last 0 def 
Write
/ipflag    0 def /left  128 def
/last 1 def 
/textstring (
assigned as shown above. 
) def
Write
/left leftmargin indent add indent add def
/instr (LIST5) def Instruction                                                                                                                                                                                                                                                                              
/left  138 def /ipflag    0 def /numspace   16 def
/textstring (
This command requires as its argument the name of the file that contains the atomic coordinates. The
) def
/last 0 def 
Write
/ipflag    0 def /left  138 def
/last 1 def 
/textstring (
syntax is :- 
) def
Write
/left leftmargin def 
/litpoint     8 def 
/litgap     8 def 
LitBlank
/litstring 
(LIST5 filename.L5) def Literal                                                                                                                                                                                                                                                                             
LitBlank
/ipflag    0 def /left  138 def
/last 1 def 
/textstring (
NB The LIST5 command will not be accepted without the previous command CELL. 
) def
Write
/left leftmargin indent add def 
/instr (CSSR) def Instruction                                                                                                                                                                                                                                                                               
/left  128 def /ipflag    0 def /numspace   18 def
/textstring (
CSSR files are input by using INPUT CSSR. As with LIST5 files above it is advisable to input the
) def
/last 0 def 
Write
/ipflag    0 def /left  128 def
/last 1 def 
/textstring (
symmetry information before inputting the atomic coordinates. 
) def
Write
/ipflag    1 def /left  138 def
/last 1 def 
/textstring (
Related commands : OBEY, OUTPUT 
) def
Write
/title (               OUTPUTTING DATA) def                                                                                                                                                                                                                                                                 
/banner (OUTPUTTING DATA) def                                                                                                                                                                                                                                                                               
Newpage
/chaptext (Outputting Data) def                                                                                                                                                                                                                                                                             
/ichap 1 def                                                                                                                                                                                                                                                                                                
Chapter 
/left leftmargin def 
/left leftmargin def 
/instr (OUTPUT) def Instruction                                                                                                                                                                                                                                                                             
/ipflag    0 def /left  118 def
/last 1 def 
/textstring (
CAMERON outputs data in CRYSTALS LIST5 and CSSR format. 
) def
Write
/left leftmargin indent add def 
/instr (LIST5) def Instruction                                                                                                                                                                                                                                                                              
/left  128 def /ipflag    0 def /numspace   18 def
/textstring (
This outputs a crystals list5. It must be followed by a filename. The list5 will contain LIST1 unit cell
) def
/last 0 def 
Write
/ipflag    0 def /left  128 def
/last 1 def 
/textstring (
information at the end - such a file can be re-read by CAMERON with no problem. 
) def
Write
/left leftmargin indent add def 
/instr (CSSR) def Instruction                                                                                                                                                                                                                                                                               
/left leftmargin indent add indent add def
/instr (FRACT) def Instruction                                                                                                                                                                                                                                                                              
/left leftmargin indent add indent add def
/instr (ORTH) def Instruction                                                                                                                                                                                                                                                                               
/left  138 def /ipflag    0 def /numspace   15 def
/textstring (
These subcommands are needed to specify the coodinate type for the CSSR file ie orthogonal or
) def
/last 0 def 
Write
/ipflag    0 def /left  138 def
/last 1 def 
/textstring (
fractional. The command is followed by the filename of the output file. 
) def
Write
/left leftmargin def 
/litpoint     8 def 
/litgap     8 def 
LitBlank
/litstring 
(Example:) def Literal                                                                                                                                                                                                                                                                                      
/litstring 
(OUPUT CSR FRACT mydata.css) def Literal                                                                                                                                                                                                                                                                    
LitBlank
/ipflag    1 def /left  148 def
/last 1 def 
/textstring (
Related commands : INPUT 
) def
Write
/title (               EDITING THE ATOM LIST) def                                                                                                                                                                                                                                                           
/banner (EDITING THE ATOM LIST) def                                                                                                                                                                                                                                                                         
Newpage
/chaptext (Editing The Atom List) def                                                                                                                                                                                                                                                                       
/ichap 1 def                                                                                                                                                                                                                                                                                                
Chapter 
/left leftmargin def 
/left  118 def /ipflag    1 def /numspace   19 def
/textstring (
The user is able to edit the names and elemental types of the atoms in the current list. The following
) def
/last 0 def 
Write
/ipflag    0 def /left  108 def
/last 1 def 
/textstring (
commands are available - 
) def
Write
/left leftmargin def 
/instr (RENAME) def Instruction                                                                                                                                                                                                                                                                             
/ipflag    0 def /left  118 def
/last 1 def 
/textstring (
The syntax is: 
) def
Write
/left leftmargin def 
/litpoint     8 def 
/litgap     8 def 
LitBlank
/litstring 
(    or:) def Literal                                                                                                                                                                                                                                                                                       
/litstring 
( RENAME el1 el2.) def Literal                                                                                                                                                                                                                                                                              
LitBlank
/left  128 def /ipflag    1 def /numspace   21 def
/textstring (
Arguments are entered in pairs - the first is renamed to the second - and must be like with like. i.e. you
) def
/last 0 def 
Write
/ipflag    0 def /left  118 def
/last 1 def 
/textstring (
cannot rename an atom to an element or vice versa. 
) def
Write
/left leftmargin def 
/instr (RETYPE) def Instruction                                                                                                                                                                                                                                                                             
/ipflag    0 def /left  118 def
/last 1 def 
/textstring (
This allows the user to change the element of a list of atoms. 
) def
Write
/left leftmargin indent add def 
/instr (ATOMS) def Instruction                                                                                                                                                                                                                                                                              
/ipflag    0 def /left  128 def
/last 1 def 
/textstring (
The syntax is - 
) def
Write
/left leftmargin def 
/litpoint     8 def 
/litgap     8 def 
LitBlank
/litstring 
(RETYPE element ATOM at1 at2 at3) def Literal                                                                                                                                                                                                                                                               
LitBlank
/title (               OBEYING FILES) def                                                                                                                                                                                                                                                                   
/banner (OBEYING FILES) def                                                                                                                                                                                                                                                                                 
Newpage
/chaptext (Obeying Files) def                                                                                                                                                                                                                                                                               
/ichap 1 def                                                                                                                                                                                                                                                                                                
Chapter 
/left leftmargin def 
/left leftmargin def 
/instr (OBEY) def Instruction                                                                                                                                                                                                                                                                               
/left  118 def /ipflag    0 def /numspace   18 def
/textstring (
If required the user is able to hand over control of CAMERON to an external file. This is particulary
) def
/last 0 def 
Write
/left  118 def /ipflag    0 def /numspace   21 def
/textstring (
useful if a set of operations is to be carried out on a number of pictures because the file need only be
) def
/last 0 def 
Write
/left  118 def /ipflag    0 def /numspace   19 def
/textstring (
generated once and then it can be used over and over again. At the present time CAMERON is able to
) def
/last 0 def 
Write
/left  118 def /ipflag    0 def /numspace   23 def
/textstring (
read files is its own format - ie in with the same syntax as the commands input at the keyboard - or it can
) def
/last 0 def 
Write
/ipflag    0 def /left  118 def
/last 1 def 
/textstring (
read a SNOOPI.INI file as output by CRYSTALS. The syntax is :- 
) def
Write
/left leftmargin def 
/litpoint     8 def 
/litgap     8 def 
LitBlank
/litstring 
(OBEY nnn.nn) def Literal                                                                                                                                                                                                                                                                                   
LitBlank
/left  118 def /ipflag    0 def /numspace   18 def
/textstring (
Note that any commands entered after OBEY \(on the same line\) are ignored. This is to allow for possible
) def
/last 0 def 
Write
/left  118 def /ipflag    0 def /numspace   18 def
/textstring (
errors in the OBEY file - errors will cause the OBEYed file to be closed. OBEY files may themselves
) def
/last 0 def 
Write
/ipflag    0 def /left  118 def
/last 1 def 
/textstring (
contain the names of other files to be OBEYed. 
) def
Write
Blank
/ipflag    1 def /left  128 def
/last 1 def 
/textstring (
Related commands : LOG 
) def
Write
/title (               Archiving and retrieving views) def                                                                                                                                                                                                                                                  
/banner (Archiving and retrieving views) def                                                                                                                                                                                                                                                                
Newpage
/chaptext (Archiving and retrieving views) def                                                                                                                                                                                                                                                              
/ichap 1 def                                                                                                                                                                                                                                                                                                
Chapter 
/left leftmargin def 
/left  118 def /ipflag    1 def /numspace   17 def
/textstring (
The user can archive the present structure view on disk or retrieve a previously archived view from disk.
) def
/last 0 def 
Write
/left  108 def /ipflag    0 def /numspace   16 def
/textstring (
At present only structure views residing in the same directory as the crfilev2.dsc \(the working directory\) can
) def
/last 0 def 
Write
/left  108 def /ipflag    0 def /numspace   18 def
/textstring (
be retrieved. Equally well, views can only be archived in the working directory. As an alternative to the line
) def
/last 0 def 
Write
/left  108 def /ipflag    0 def /numspace   15 def
/textstring (
commands, the user may choose the commands that are available in the pull-down menu 'File'. The
) def
/last 0 def 
Write
/ipflag    0 def /left  108 def
/last 1 def 
/textstring (
following commands are available - 
) def
Write
/left leftmargin def 
/instr (ARCHIVE) def Instruction                                                                                                                                                                                                                                                                            
/ipflag    0 def /left  118 def
/last 1 def 
/textstring (
The syntax is: 
) def
Write
/left leftmargin def 
/litpoint     8 def 
/litgap     8 def 
LitBlank
LitBlank
/left  118 def /ipflag    0 def /numspace   14 def
/textstring (
Note that the quotes \("\) are necessary to avoid confusion with non-existing sub-commands to this
) def
/last 0 def 
Write
/ipflag    0 def /left  118 def
/last 1 def 
/textstring (
command. The filename must not exceed 12 characters. 
) def
Write
Blank
/left leftmargin def 
/instr (RETRIEVE) def Instruction                                                                                                                                                                                                                                                                           
/ipflag    0 def /left  118 def
/last 1 def 
/textstring (
The syntax is: 
) def
Write
/left leftmargin def 
/litpoint     8 def 
/litgap     8 def 
LitBlank
LitBlank
/left  118 def /ipflag    0 def /numspace   14 def
/textstring (
Note that the quotes \("\) are necessary to avoid confusion with non-existing sub-commands to this
) def
/last 0 def 
Write
/ipflag    0 def /left  118 def
/last 1 def 
/textstring (
command. The filename must not exceed 12 characters. 
) def
Write
/title (               GRAPHICAL OUTPUT DEVICES) def                                                                                                                                                                                                                                                        
/banner (GRAPHICAL OUTPUT DEVICES) def                                                                                                                                                                                                                                                                      
Newpage
/chaptext (Graphical Output Devices) def                                                                                                                                                                                                                                                                    
/ichap 1 def                                                                                                                                                                                                                                                                                                
Chapter 
/left leftmargin def 
/left  118 def /ipflag    1 def /numspace   18 def
/textstring (
The user has to specify a graphical output device before the command VIEW can be used. This is done
) def
/last 0 def 
Write
/left  108 def /ipflag    0 def /numspace   16 def
/textstring (
with the command SCREEN. Note that if the title screen file CAMERON.SRT is present the screen is
) def
/last 0 def 
Write
/ipflag    0 def /left  108 def
/last 1 def 
/textstring (
automatically set to VGA. 
) def
Write
/left leftmargin def 
/instr (SCREEN) def Instruction                                                                                                                                                                                                                                                                             
/ipflag    0 def /left  118 def
/last 1 def 
/textstring (
The following devices are currently supported:- 
) def
Write
/left leftmargin indent add def 
/instr (VGA) def Instruction                                                                                                                                                                                                                                                                                
/ipflag    0 def /left  128 def
/last 1 def 
/textstring (
This sends the output to a VGA monitor eg to a PC graphics screen. 
) def
Write
/left leftmargin indent add def 
/instr (EGA) def Instruction                                                                                                                                                                                                                                                                                
/ipflag    0 def /left  128 def
/last 1 def 
/textstring (
This sends the output to an EGA monitor. 
) def
Write
/left leftmargin indent add def 
/instr (SIGMA) def Instruction                                                                                                                                                                                                                                                                              
/ipflag    0 def /left  128 def
/last 1 def 
/textstring (
This sends the output to a SIGMA terminal. 
) def
Write
/left leftmargin indent add def 
/instr (TEK) def Instruction                                                                                                                                                                                                                                                                                
/ipflag    0 def /left  128 def
/last 1 def 
/textstring (
This is used for VAX terminals with Tektronics 4010 emulation. 
) def
Write
Blank
/left leftmargin def 
/instr (HARDCOPY) def Instruction                                                                                                                                                                                                                                                                           
/left  118 def /ipflag    0 def /numspace   17 def
/textstring (
If hardcopy output is required the user must specify a separate device which is then drawn to using
) def
/last 0 def 
Write
/ipflag    0 def /left  118 def
/last 1 def 
/textstring (
COPY. Those available are :- 
) def
Write
/left leftmargin indent add def 
/instr (POSTSCRIPT) def Instruction                                                                                                                                                                                                                                                                         
/left  128 def /ipflag    0 def /numspace   19 def
/textstring (
The graphical output is sent to a file in POSTSCRIPT format so that it can be printed on a postscript
) def
/last 0 def 
Write
/ipflag    0 def /left  128 def
/last 1 def 
/textstring (
printer. 
) def
Write
/left leftmargin indent add def 
/instr (ENCAPPOST) def Instruction                                                                                                                                                                                                                                                                          
/left  128 def /ipflag    0 def /numspace   19 def
/textstring (
The graphical output will be sent to a file in the same way as with POSTSCRIPT, the only difference is
) def
/last 0 def 
Write
/left  128 def /ipflag    0 def /numspace   18 def
/textstring (
that the resulting file will be in Encapsulated form so that it can be incorporated into other packages eg
) def
/last 0 def 
Write
/ipflag    0 def /left  128 def
/last 1 def 
/textstring (
Word Perfect \(using the Graphics range of commands\). 
) def
Write
/left leftmargin indent add def 
/instr (CPOST) def Instruction                                                                                                                                                                                                                                                                              
/ipflag    0 def /left  128 def
/last 1 def 
/textstring (
This generates a file in Colour Postscript \(Level 1\) format. 
) def
Write
Blank
/left leftmargin indent add def 
/instr (CENCAP) def Instruction                                                                                                                                                                                                                                                                             
/ipflag    0 def /left  128 def
/last 1 def 
/textstring (
This generates an colour encapsulated postscript file. 
) def
Write
/ipflag    1 def /left  138 def
/last 1 def 
/textstring (
Related commands : VIEW, COPY 
) def
Write
/title (               VIEW DIRECTION CONTROL) def                                                                                                                                                                                                                                                          
/banner (VIEW DIRECTION CONTROL) def                                                                                                                                                                                                                                                                        
Newpage
/chaptext (View Direction Control) def                                                                                                                                                                                                                                                                      
/ichap 1 def                                                                                                                                                                                                                                                                                                
Chapter 
/left leftmargin def 
/left  118 def /ipflag    1 def /numspace   17 def
/textstring (
One of the most important features of a graphics package is the ease with which a required molecular
) def
/last 0 def 
Write
/left  108 def /ipflag    0 def /numspace   17 def
/textstring (
view can be obtained. CAMERON contains a large number of options which allow the user to control the
) def
/last 0 def 
Write
/ipflag    0 def /left  108 def
/last 1 def 
/textstring (
view direction. 
) def
Write
/secttext (BASIC CONTROL) def Section                                                                                                                                                                                                                                                                       
/left  118 def /ipflag    1 def /numspace   15 def
/textstring (
Five commands are available to control the view direction by applying rotations to the molecule. These
) def
/last 0 def 
Write
/left  108 def /ipflag    0 def /numspace   19 def
/textstring (
rotations are applied cumulatively - rotating about the x axis by 20 degrees then by -10 degrees will result in
) def
/last 0 def 
Write
/ipflag    0 def /left  108 def
/last 1 def 
/textstring (
an overall rotation of 10 degrees relative to the starting poi 
) def
WriteCalc
/textstring (an overall rotation of 10 degrees ) def WritePart
/textstring (relative ) def
WriteItalic
/textstring (to ) def
WriteItalic
/textstring (the ) def
WriteItalic
/textstring (starting ) def
WriteItalic
/textstring (poi ) def
WriteItalic
/ypos ypos linegap sub def
/left leftmargin def 
/instr (XROT) def Instruction                                                                                                                                                                                                                                                                               
/left  118 def /ipflag    0 def /numspace   18 def
/textstring (
This command is used to apply a rotation of n degrees about the x-axis which lies horizontally across the
) def
/last 0 def 
Write
/ipflag    0 def /left  118 def
/last 1 def 
/textstring (
screen. The syntax is: 
) def
Write
/left leftmargin def 
/litpoint     8 def 
/litgap     8 def 
LitBlank
/litstring 
(XROT n) def Literal                                                                                                                                                                                                                                                                                        
LitBlank
/left leftmargin def 
/instr (YROT) def Instruction                                                                                                                                                                                                                                                                               
/left leftmargin def 
/instr (ZROT) def Instruction                                                                                                                                                                                                                                                                               
/left  118 def /ipflag    0 def /numspace   17 def
/textstring (
These two commands are identical to XROT except for the axis about which the rotation is carried out.
) def
/last 0 def 
Write
/ipflag    0 def /left  118 def
/last 1 def 
/textstring (
The y-axis lies vertically up the screen and the z-axis is perpendicular to the screen. 
) def
Write
/left leftmargin def 
/instr (ROT) def Instruction                                                                                                                                                                                                                                                                                
/left  118 def /ipflag    0 def /numspace   16 def
/textstring (
This command is a 'shorthand' for the previous three commands as it allows you to apply three
) def
/last 0 def 
Write
/ipflag    0 def /left  118 def
/last 1 def 
/textstring (
successive rotations by entering only one command. The syntax is :- 
) def
Write
/left leftmargin def 
/litpoint     8 def 
/litgap     8 def 
LitBlank
/litstring 
(ROT x y z) def Literal                                                                                                                                                                                                                                                                                     
LitBlank
/left  118 def /ipflag    0 def /numspace   21 def
/textstring (
Note that the order of rotation is: rotate about x then y then z. The order of rotation is important - YROT
) def
/last 0 def 
Write
/left  118 def /ipflag    0 def /numspace   20 def
/textstring (
10 XROT 5 ZROT 15 will NOT produce the same result as ROT 5 10 15 as the rotation matrices are
) def
/last 0 def 
Write
/ipflag    0 def /left  118 def
/last 1 def 
/textstring (
non-commutative. 
) def
Write
/left leftmargin def 
/instr (CURSOR) def Instruction                                                                                                                                                                                                                                                                             
/left  118 def /ipflag    0 def /numspace   18 def
/textstring (
This command allows the user to control rotation with the cursor keys. Each time a key is struck a
) def
/last 0 def 
Write
/left  118 def /ipflag    0 def /numspace   18 def
/textstring (
rotation of 5 degrees is applied about the relevant axes. After each key stroke the molecule is rotated and
) def
/last 0 def 
Write
/left  118 def /ipflag    0 def /numspace   17 def
/textstring (
then re-drawn. To speed up this process the molecule is drawn in line style during the CURSOR rotation
) def
/last 0 def 
Write
/ipflag    0 def /left  118 def
/last 1 def 
/textstring (
and is not scaled. The set-up prior to CURSOR is restored once rotation is terminated. The keys used are: 
) def
Write
/left leftmargin def 
/litpoint     8 def 
/litgap     8 def 
LitBlank
/litstring 
(Rotation about the x-axis) def Literal                                                                                                                                                                                                                                                                     
Blank
/litstring 
(Positive      up arrow) def Literal                                                                                                                                                                                                                                                                        
/litstring 
(Negative      down arrow) def Literal                                                                                                                                                                                                                                                                      
Blank
/litstring 
(Rotation about the y-axis) def Literal                                                                                                                                                                                                                                                                     
Blank
/litstring 
(Positive      left arrow) def Literal                                                                                                                                                                                                                                                                      
/litstring 
(Negative      right arrow) def Literal                                                                                                                                                                                                                                                                     
Blank
/litstring 
(Rotation about the z-axis) def Literal                                                                                                                                                                                                                                                                     
Blank
/litstring 
(Positive      Delete key \(PC\)) def Literal                                                                                                                                                                                                                                                               
/litstring 
(Negative      End key \(PC\)) def Literal                                                                                                                                                                                                                                                                  
LitBlank
/ipflag    0 def /left  118 def
/last 1 def 
/textstring (
Any other key stroke will terminate the CURSOR control and draw the resultant picture. 
) def
Write
/secttext (ORIENTATION COMMANDS) def Section                                                                                                                                                                                                                                                                
/left  118 def /ipflag    1 def /numspace   17 def
/textstring (
More specific orientation of the molecule can be achieved by relating the view direction to the position of
) def
/last 0 def 
Write
/ipflag    0 def /left  108 def
/last 1 def 
/textstring (
certain atoms within the picture. 
) def
Write
/left leftmargin def 
/instr (PLANE) def Instruction                                                                                                                                                                                                                                                                              
/left  118 def /ipflag    0 def /numspace   20 def
/textstring (
In some cases it is useful to be able to define a PLANE and then set the view direction to be
) def
/last 0 def 
Write
/ipflag    0 def /left  118 def
/last 1 def 
/textstring (
perpendicular to it. The syntax of this command is :- 
) def
Write
/left leftmargin def 
/litpoint     8 def 
/litgap     8 def 
LitBlank
/litstring 
(PLANE at1 at2 at3 ...) def Literal                                                                                                                                                                                                                                                                         
LitBlank
/left  118 def /ipflag    0 def /numspace   21 def
/textstring (
At least 3 atoms must be used to define the plane \(element names will not be accepted\). If more than 3 are
) def
/last 0 def 
Write
/ipflag    0 def /left  118 def
/last 1 def 
/textstring (
used then the program calculates the best plane through the atoms and projects onto this. 
) def
Write
/left leftmargin indent add def 
/instr (ALL) def Instruction                                                                                                                                                                                                                                                                                
/ipflag    0 def /left  128 def
/last 1 def 
/textstring (
PLANE ALL will generated a 'best view' of the current structure. 
) def
Write
/left leftmargin def 
/instr (FACE) def Instruction                                                                                                                                                                                                                                                                               
/left  118 def /ipflag    0 def /numspace   17 def
/textstring (
Alternatively you may want to view onto a particular crystallographic face of the unit cell. The syntax for
) def
/last 0 def 
Write
/ipflag    0 def /left  118 def
/last 1 def 
/textstring (
this command is: 
) def
Write
/left leftmargin def 
/litpoint     8 def 
/litgap     8 def 
LitBlank
/litstring 
(FACE h k l) def Literal                                                                                                                                                                                                                                                                                    
LitBlank
Newpage
/ipflag    0 def /left  118 def
/last 1 def 
/textstring (
where h k and l are the Miller indices of the FACE in question. 
) def
Write
/left leftmargin def 
/instr (ALONG) def Instruction                                                                                                                                                                                                                                                                              
/left  118 def /ipflag    0 def /numspace   17 def
/textstring (
It is possible to define the view direction as that looking down an interatomic direction. The direction is
) def
/last 0 def 
Write
/ipflag    0 def /left  118 def
/last 1 def 
/textstring (
specified by inputting :- 
) def
Write
/left leftmargin def 
/litpoint     8 def 
/litgap     8 def 
LitBlank
/litstring 
(ALONG at1 at2) def Literal                                                                                                                                                                                                                                                                                 
LitBlank
/left  118 def /ipflag    0 def /numspace   17 def
/textstring (
As with PLANE atoms not elements must be used as the arguments. Note that the view direction is
) def
/last 0 def 
Write
/left  118 def /ipflag    0 def /numspace   20 def
/textstring (
calculated as that looking down the at1 - at2 direction ie at1 is the closest of the two. The reverse view
) def
/last 0 def 
Write
/ipflag    0 def /left  118 def
/last 1 def 
/textstring (
will be obtained by requesting ALONG at2 at1. ALONG also has a sub-command associated with it: 
) def
Write
/left leftmargin indent add def 
/instr (AXIS) def Instruction                                                                                                                                                                                                                                                                               
/left  128 def /ipflag    0 def /numspace   18 def
/textstring (
It is possible to define the view direction as looking along particular unit cell axis. The syntax of the
) def
/last 0 def 
Write
/ipflag    0 def /left  128 def
/last 1 def 
/textstring (
command is: 
) def
Write
/left leftmargin def 
/litpoint     8 def 
/litgap     8 def 
LitBlank
/litstring 
(ALONG AXIS x) def Literal                                                                                                                                                                                                                                                                                  
LitBlank
/ipflag    0 def /left  128 def
/last 1 def 
/textstring (
where x is A, B or C. 
) def
Write
/left leftmargin def 
/instr (VERTICAL) def Instruction                                                                                                                                                                                                                                                                           
/left leftmargin def 
/instr (HORIZONTAL) def Instruction                                                                                                                                                                                                                                                                         
/left  118 def /ipflag    0 def /numspace   16 def
/textstring (
These two commands are similar to ALONG except that the at1 - at2 direction is oriented up
) def
/last 0 def 
Write
/ipflag    0 def /left  118 def
/last 1 def 
/textstring (
\(VERTICAL\) or across \(HORIZONTAL\) the screen as required. 
) def
Write
/left leftmargin indent add def 
/instr (AXIS) def Instruction                                                                                                                                                                                                                                                                               
/left  128 def /ipflag    0 def /numspace   13 def
/textstring (
The AXIS sub command may be applied to the HORIZONTAL and VERTICAL commands. This
) def
/last 0 def 
Write
/left  128 def /ipflag    0 def /numspace   16 def
/textstring (
rotates the diagram around the z axis so that the required axis is HORIZONTAL or VERTICAL as
) def
/last 0 def 
Write
/ipflag    0 def /left  128 def
/last 1 def 
/textstring (
specified. This is particularly useful when generating hard copy output. 
) def
Write
/left leftmargin def 
/instr (BISECT) def Instruction                                                                                                                                                                                                                                                                             
/left  118 def /ipflag    0 def /numspace   16 def
/textstring (
This command requires three arguments, at1 at2 and at3. It will generate a view direction looking along
) def
/last 0 def 
Write
/ipflag    0 def /left  118 def
/last 1 def 
/textstring (
the bisector of the at1-at2-at3 angle. The syntax is: 
) def
Write
/left leftmargin def 
/litpoint     8 def 
/litgap     8 def 
LitBlank
/litstring 
(BISECT at1 at2 at3) def Literal                                                                                                                                                                                                                                                                            
LitBlank
/ipflag    0 def /left  118 def
/last 1 def 
/textstring (
where at2 is the apex atom. 
) def
Write
/secttext (Other related commands) def Section                                                                                                                                                                                                                                                              
/left leftmargin def 
/instr (VIEW) def Instruction                                                                                                                                                                                                                                                                               
/left  118 def /ipflag    0 def /numspace   16 def
/textstring (
The 'title' command of this group of commands is VIEW. IT IS A VERY IMPORTANT requires no
) def
/last 0 def 
Write
/left  118 def /ipflag    0 def /numspace   17 def
/textstring (
arguments as causes a picture to be output to the current output device \(see SCREEN\). The picture is
) def
/last 0 def 
Write
/ipflag    0 def /left  118 def
/last 1 def 
/textstring (
generated according to all of the parameters that are set up prior to its use. For example: 
) def
Write
/left leftmargin def 
/litpoint     8 def 
/litgap     8 def 
LitBlank
/litstring 
(XROT 10 VIEW) def Literal                                                                                                                                                                                                                                                                                  
LitBlank
/ipflag    0 def /left  118 def
/last 1 def 
/textstring (
will rotate the molecule by 10 degrees about x and then draw a picture. 
) def
Write
/left leftmargin def 
/litpoint     8 def 
/litgap     8 def 
LitBlank
/litstring 
(VIEW XROT 10) def Literal                                                                                                                                                                                                                                                                                  
LitBlank
/left  118 def /ipflag    0 def /numspace   18 def
/textstring (
would draw the picture first and then carry out the rotation. This rotation would not be observed until the
) def
/last 0 def 
Write
/ipflag    0 def /left  118 def
/last 1 def 
/textstring (
next VIEW is entered. 
) def
Write
Blank
/left leftmargin def 
/instr (COPY) def Instruction                                                                                                                                                                                                                                                                               
/left  118 def /ipflag    0 def /numspace   16 def
/textstring (
COPY is the equivalent command for hardcopy output. COPY must be followed by a filename to which
) def
/last 0 def 
Write
/left  118 def /ipflag    0 def /numspace   18 def
/textstring (
the output will be send. HARDCOPY must have been used prior to this to specify the output type. The
) def
/last 0 def 
Write
/left  118 def /ipflag    0 def /numspace   20 def
/textstring (
filename may be one that has already been used in the current run of CAMERON in which case the user is
) def
/last 0 def 
Write
/ipflag    0 def /left  118 def
/last 1 def 
/textstring (
given an option to append the information. 
) def
Write
Blank
/left leftmargin def 
/instr (MATRIX) def Instruction                                                                                                                                                                                                                                                                             
/ipflag    0 def /left  118 def
/last 1 def 
/textstring (
This command allows the user to save the current view matrix. 
) def
Write
/left leftmargin indent add def 
/instr (FILE) def Instruction                                                                                                                                                                                                                                                                               
/left  128 def /ipflag    0 def /numspace   19 def
/textstring (
This is followed by a filename. If the file exists \(and it is of the correct format\) then any matrices
) def
/last 0 def 
Write
/ipflag    0 def /left  128 def
/last 1 def 
/textstring (
contained within it are available and any matrices stored are appended to the file. 
) def
Write
/left leftmargin indent add def 
/instr (STORE) def Instruction                                                                                                                                                                                                                                                                              
/left  128 def /ipflag    0 def /numspace   20 def
/textstring (
This stores the current matrix. It is followed by a piece of text \(in quotes "text"\) to act as a description
) def
/last 0 def 
Write
/ipflag    0 def /left  128 def
/last 1 def 
/textstring (
for the matrix. On storage a number is assigned to the matrix which can be used to retrieve it later. 
) def
Write
/left leftmargin indent add def 
/instr (RETRIEVE) def Instruction                                                                                                                                                                                                                                                                           
/left  128 def /ipflag    0 def /numspace   17 def
/textstring (
This command obtains a view matrix from the file set up with MATRIX FILE. This command must be
) def
/last 0 def 
Write
/left  128 def /ipflag    0 def /numspace   16 def
/textstring (
followed by the number of the matrix required. Note that these matrices depend on the unit cell
) def
/last 0 def 
Write
/left  128 def /ipflag    0 def /numspace   17 def
/textstring (
parameters and are specific to a particular structure. They may be used for other structures but this will
) def
/last 0 def 
Write
/left  128 def /ipflag    0 def /numspace   16 def
/textstring (
have very strange results. IF this happens an operation such as ALONG AXIS C will recalculate a
) def
/last 0 def 
Write
/ipflag    0 def /left  128 def
/last 1 def 
/textstring (
correct matrix. 
) def
Write
/left leftmargin indent add def 
/instr (LIST) def Instruction                                                                                                                                                                                                                                                                               
/ipflag    0 def /left  128 def
/last 1 def 
/textstring (
This outputs a list of the descriptions and numbers of the matrices currently stored. 
) def
Write
/left leftmargin def 
Newpage
/instr (STEREO) def Instruction                                                                                                                                                                                                                                                                             
/ipflag    0 def /left  118 def
/last 1 def 
/textstring (
This generates output in the form of stereo pairs. 
) def
Write
/left leftmargin indent add def 
/instr (DEGREE) def Instruction                                                                                                                                                                                                                                                                             
/ipflag    0 def /left  128 def
/last 1 def 
/textstring (
The angle of rotation between the stereo pairs is given by using the DEGREE command. 
) def
Write
/left leftmargin def 
/instr (NOSTEREO) def Instruction                                                                                                                                                                                                                                                                           
/ipflag    0 def /left  118 def
/last 1 def 
/textstring (
Reverts output back to normal. 
) def
Write
/secttext (PHOTOGRAPHS) def Section                                                                                                                                                                                                                                                                         
/left leftmargin def 
/instr (PHOTO) def Instruction                                                                                                                                                                                                                                                                              
/left leftmargin indent add def 
/instr (ON) def Instruction                                                                                                                                                                                                                                                                                 
/left leftmargin indent add def 
/instr (OFF) def Instruction                                                                                                                                                                                                                                                                                
/left  128 def /ipflag    0 def /numspace   14 def
/textstring (
These commands are used to control the PHOTO facility. VIEW displays the user with information
) def
/last 0 def 
Write
/left  128 def /ipflag    0 def /numspace   17 def
/textstring (
about the current scale and displays the mouse cursor once it has finished. PHOTO ON turns off this
) def
/last 0 def 
Write
/left  128 def /ipflag    0 def /numspace   17 def
/textstring (
and waits for a key press before proceeding. This allows the user to obtain a 'clean' screen for
) def
/last 0 def 
Write
/ipflag    0 def /left  128 def
/last 1 def 
/textstring (
photographs to be taken. 
) def
Write
/ipflag    1 def /left  138 def
/last 1 def 
/textstring (
Related commands : SCREEN, HARDCOPY 
) def
Write
/title (               INCLUDE AND EXCLUDE) def                                                                                                                                                                                                                                                             
/banner (INCLUDE AND EXCLUDE) def                                                                                                                                                                                                                                                                           
Newpage
/chaptext (Include And Exclude) def                                                                                                                                                                                                                                                                         
/ichap 1 def                                                                                                                                                                                                                                                                                                
Chapter 
/left leftmargin def 
/left  118 def /ipflag    1 def /numspace   16 def
/textstring (
The commands INCLUDE and EXCLUDE are very useful as they control which atoms are drawn at any
) def
/last 0 def 
Write
/left  108 def /ipflag    0 def /numspace   19 def
/textstring (
one time. The syntax for both of the commands is very similar as they are effectively the reverse of each
) def
/last 0 def 
Write
/ipflag    0 def /left  108 def
/last 1 def 
/textstring (
other. 
) def
Write
/left leftmargin def 
/instr (INCLUDE) def Instruction                                                                                                                                                                                                                                                                            
/left leftmargin def 
/instr (EXCLUDE) def Instruction                                                                                                                                                                                                                                                                            
/ipflag    0 def /left  118 def
/last 1 def 
/textstring (
These commands may be entered on their own and be follow by atom or element names. The syntax is :- 
) def
Write
/left leftmargin def 
/litpoint     8 def 
/litgap     8 def 
LitBlank
/litstring 
(nnCLUDE at1 at2 el1 el2) def Literal                                                                                                                                                                                                                                                                       
LitBlank
/left  118 def /ipflag    0 def /numspace   19 def
/textstring (
Once an atom has been EXCLUDED from the picture it is not drawn and it is not included in any
) def
/last 0 def 
Write
/ipflag    0 def /left  118 def
/last 1 def 
/textstring (
calculations eg PACK or ENCLOSURE. 
) def
Write
/left leftmargin indent add def 
/instr (ALL) def Instruction                                                                                                                                                                                                                                                                                
/left  128 def /ipflag    0 def /numspace   14 def
/textstring (
The ALL sub-command is a 'blanket' command that applies the IN\/EXCLUDE operation to ALL of
) def
/last 0 def 
Write
/left  128 def /ipflag    0 def /numspace   19 def
/textstring (
the atoms in the current view. Therefore if we want to exclude more atoms than we want to include we
) def
/last 0 def 
Write
/left  128 def /ipflag    0 def /numspace   20 def
/textstring (
can use EXCLUDE ALL to get rid of all of the atoms and then add in those we want by using
) def
/last 0 def 
Write
/ipflag    0 def /left  128 def
/last 1 def 
/textstring (
INCLUDE. 
) def
Write
/left leftmargin indent add def 
/instr (GROUP) def Instruction                                                                                                                                                                                                                                                                              
/left  128 def /ipflag    0 def /numspace   18 def
/textstring (
The command DEFGROUP is available to define groups of atoms that are to be referred to as a whole.
) def
/last 0 def 
Write
/left  128 def /ipflag    0 def /numspace   17 def
/textstring (
The IN\/EXCLUDE command can be used with GROUP to remove or atoms all of the atoms in the
) def
/last 0 def 
Write
/ipflag    0 def /left  128 def
/last 1 def 
/textstring (
group in the picture as required. 
) def
Write
/left leftmargin indent add def 
/instr (FRAGMENT) def Instruction                                                                                                                                                                                                                                                                           
/left  128 def /ipflag    0 def /numspace   15 def
/textstring (
The user can specify atoms to be IN\/EXCLUDEd by defining groups of atoms as fragments. A
) def
/last 0 def 
Write
/left  128 def /ipflag    0 def /numspace   18 def
/textstring (
fragment is defined by a single atom, and consists of all the atoms linked to it by the current
) def
/last 0 def 
Write
/left  128 def /ipflag    0 def /numspace   15 def
/textstring (
CONNECTIVITY TABLE. That is, if atoms are excluded from the picture the bonds ARE NOT broken
) def
/last 0 def 
Write
/left  128 def /ipflag    0 def /numspace   15 def
/textstring (
and FRAGMENT will use bonds involving excluded atoms in its calculations. The user can select this
) def
/last 0 def 
Write
/left  128 def /ipflag    0 def /numspace   17 def
/textstring (
atom by typing or by clicking on it with the mouse. ie. EXCLUDE FRAGMENT C1 will exclude C1,
) def
/last 0 def 
Write
/ipflag    0 def /left  128 def
/last 1 def 
/textstring (
any atoms joined to C1, any atoms joined to those atoms etc. 
) def
Write
/left leftmargin indent add def 
/instr (CELL) def Instruction                                                                                                                                                                                                                                                                               
/left  128 def /ipflag    0 def /numspace   19 def
/textstring (
It is often useful to see how the atoms being drawn relate to the unit cell. IN\/EXCLUDE CELL is used
) def
/last 0 def 
Write
/ipflag    0 def /left  128 def
/last 1 def 
/textstring (
to control the inclusion of the unit cell \(in the LINE style\) on the picture. 
) def
Write
/left leftmargin indent add def 
/instr (AREA) def Instruction                                                                                                                                                                                                                                                                               
/left  128 def /ipflag    0 def /numspace   16 def
/textstring (
Choosing INCLUDE or EXCLUDE AREA in the PC version allows the user to draw a polygonal area
) def
/last 0 def 
Write
/left  128 def /ipflag    0 def /numspace   18 def
/textstring (
with the mouse. The polygon is created by clicking with the left button on the position required for the
) def
/last 0 def 
Write
/left  128 def /ipflag    0 def /numspace   17 def
/textstring (
vertices. The polygon is closed by clicking close to the initial position. The mouse cursor is changed to
) def
/last 0 def 
Write
/left  128 def /ipflag    0 def /numspace   18 def
/textstring (
a cross during polygon creation and to an arrow when you are close enough to the initial point for
) def
/last 0 def 
Write
/left  128 def /ipflag    0 def /numspace   16 def
/textstring (
closure to occur. Hitting the <return> key or clicking with the right mouse button will abort the
) def
/last 0 def 
Write
/ipflag    0 def /left  128 def
/last 1 def 
/textstring (
operation. 
) def
Write
/left leftmargin indent add def 
/instr (SELECT) def Instruction                                                                                                                                                                                                                                                                             
/left  128 def /ipflag    0 def /numspace   14 def
/textstring (
The select option is equivalent to EXCLUDE ALL followed by INCLUDE AREA. The polygonal area
) def
/last 0 def 
Write
/ipflag    0 def /left  128 def
/last 1 def 
/textstring (
is chosen in the same way as described above and all atoms not within that area are excluded. 
) def
Write
/secttext (Further related commands) def Section                                                                                                                                                                                                                                                            
/ipflag    1 def /left  118 def
/last 1 def 
/textstring (
For pictures with more than one 'type' of constituent atom three more commands will prove to be useful. 
) def
Write
/left leftmargin def 
/instr (MASK) def Instruction                                                                                                                                                                                                                                                                               
/left leftmargin def 
/instr (UNMASK) def Instruction                                                                                                                                                                                                                                                                             
/ipflag    0 def /left  118 def
/last 1 def 
/textstring (
The MASK command has the same syntax as EXCLUDE ie. 
) def
Write
/left leftmargin def 
/litpoint     8 def 
/litgap     8 def 
LitBlank
/litstring 
(\(UN\)MASK at1 at2 el1 el2 ...) def Literal                                                                                                                                                                                                                                                                
LitBlank
/left  118 def /ipflag    0 def /numspace   17 def
/textstring (
It is used to remove atoms from current INCLUDE operations - ie atoms that have been MASKed will
) def
/last 0 def 
Write
/left  118 def /ipflag    0 def /numspace   15 def
/textstring (
not be included when using INCLUDE ALL. For example the user could MASK out solvent molecules
) def
/last 0 def 
Write
/left  118 def /ipflag    0 def /numspace   17 def
/textstring (
from a diagram leaving the 'basic' asymmetric unit to be worked on. UNMASK can be used to re-include
) def
/last 0 def 
Write
/left  118 def /ipflag    0 def /numspace   16 def
/textstring (
the required atoms. The sub commands ALL and GROUP are available for use with both MASK and
) def
/last 0 def 
Write
/ipflag    0 def /left  118 def
/last 1 def 
/textstring (
UNMASK. 
) def
Write
/left leftmargin def 
/instr (SWITCH) def Instruction                                                                                                                                                                                                                                                                             
/left  118 def /ipflag    0 def /numspace   15 def
/textstring (
The SWITCH command causes any atoms that are EXCLUDEd from the picture to be INCLUDEd and
) def
/last 0 def 
Write
/left  118 def /ipflag    0 def /numspace   17 def
/textstring (
vice versa. This command can be used in conjunction with MASK as any MASKed atoms WILL NOT be
) def
/last 0 def 
Write
/ipflag    0 def /left  118 def
/last 1 def 
/textstring (
included in the picture after a SWITCH operation. 
) def
Write
/left  128 def /ipflag    1 def /numspace   15 def
/textstring (
Consider an asymmetric unit containing an anion, a cation and some solvent. The user could MASK
) def
/last 0 def 
Write
/left  118 def /ipflag    0 def /numspace   15 def
/textstring (
out the solvent atoms. EXCLUDE the anion and obtain pictures of the cation atoms. The SWITCH
) def
/last 0 def 
Write
/left  118 def /ipflag    0 def /numspace   15 def
/textstring (
command then allows the user to examine the anion without having to INCLUDE and EXCLUDE atoms,
) def
/last 0 def 
Write
/ipflag    0 def /left  118 def
/last 1 def 
/textstring (
and the solvent atoms remain excluded throughout. 
) def
Write
/secttext (Generation of Dummy atoms) def Section                                                                                                                                                                                                                                                           
/left leftmargin def 
/instr (DUMMY) def Instruction                                                                                                                                                                                                                                                                              
/left  118 def /ipflag    0 def /numspace   19 def
/textstring (
In certain circumstances it may be useful for the user to be able to generate new 'dummy' atoms from the
) def
/last 0 def 
Write
Newpage
/left  118 def /ipflag    0 def /numspace   15 def
/textstring (
initial atomic coordinates. One example of this is a compound that contains a cyclopentadienyl ring. The
) def
/last 0 def 
Write
/left  118 def /ipflag    0 def /numspace   22 def
/textstring (
bonding in such a system can either be represented as five M - C bonds or as a single bond to the ring's
) def
/last 0 def 
Write
/ipflag    0 def /left  118 def
/last 1 def 
/textstring (
centre. The syntax for the command is: 
) def
Write
/left leftmargin def 
/litpoint     8 def 
/litgap     8 def 
LitBlank
/litstring 
(INCLUDE DUMMY d) def Literal                                                                                                                                                                                                                                                                               
LitBlank
/left  118 def /ipflag    0 def /numspace   18 def
/textstring (
where d is the name of the created atom. This must then be followed by a sub-command which defines
) def
/last 0 def 
Write
/ipflag    0 def /left  118 def
/last 1 def 
/textstring (
the atoms position. 
) def
Write
/left leftmargin indent add def 
/instr (COORDS) def Instruction                                                                                                                                                                                                                                                                             
/ipflag    0 def /left  128 def
/last 1 def 
/textstring (
This specifies the atoms coordinates in unit cell fractions. The syntax is: 
) def
Write
/left leftmargin def 
/litpoint     8 def 
/litgap     8 def 
LitBlank
/litstring 
(COORDS x y z) def Literal                                                                                                                                                                                                                                                                                  
LitBlank
/left leftmargin indent add def 
/instr (CENTROID) def Instruction                                                                                                                                                                                                                                                                           
/left  128 def /ipflag    0 def /numspace   15 def
/textstring (
Alternatively, the atoms position can be defined relative to others already in the molecule. At least
) def
/last 0 def 
Write
/left  128 def /ipflag    0 def /numspace   18 def
/textstring (
TWO atoms must be entered to define new atoms position and it is placed at the CENTROID of their
) def
/last 0 def 
Write
/ipflag    0 def /left  128 def
/last 1 def 
/textstring (
coordinates. The syntax is: 
) def
Write
/left leftmargin def 
/litpoint     8 def 
/litgap     8 def 
LitBlank
/litstring 
(CENTROID at1 at2 at3 ...) def Literal                                                                                                                                                                                                                                                                      
LitBlank
/left leftmargin indent add indent add def
/instr (ALL) def Instruction                                                                                                                                                                                                                                                                                
/left  138 def /ipflag    0 def /numspace   19 def
/textstring (
A further sub-command is available so that the new atom is placed at the centroid of all of the atoms
) def
/last 0 def 
Write
/left  138 def /ipflag    0 def /numspace   16 def
/textstring (
in the molecule. This will prove particulary useful when trying to alter the spacegroup of a structure
) def
/last 0 def 
Write
/left  138 def /ipflag    0 def /numspace   21 def
/textstring (
eg to convert from P 1 to P -1 as the centre of inversion will lie at the newly generated dummy atom
) def
/last 0 def 
Write
/ipflag    0 def /left  138 def
/last 1 def 
/textstring (
whose coordinates are output once they have been calculated. 
) def
Write
Blank
/secttext (Example) def Section                                                                                                                                                                                                                                                                             
/ipflag    1 def /left  118 def
/last 1 def 
/textstring (
To create a dummy atom in the centre of a cyclopentadienyl ring you would use: 
) def
Write
/left leftmargin def 
/litpoint     8 def 
/litgap     8 def 
LitBlank
/litstring 
(INCLUDE) def Literal                                                                                                                                                                                                                                                                                       
/litstring 
(DUMMY d1) def Literal                                                                                                                                                                                                                                                                                      
/litstring 
(CENTROID C1 C2 C3 C4 C5) def Literal                                                                                                                                                                                                                                                                       
LitBlank
/title (               DRAWING STYLE CONTROL) def                                                                                                                                                                                                                                                           
/banner (DRAWING STYLE CONTROL) def                                                                                                                                                                                                                                                                         
Newpage
/chaptext (Drawing Style Control) def                                                                                                                                                                                                                                                                       
/ichap 1 def                                                                                                                                                                                                                                                                                                
Chapter 
/left leftmargin def 
/ipflag    1 def /left  118 def
/last 1 def 
/textstring (
The user is able to choose from three different drawing styles. These are: 
) def
Write
/left leftmargin def 
/instr (LINE) def Instruction                                                                                                                                                                                                                                                                               
/left leftmargin def 
/instr (BALL) def Instruction                                                                                                                                                                                                                                                                               
/left leftmargin def 
/instr (ELLIPSE) def Instruction                                                                                                                                                                                                                                                                            
Blank
/ipflag    1 def /left  128 def
/last 1 def 
/textstring (
The basic syntax for style control is: 
) def
Write
/left leftmargin def 
/litpoint     8 def 
/litgap     8 def 
LitBlank
/litstring 
(XXXX at1 at2 el1 el2) def Literal                                                                                                                                                                                                                                                                          
LitBlank
/left  118 def /ipflag    0 def /numspace   17 def
/textstring (
where XXXX is LINE, BALL or ELLIPSE as required. The user may specify atoms eg C1, C2 and\/or
) def
/last 0 def 
Write
/left  118 def /ipflag    0 def /numspace   20 def
/textstring (
elements eg C O to be drawn in the XXXX style. The user may therefore have all three styles present at
) def
/last 0 def 
Write
/left  118 def /ipflag    0 def /numspace   19 def
/textstring (
any one time within the picture. Alternatively the ALL may be used to convert the drawing style of all the
) def
/last 0 def 
Write
/ipflag    0 def /left  118 def
/last 1 def 
/textstring (
atoms present to XXXX. The initial drawing style used is LINE. 
) def
Write
Blank
/left  128 def /ipflag    1 def /numspace   17 def
/textstring (
The ELLIPSE drawing style is only available if the user has input data that contains information on the
) def
/last 0 def 
Write
/left  118 def /ipflag    0 def /numspace   13 def
/textstring (
temperature factors \(isotropic or anisotropic\) of the atoms concerned. The ellipse drawing style represents
) def
/last 0 def 
Write
/left  118 def /ipflag    0 def /numspace   17 def
/textstring (
atoms by their thermal ellipsoid. Note that negative eigen values are reset at input to .001* the next
) def
/last 0 def 
Write
/left  118 def /ipflag    0 def /numspace   17 def
/textstring (
largest. If the information available is U[iso] only, a circle is plotted whose radius is scaled according to
) def
/last 0 def 
Write
/ipflag    0 def /left  118 def
/last 1 def 
/textstring (
its value. 
) def
Write
/left leftmargin def 
/instr (ALL) def Instruction                                                                                                                                                                                                                                                                                
/left leftmargin def 
/instr (FRAGMENT) def Instruction                                                                                                                                                                                                                                                                           
/left leftmargin def 
/instr (GROUP) def Instruction                                                                                                                                                                                                                                                                              
/left  118 def /ipflag    0 def /numspace   16 def
/textstring (
These subcommands can be used to specify which atoms are to be affected by the drawing style
) def
/last 0 def 
Write
/ipflag    0 def /left  118 def
/last 1 def 
/textstring (
command. 
) def
Write
/ipflag    1 def /left  128 def
/last 1 def 
/textstring (
Several other commands are available in addition to the basic style commands. 
) def
Write
/secttext (LINE commands.) def Section                                                                                                                                                                                                                                                                      
/ipflag    1 def /left  118 def
/last 1 def 
/textstring (
There are no extra commands following LINE. 
) def
Write
/secttext (BALL commands.) def Section                                                                                                                                                                                                                                                                      
/left leftmargin indent add def 
/instr (RADII) def Instruction                                                                                                                                                                                                                                                                              
/ipflag    0 def /left  128 def
/last 1 def 
/textstring (
The user can specify the drawing radius \(in angstroms\) of a specified atom or element. The syntax is: 
) def
Write
/left leftmargin def 
/litpoint     8 def 
/litgap     8 def 
LitBlank
/litstring 
(BALL RADII C 0.8 N1 1.1) def Literal                                                                                                                                                                                                                                                                       
LitBlank
/left  128 def /ipflag    0 def /numspace   19 def
/textstring (
which will draw all C atoms with a radius of 0.8 angstroms, and the N1 atom with radius of 1.1
) def
/last 0 def 
Write
/ipflag    0 def /left  128 def
/last 1 def 
/textstring (
angstroms. 
) def
Write
/left leftmargin indent add indent add def
/instr (DEFAULT) def Instruction                                                                                                                                                                                                                                                                            
/ipflag    0 def /left  138 def
/last 1 def 
/textstring (
This sets all the radii to their initial covalent values. The syntax is: 
) def
Write
/left leftmargin def 
/litpoint     8 def 
/litgap     8 def 
LitBlank
/litstring 
(BALL RADII DEFAULT.) def Literal                                                                                                                                                                                                                                                                           
LitBlank
/left leftmargin indent add indent add def
/instr (COVALENT) def Instruction                                                                                                                                                                                                                                                                           
/left leftmargin indent add indent add def
/instr (IONIC) def Instruction                                                                                                                                                                                                                                                                              
/left leftmargin indent add indent add def
/instr (VANDERWAALS) def Instruction                                                                                                                                                                                                                                                                        
/ipflag    0 def /left  138 def
/last 1 def 
/textstring (
This sets the radii of the specified atoms\/elements to the appropriate values. The syntax is: 
) def
Write
/left leftmargin def 
/litpoint     8 def 
/litgap     8 def 
LitBlank
LitBlank
/ipflag    0 def /left  138 def
/last 1 def 
/textstring (
can be used - BALL RADII IONIC ALL - to set all atoms if required. 
) def
Write
/left leftmargin indent add def 
/instr (FILL) def Instruction                                                                                                                                                                                                                                                                               
/left leftmargin indent add def 
/instr (UNFILL) def Instruction                                                                                                                                                                                                                                                                             
/left  128 def /ipflag    0 def /numspace   18 def
/textstring (
These are header commands and are used to specify whether the circles drawn in the BALL style are to
) def
/last 0 def 
Write
/ipflag    0 def /left  128 def
/last 1 def 
/textstring (
be filled with colour or not. No arguments are required by these commands. 
) def
Write
/secttext (ELLIPSE commands) def Section                                                                                                                                                                                                                                                                    
/left leftmargin indent add def 
/instr (TYPE) def Instruction                                                                                                                                                                                                                                                                               
/left  128 def /ipflag    0 def /numspace   17 def
/textstring (
ELLIPSE may be followed by the sub command TYPE which enables the user to control the type of
) def
/last 0 def 
Write
/ipflag    0 def /left  128 def
/last 1 def 
/textstring (
ellipse used to represent the atom. The syntax is: 
) def
Write
/left leftmargin def 
/litpoint     8 def 
/litgap     8 def 
LitBlank
/litstring 
( ELLIPSE TYPE at\/els\/all n.) def Literal                                                                                                                                                                                                                                                                 
LitBlank
/ipflag    0 def /left  128 def
/last 1 def 
/textstring (
Type 'n' can take any of four values: 
) def
Write
/left leftmargin def 
/litpoint     8 def 
/litgap     8 def 
LitBlank
/litstring 
( 1  - bounding ellipse only.) def Literal                                                                                                                                                                                                                                                                  
/litstring 
( 2  - bounding ellipse and principal ellipses.) def Literal                                                                                                                                                                                                                                                
/litstring 
(      This is the default representation.) def Literal                                                                                                                                                                                                                                                     
/litstring 
( 3  - as 2 but excluding the principle axes.) def Literal                                                                                                                                                                                                                                                  
/litstring 
( 4  - as 2 but with shading.) def Literal                                                                                                                                                                                                                                                                  
LitBlank
/left leftmargin indent add indent add def
Newpage
/instr (ALL) def Instruction                                                                                                                                                                                                                                                                                
/ipflag    0 def /left  138 def
/last 1 def 
/textstring (
ALL can be used followed by a number to set the ellipse type of all atoms in the drawing. 
) def
Write
/left  148 def /ipflag    1 def /numspace   18 def
/textstring (
Note that any use of ELLIPSE TYPE will set all the atoms referred to ellipse type even if they
) def
/last 0 def 
WriteCalc
/textstring (Note ) def
WriteBold
/textstring (that any use of ELLIPSE TYPE will set all the atoms referred to ellipse type even if they) def WritePart
/ypos ypos linegap sub def
/ipflag    0 def /left  138 def
/last 1 def 
/textstring (
were previously in LINE or BALL. Hence, 
) def
Write
/left leftmargin def 
/litpoint     8 def 
/litgap     8 def 
LitBlank
/litstring 
(ELLIPSE TYPE C 2  will have all carbon atoms drawn in type 2 form.) def Literal                                                                                                                                                                                                                            
/litstring 
(ELLIPSE TYPE ALL 4 will have all atoms drawn in type 4 form) def Literal                                                                                                                                                                                                                                   
LitBlank
/left leftmargin indent add def 
/instr (NEGATIVE) def Instruction                                                                                                                                                                                                                                                                           
/left  128 def /ipflag    0 def /numspace   13 def
/textstring (
The NEGATIVE sub command requires one argument. If atoms are input with negative temperature
) def
/last 0 def 
Write
/left  128 def /ipflag    0 def /numspace   15 def
/textstring (
factors the atoms temperature factor is reset using the value specified by ELLIPSE NEGATIVE u. The
) def
/last 0 def 
Write
/ipflag    0 def /left  128 def
/last 1 def 
/textstring (
default value of u is 0.01. 
) def
Write
/left leftmargin indent add def 
/instr (PROBABILITY) def Instruction                                                                                                                                                                                                                                                                        
/left  128 def /ipflag    0 def /numspace   17 def
/textstring (
This is used to specify the size of the ellipsoid probability envelope displayed. It is followed by a
) def
/last 0 def 
Write
/ipflag    0 def /left  128 def
/last 1 def 
/textstring (
percentage value. 
) def
Write
/title (               CONNECTIVITY CONTROL) def                                                                                                                                                                                                                                                            
/banner (CONNECTIVITY CONTROL) def                                                                                                                                                                                                                                                                          
Newpage
/chaptext (Connectivity Control) def                                                                                                                                                                                                                                                                        
/ichap 1 def                                                                                                                                                                                                                                                                                                
Chapter 
/left leftmargin def 
/left  118 def /ipflag    1 def /numspace   17 def
/textstring (
It is important that the user has complete control over the bonds displayed in a drawing. The CONNECT
) def
/last 0 def 
Write
/left  108 def /ipflag    0 def /numspace   21 def
/textstring (
group of options is a complicated one but has been designed so as to provide to user with a fully flexible set
) def
/last 0 def 
Write
/ipflag    0 def /left  108 def
/last 1 def 
/textstring (
of commands. 
) def
Write
/secttext (CONNECT) def Section                                                                                                                                                                                                                                                                             
/ipflag    1 def /left  118 def
/last 1 def 
/textstring (
CONNECT is used in one of two ways, either on its own or with modifying sub-command. 
) def
Write
/left leftmargin def 
/instr (CONNECT) def Instruction                                                                                                                                                                                                                                                                            
/ipflag    0 def /left  118 def
/last 1 def 
/textstring (
The syntax for this command is: 
) def
Write
/left leftmargin def 
/litpoint     8 def 
/litgap     8 def 
LitBlank
/litstring 
(CONNECT X Y dmin dmax) def Literal                                                                                                                                                                                                                                                                         
LitBlank
/left  128 def /ipflag    1 def /numspace   21 def
/textstring (
This will create two lists of atoms \(one from X and one from Y which may be atoms, elements or * as
) def
/last 0 def 
Write
/left  118 def /ipflag    0 def /numspace   14 def
/textstring (
required\) and uses these lists when calculating connectivity. dmin and dmax are in angstroms. The
) def
/last 0 def 
Write
/left  118 def /ipflag    0 def /numspace   17 def
/textstring (
distances between all combinations of the atoms in the two lists are determined. If distances any lie within
) def
/last 0 def 
Write
/left  118 def /ipflag    0 def /numspace   18 def
/textstring (
the specified dmin -> dmax range \(and the bonds do not already exist\) they will be added into the
) def
/last 0 def 
Write
/ipflag    0 def /left  118 def
/last 1 def 
/textstring (
connectivity lists. To connect up CU1 O bonds for example you could use: 
) def
Write
/left leftmargin def 
/litpoint     8 def 
/litgap     8 def 
LitBlank
/litstring 
(CONNECT CU1 O 0.0 2.0) def Literal                                                                                                                                                                                                                                                                         
LitBlank
/left  118 def /ipflag    0 def /numspace   20 def
/textstring (
which would create one list - containing Cu1 only - and another list - containing all of the oxygen atoms -
) def
/last 0 def 
Write
/left  118 def /ipflag    0 def /numspace   21 def
/textstring (
and then search for inter-list bonds. In this way, if any O - O bonds exist within the given range they will
) def
/last 0 def 
Write
/left  118 def /ipflag    0 def /numspace   18 def
/textstring (
NOT be found. Note that if you require connections to be calculated between atoms of the same type you
) def
/last 0 def 
Write
/ipflag    0 def /left  118 def
/last 1 def 
/textstring (
use: 
) def
Write
/left leftmargin def 
/litpoint     8 def 
/litgap     8 def 
LitBlank
/litstring 
(CONNECT ALL requires two arguments dmin and dmax. The result is) def Literal                                                                                                                                                                                                                               
/litstring 
(identical to CONNECT above except that ALL of the atoms are) def Literal                                                                                                                                                                                                                                   
/litstring 
(included in) def Literal                                                                                                                                                                                                                                                                                   
/litstring 
(the calculation.) def Literal                                                                                                                                                                                                                                                                              
LitBlank
/ipflag    0 def /left  118 def
/last 1 def 
/textstring (
CONNECT ALL 0.0 2.0 
) def
Write
Blank
/ipflag    0 def /left  118 def
/last 1 def 
/textstring (
will draw all bonds that fall within the 0.0 - 2.0 angstrom range. 
) def
Write
/left leftmargin indent add def 
/instr (DEFAULT) def Instruction                                                                                                                                                                                                                                                                            
/ipflag    0 def /left  128 def
/last 1 def 
/textstring (
CONNECT DEFAULT requires no arguments. This command does two things: 
) def
Write
/left leftmargin def 
/litpoint     8 def 
/litgap     8 def 
LitBlank
/litstring 
(1\)      Reset all of the connectivity radii) def Literal                                                                                                                                                                                                                                                  
/litstring 
(        to their initial values) def Literal                                                                                                                                                                                                                                                               
/litstring 
(2\)      Calculate the connectivity according) def Literal                                                                                                                                                                                                                                                 
/litstring 
(        to these radii.) def Literal                                                                                                                                                                                                                                                                       
LitBlank
/left  128 def /ipflag    0 def /numspace   17 def
/textstring (
It is effectively a 'start again' option as it removes any changes in bonding that have been introduced
) def
/last 0 def 
Write
/ipflag    0 def /left  128 def
/last 1 def 
/textstring (
with the JOIN, REMOVE etc options. 
) def
Write
/left leftmargin indent add def 
/instr (RADII) def Instruction                                                                                                                                                                                                                                                                              
/left  128 def /ipflag    0 def /numspace   14 def
/textstring (
This is a sub-command of CONNECT and comes immediately after it. It requires the following
) def
/last 0 def 
Write
/ipflag    0 def /left  128 def
/last 1 def 
/textstring (
arguments: 
) def
Write
/left leftmargin def 
/litpoint     8 def 
/litgap     8 def 
LitBlank
/litstring 
(CONNECT RADII X r) def Literal                                                                                                                                                                                                                                                                             
LitBlank
/left  128 def /ipflag    0 def /numspace   20 def
/textstring (
where X is the name of an atom or element and r is its new connectivity radius. The connectivity of this
) def
/last 0 def 
Write
/ipflag    0 def /left  128 def
/last 1 def 
/textstring (
atom\/element is then redetermined. 
) def
Write
/left leftmargin indent add indent add def
/instr (COVALENT) def Instruction                                                                                                                                                                                                                                                                           
/left leftmargin indent add indent add def
/instr (IONIC) def Instruction                                                                                                                                                                                                                                                                              
/left leftmargin indent add indent add def
/instr (VANDERWAALS) def Instruction                                                                                                                                                                                                                                                                        
/left  138 def /ipflag    0 def /numspace   12 def
/textstring (
These subcommands set the specified atoms to appropriate connectivity radii eg CONNECT RADII
) def
/last 0 def 
Write
/ipflag    0 def /left  138 def
/last 1 def 
/textstring (
IONIC N. The further subcommand ALL can be used to set all atoms. 
) def
Write
/left leftmargin indent add def 
/instr (HBONDS) def Instruction                                                                                                                                                                                                                                                                             
/ipflag    0 def /left  128 def
/last 1 def 
/textstring (
This command enables the user to search for hydrogen bonds within the structure. The syntax is :- 
) def
Write
/left leftmargin def 
/litpoint     8 def 
/litgap     8 def 
LitBlank
/litstring 
(CONNECT HBONDS dmin dmax X Y) def Literal                                                                                                                                                                                                                                                                  
LitBlank
/left  128 def /ipflag    0 def /numspace   15 def
/textstring (
dmin\/dmax is the range for searching \(in angstroms\), X\/Y are atoms\/elements to be included in the
) def
/last 0 def 
Write
/left  128 def /ipflag    0 def /numspace   22 def
/textstring (
search. For a H-bond to be valid it must be bonded to one of the atoms in the list X,Y etc AND be
) def
/last 0 def 
Write
/left  128 def /ipflag    0 def /numspace   16 def
/textstring (
within the range of another of the atoms. For example, if we are searching for H-bonds involving
) def
/last 0 def 
Write
/ipflag    0 def /left  128 def
/last 1 def 
/textstring (
oxygen atoms: 
) def
Write
/left leftmargin def 
/litpoint     8 def 
/litgap     8 def 
LitBlank
/litstring 
(CONNECT HBONDS 0.0 2.5 O) def Literal                                                                                                                                                                                                                                                                      
LitBlank
/left  128 def /ipflag    0 def /numspace   24 def
/textstring (
will achieve this. There may well be eg C - H - O linkages within the range but only O - H - O ones
) def
/last 0 def 
Write
/left  128 def /ipflag    0 def /numspace   21 def
/textstring (
will be registered. In this way we can filter the search and set a large value for dmax so that all the
) def
/last 0 def 
Write
Newpage
/left  128 def /ipflag    0 def /numspace   13 def
/textstring (
H-bonds are discovered without obtaining spurious information. The bond style used for H-bonds is
) def
/last 0 def 
Write
/ipflag    0 def /left  128 def
/last 1 def 
/textstring (
dotted. 
) def
Write
/left leftmargin indent add def 
/instr (INTER) def Instruction                                                                                                                                                                                                                                                                              
/left  128 def /ipflag    0 def /numspace   16 def
/textstring (
This option is intended to be used after a PACK or ENCLOSURE operation. This will find connections
) def
/last 0 def 
Write
/left  128 def /ipflag    0 def /numspace   12 def
/textstring (
between atoms which have DIFFERENT packnumbers - ie. between assymetric units or between
) def
/last 0 def 
Write
/left  128 def /ipflag    0 def /numspace   15 def
/textstring (
different GROUPS if PACK or ENCLOSURE GROUP has been used. The bonds are in the DOTTED
) def
/last 0 def 
Write
/ipflag    0 def /left  128 def
/last 1 def 
/textstring (
style when generated. The syntax is: 
) def
Write
/left leftmargin def 
/litpoint     8 def 
/litgap     8 def 
LitBlank
/litstring 
(CONNECT INTER O C 0.0 3.0) def Literal                                                                                                                                                                                                                                                                     
LitBlank
/ipflag    0 def /left  128 def
/last 1 def 
/textstring (
as for CONNECT itself. 
) def
Write
/left leftmargin indent add def 
/instr (FULL) def Instruction                                                                                                                                                                                                                                                                               
/left leftmargin indent add def 
/instr (DOTTED) def Instruction                                                                                                                                                                                                                                                                             
/left  128 def /ipflag    0 def /numspace   17 def
/textstring (
The CONNECT command can also be used if bonds already exist to alter the style. There are three
) def
/last 0 def 
Write
/ipflag    0 def /left  128 def
/last 1 def 
/textstring (
options: 
) def
Write
/left leftmargin def 
/litpoint     8 def 
/litgap     8 def 
LitBlank
/litstring 
(CONNECT DOTTED at1 at2) def Literal                                                                                                                                                                                                                                                                        
/litstring 
(CONNECT DOTTED at1 el1) def Literal                                                                                                                                                                                                                                                                        
/litstring 
(CONNECT DOTTED el1 el2) def Literal                                                                                                                                                                                                                                                                        
LitBlank
/left  128 def /ipflag    0 def /numspace   19 def
/textstring (
These change the style of the single bond at1-at2, the style of any el1-at1 bonds and the style of any
) def
/last 0 def 
Write
/left  128 def /ipflag    0 def /numspace   19 def
/textstring (
el1-el2 bonds respectively. Note that in the latter case, el1 and el2 may be the same element ie you can
) def
/last 0 def 
Write
/ipflag    0 def /left  128 def
/last 1 def 
/textstring (
make all C-C bonds dotted. 
) def
Write
Blank
/left leftmargin def 
/instr (JOIN) def Instruction                                                                                                                                                                                                                                                                               
/left leftmargin indent add def 
/instr (DOTTED) def Instruction                                                                                                                                                                                                                                                                             
/left leftmargin indent add def 
/instr (FULL) def Instruction                                                                                                                                                                                                                                                                               
/left  128 def /ipflag    0 def /numspace   15 def
/textstring (
Another connectivity header command is JOIN. This is a more specific command which is used to
) def
/last 0 def 
Write
/ipflag    0 def /left  128 def
/last 1 def 
/textstring (
make a new bond. The syntax is: 
) def
Write
/left leftmargin def 
/litpoint     8 def 
/litgap     8 def 
LitBlank
/litstring 
(JOIN DOTTED at1 at2) def Literal                                                                                                                                                                                                                                                                           
/litstring 
(JOIN FULL al1 at2) def Literal                                                                                                                                                                                                                                                                             
LitBlank
/ipflag    0 def /left  128 def
/last 1 def 
/textstring (
This will create a new bond between at1 and at2 of the specified type. 
) def
Write
/left leftmargin def 
/instr (REMOVE) def Instruction                                                                                                                                                                                                                                                                             
/ipflag    0 def /left  118 def
/last 1 def 
/textstring (
This is the reverse command to JOIN. It will break the bond between the specified atoms. The syntax is: 
) def
Write
/left leftmargin def 
/litpoint     8 def 
/litgap     8 def 
LitBlank
/litstring 
(REMOVE at1 at2) def Literal                                                                                                                                                                                                                                                                                
LitBlank
/left leftmargin def 
/instr (DISCONNECT) def Instruction                                                                                                                                                                                                                                                                         
/ipflag    0 def /left  118 def
/last 1 def 
/textstring (
This command is the reverse of CONNECT. 
) def
Write
/left leftmargin def 
/litpoint     8 def 
/litgap     8 def 
LitBlank
/litstring 
(DISCONNECT C O 0.5 1.5) def Literal                                                                                                                                                                                                                                                                        
LitBlank
/ipflag    0 def /left  118 def
/last 1 def 
/textstring (
will get rid of any C-O bonds that are OUTSIDE the range 0.5 - 1.5 angstroms. 
) def
Write
/left leftmargin indent add def 
/instr (ALL) def Instruction                                                                                                                                                                                                                                                                                
/ipflag    0 def /left  128 def
/last 1 def 
/textstring (
DISCONNECT ALL removes all of the connectivity information. 
) def
Write
/left leftmargin indent add def 
/instr (GROUP) def Instruction                                                                                                                                                                                                                                                                              
/left  128 def /ipflag    0 def /numspace   12 def
/textstring (
DISCONNECT GROUP is intended primarily for use with disordered structures although other uses
) def
/last 0 def 
Write
/left  128 def /ipflag    0 def /numspace   15 def
/textstring (
can be envisaged. For example a substituent may be 'flipping' between two sites generating very short
) def
/last 0 def 
Write
/left  128 def /ipflag    0 def /numspace   14 def
/textstring (
distances between atoms in different groups. It is not possible to DISCONNECT these bonds since
) def
/last 0 def 
Write
/left  128 def /ipflag    0 def /numspace   19 def
/textstring (
some of the distances may appear to be 'normal'. To get over this, each disordered part is defined as a
) def
/last 0 def 
Write
/left  128 def /ipflag    0 def /numspace   14 def
/textstring (
group \(See DEFGROUP\) and DISCONNECT GROUP is used to remove any bonds that exist between
) def
/last 0 def 
Write
/ipflag    0 def /left  128 def
/last 1 def 
/textstring (
them. The syntax is: 
) def
Write
/left leftmargin def 
/litpoint     8 def 
/litgap     8 def 
LitBlank
/litstring 
(DISCONNECT GROUP group1 group2) def Literal                                                                                                                                                                                                                                                                
LitBlank
/left leftmargin indent add def 
/instr (ATOM) def Instruction                                                                                                                                                                                                                                                                               
/ipflag    0 def /left  128 def
/last 1 def 
/textstring (
This command deletes ALL bonds involving the specified atom. The syntax is: 
) def
Write
/left leftmargin def 
/litpoint     8 def 
/litgap     8 def 
LitBlank
/litstring 
(DISCONNECT ATOM at1) def Literal                                                                                                                                                                                                                                                                           
LitBlank
/secttext (Miscellaneous CONNECT commands) def Section                                                                                                                                                                                                                                                      
/left  118 def /ipflag    1 def /numspace   17 def
/textstring (
There are three other commands which either relate to connectivity or to how the bond is represented on
) def
/last 0 def 
Write
/ipflag    0 def /left  108 def
/last 1 def 
/textstring (
the output device. 
) def
Write
/left leftmargin def 
/instr (TAPER) def Instruction                                                                                                                                                                                                                                                                              
/left  118 def /ipflag    0 def /numspace   18 def
/textstring (
This controls the bond tapering. It has an initial value of 2.0. Increasing this tapering is useful as it
) def
/last 0 def 
Write
/ipflag    0 def /left  118 def
/last 1 def 
/textstring (
introduces a 3-D effect into the drawing. If tapering is not required then entering: 
) def
Write
/left leftmargin def 
/litpoint     8 def 
/litgap     8 def 
LitBlank
/litstring 
(CONNECT TAPER 0.0) def Literal                                                                                                                                                                                                                                                                             
LitBlank
Newpage
/ipflag    0 def /left  118 def
/last 1 def 
/textstring (
will achieve this. 
) def
Write
/left leftmargin def 
/instr (THICKNESS) def Instruction                                                                                                                                                                                                                                                                          
/left  118 def /ipflag    0 def /numspace   15 def
/textstring (
This command controls the thickness \(radius\) of the bonds in angstroms. It requires one argument, whose
) def
/last 0 def 
Write
/ipflag    0 def /left  118 def
/last 1 def 
/textstring (
default value is 0.02. 
) def
Write
/left leftmargin def 
/litpoint     8 def 
/litgap     8 def 
LitBlank
/litstring 
(CONNECT THICKNESS 0.04) def Literal                                                                                                                                                                                                                                                                        
LitBlank
/ipflag    0 def /left  118 def
/last 1 def 
/textstring (
will double the radius of the bonds as drawn. 
) def
Write
/left leftmargin def 
/instr (TOLERANCE) def Instruction                                                                                                                                                                                                                                                                          
/ipflag    0 def /left  118 def
/last 1 def 
/textstring (
This sets the tolerance used when determining whether or not a bond exists. The formula used is: 
) def
Write
/left leftmargin def 
/litpoint     8 def 
/litgap     8 def 
LitBlank
/litstring 
(If  dist < \( C1 + C2 \) * tol  then a bond exists) def Literal                                                                                                                                                                                                                                            
LitBlank
/left  118 def /ipflag    0 def /numspace   21 def
/textstring (
where C1 and C2 are the connectivity radii of the atoms in question. The initial value of 'tol' is 1.1 ie the
) def
/last 0 def 
Write
/left  118 def /ipflag    0 def /numspace   19 def
/textstring (
interatomic distance has to be no more than 10% greater than the sum of the two connectivity radii for a
) def
/last 0 def 
Write
/ipflag    0 def /left  118 def
/last 1 def 
/textstring (
bond to be found. The syntax for the command is: 
) def
Write
/left leftmargin def 
/litpoint     8 def 
/litgap     8 def 
LitBlank
/litstring 
(CONNECT TOLERANCE n) def Literal                                                                                                                                                                                                                                                                           
LitBlank
/title (               CONTROL OF COLOUR) def                                                                                                                                                                                                                                                               
/banner (CONTROL OF COLOUR) def                                                                                                                                                                                                                                                                             
Newpage
/chaptext (Control Of Colour) def                                                                                                                                                                                                                                                                           
/ichap 1 def                                                                                                                                                                                                                                                                                                
Chapter 
/left leftmargin def 
/left  118 def /ipflag    1 def /numspace   17 def
/textstring (
Within CAMERON it is possible to control the colour of each individual atom and bond and also the
) def
/last 0 def 
Write
/ipflag    0 def /left  108 def
/last 1 def 
/textstring (
colour of the labels. 
) def
Write
/left leftmargin def 
/instr (COLOUR) def Instruction                                                                                                                                                                                                                                                                             
/left  118 def /ipflag    0 def /numspace   17 def
/textstring (
This is the header command for colour control - it may be followed by atom\/element names if required.
) def
/last 0 def 
Write
/ipflag    0 def /left  118 def
/last 1 def 
/textstring (
The syntax is: 
) def
Write
/left leftmargin def 
/litpoint     8 def 
/litgap     8 def 
LitBlank
/litstring 
(COLOUR C BLUE N YELLOW ...) def Literal                                                                                                                                                                                                                                                                    
LitBlank
/left  118 def /ipflag    0 def /numspace   18 def
/textstring (
The atom\/elements are entered in pairs together with the colour name. A list of the current colours can be
) def
/last 0 def 
Write
/left  118 def /ipflag    0 def /numspace   16 def
/textstring (
obtained by using 'INFO COLOUR'. There are of colournames - those for normal colour and those for
) def
/last 0 def 
Write
/left  118 def /ipflag    0 def /numspace   16 def
/textstring (
greyscale either may be used interchangeably as once the colour type is altered the colours are translated
) def
/last 0 def 
Write
/ipflag    0 def /left  118 def
/last 1 def 
/textstring (
accordingly. 
) def
Write
/left leftmargin def 
/litpoint     8 def 
/litgap     8 def 
LitBlank
/litstring 
(COLOUR ALL colour) def Literal                                                                                                                                                                                                                                                                             
LitBlank
/ipflag    0 def /left  118 def
/last 1 def 
/textstring (
Colours all the atoms the given colour 
) def
Write
/left leftmargin indent add def 
/instr (GROUP) def Instruction                                                                                                                                                                                                                                                                              
/ipflag    0 def /left  128 def
/last 1 def 
/textstring (
This sets the colour of all of the atoms in a given group. The syntax is: 
) def
Write
/left leftmargin def 
/litpoint     8 def 
/litgap     8 def 
LitBlank
/litstring 
(COLOUR GROUP groupname colourname) def Literal                                                                                                                                                                                                                                                             
LitBlank
/left leftmargin indent add def 
/instr (FRAGMENT) def Instruction                                                                                                                                                                                                                                                                           
/ipflag    0 def /left  128 def
/last 1 def 
/textstring (
COLOUR FRAGMENT n col will set the colour of all atoms in the fragment attached to atom n. 
) def
Write
/left leftmargin indent add def 
/instr (BACKGROUND) def Instruction                                                                                                                                                                                                                                                                         
/ipflag    0 def /left  128 def
/last 1 def 
/textstring (
Sets the background colour. 
) def
Write
/left leftmargin indent add def 
/instr (TEXT) def Instruction                                                                                                                                                                                                                                                                               
/ipflag    0 def /left  128 def
/last 1 def 
/textstring (
Sets the colour of the title and other annotation text. 
) def
Write
/left leftmargin indent add def 
/instr (MENUTEXT) def Instruction                                                                                                                                                                                                                                                                           
/left leftmargin indent add def 
/instr (BUTTON) def Instruction                                                                                                                                                                                                                                                                             
/ipflag    0 def /left  128 def
/last 1 def 
/textstring (
Selects the colours of the text and buttons in menu mode. 
) def
Write
/left leftmargin indent add def 
/instr (LABCOLOUR) def Instruction                                                                                                                                                                                                                                                                          
/ipflag    0 def /left  128 def
/last 1 def 
/textstring (
This sets the colour of the labels and requires a single argument - the name of the new colour. 
) def
Write
/left leftmargin indent add def 
/instr (BONDS) def Instruction                                                                                                                                                                                                                                                                              
/left  128 def /ipflag    0 def /numspace   15 def
/textstring (
Altering the colour of bonds is a more complicated procedure. It is followed by atoms\/elements that
) def
/last 0 def 
Write
/left  128 def /ipflag    0 def /numspace   15 def
/textstring (
define the bond and a colourname. These arguments are therefore entered in threes. For example, to
) def
/last 0 def 
Write
/ipflag    0 def /left  128 def
/last 1 def 
/textstring (
make all carbon carbon bonds colour blue and all CU1 to oxygen bonds colour yellow you would use: 
) def
Write
/left leftmargin def 
/litpoint     8 def 
/litgap     8 def 
LitBlank
/litstring 
(COLOUR BONDS C C BLUE CU1 O YELLOW) def Literal                                                                                                                                                                                                                                                            
LitBlank
/left leftmargin indent add indent add def
/instr (ALL) def Instruction                                                                                                                                                                                                                                                                                
/ipflag    0 def /left  138 def
/last 1 def 
/textstring (
There is a further sub-command ALL which changes the colour of ALL of the bonds eg: 
) def
Write
/left leftmargin def 
/litpoint     8 def 
/litgap     8 def 
LitBlank
/litstring 
(COLOUR BONDS ALL PINK) def Literal                                                                                                                                                                                                                                                                         
LitBlank
/ipflag    0 def /left  138 def
/last 1 def 
/textstring (
makes all bonds colour PINK. 
) def
Write
/left leftmargin indent add def 
/instr (GROUP) def Instruction                                                                                                                                                                                                                                                                              
/ipflag    0 def /left  128 def
/last 1 def 
/textstring (
This sub-command requires arguments in pairs - the group name and the new bond colour: 
) def
Write
/left leftmargin def 
/litpoint     8 def 
/litgap     8 def 
LitBlank
/litstring 
(COLOUR BONDS GROUP g1 LGREY) def Literal                                                                                                                                                                                                                                                                   
LitBlank
/left  128 def /ipflag    0 def /numspace   19 def
/textstring (
colours all bonds BETWEEN atoms in group g1 \(both atoms in a bond must be in the group for its
) def
/last 0 def 
Write
/ipflag    0 def /left  128 def
/last 1 def 
/textstring (
colour to be altered\) to colour LGREY. 
) def
Write
Blank
/secttext (Example) def Section                                                                                                                                                                                                                                                                             
/ipflag    1 def /left  118 def
/last 1 def 
/textstring (
To have a picture with the following requirements: 
) def
Write
/left leftmargin def 
/litpoint     8 def 
/litgap     8 def 
LitBlank
/litstring 
(All C atoms colour BLUE) def Literal                                                                                                                                                                                                                                                                       
/litstring 
(All N atoms colour PINK) def Literal                                                                                                                                                                                                                                                                       
/litstring 
(Cu1 colour YELLOW) def Literal                                                                                                                                                                                                                                                                             
/litstring 
(All Cu1 - O bonds colour LGREY) def Literal                                                                                                                                                                                                                                                                
/litstring 
(All bonds between atoms in group g1 colour RED) def Literal                                                                                                                                                                                                                                                
/litstring 
(All other bonds colour GREEN) def Literal                                                                                                                                                                                                                                                                  
/litstring 
(All labels colour PURPLE) def Literal                                                                                                                                                                                                                                                                      
LitBlank
/ipflag    1 def /left  118 def
/last 1 def 
/textstring (
the commands would be: 
) def
Write
Newpage
/left leftmargin def 
/litpoint     8 def 
/litgap     8 def 
/litstring 
(COLOUR C BLUE N PINK CU1 YELLOW) def Literal                                                                                                                                                                                                                                                               
/litstring 
(BONDS ALL RED) def Literal                                                                                                                                                                                                                                                                                 
/litstring 
(\(do this first\)) def Literal                                                                                                                                                                                                                                                                             
/litstring 
(BONDS CU1 O LGREY) def Literal                                                                                                                                                                                                                                                                             
/litstring 
(GROUP g1 GREEN) def Literal                                                                                                                                                                                                                                                                                
/litstring 
(LABCOLOUR PURPLE) def Literal                                                                                                                                                                                                                                                                              
LitBlank
/left leftmargin indent add def 
/instr (BACKGROUND) def Instruction                                                                                                                                                                                                                                                                         
/left  128 def /ipflag    0 def /numspace   15 def
/textstring (
The default background colour is WHITE but this can be changed as required by the COLOUR
) def
/last 0 def 
Write
/ipflag    0 def /left  128 def
/last 1 def 
/textstring (
BACKGROUND colour command. 
) def
Write
/left leftmargin indent add def 
/instr (DEFAULT) def Instruction                                                                                                                                                                                                                                                                            
/ipflag    0 def /left  128 def
/last 1 def 
/textstring (
The default colours for the elements are as defined in the PROP.CMN file - 
) def
Write
/left leftmargin def 
/litpoint     8 def 
/litgap     8 def 
LitBlank
/litstring 
(B - ORANGE) def Literal                                                                                                                                                                                                                                                                                    
/litstring 
(Br,Cl,F,I - LGREEN) def Literal                                                                                                                                                                                                                                                                            
/litstring 
(C - GREEN) def Literal                                                                                                                                                                                                                                                                                     
/litstring 
(D,H - LGREY) def Literal                                                                                                                                                                                                                                                                                   
/litstring 
(N - BLUE) def Literal                                                                                                                                                                                                                                                                                      
/litstring 
(O - RED) def Literal                                                                                                                                                                                                                                                                                       
/litstring 
(P - PURPLE) def Literal                                                                                                                                                                                                                                                                                    
/litstring 
(S - YELLOW) def Literal                                                                                                                                                                                                                                                                                    
/litstring 
(SI - DGREY) def Literal                                                                                                                                                                                                                                                                                    
LitBlank
/left  128 def /ipflag    0 def /numspace   15 def
/textstring (
These colours can be recovered if altered by using COLOUR DEFAULT which returns ALL atoms to
) def
/last 0 def 
Write
/ipflag    0 def /left  128 def
/last 1 def 
/textstring (
their original colours. 
) def
Write
/left leftmargin indent add def 
/instr (NORMAL) def Instruction                                                                                                                                                                                                                                                                             
/left leftmargin indent add def 
/instr (GSCALE) def Instruction                                                                                                                                                                                                                                                                             
/left  128 def /ipflag    0 def /numspace   14 def
/textstring (
These sub-commands allow the user to see how the hardcopy greyscale picture will look. COLOUR
) def
/last 0 def 
Write
/left  128 def /ipflag    0 def /numspace   13 def
/textstring (
GSCALE changes the screen colours to the equivalent greyscale colours. The colour names GREYn
) def
/last 0 def 
Write
/left  128 def /ipflag    0 def /numspace   16 def
/textstring (
\(n=1,14\) can be used to specify colour changes if required as COLOUR N PURPLE makes little sense
) def
/last 0 def 
Write
/ipflag    0 def /left  128 def
/last 1 def 
/textstring (
on a greyscale picture. 
) def
Write
/left leftmargin def 
/litpoint     8 def 
/litgap     8 def 
LitBlank
/litstring 
(      BLACK      BLACK) def Literal                                                                                                                                                                                                                                                                        
/litstring 
(      BLUE       GREY1) def Literal                                                                                                                                                                                                                                                                        
/litstring 
(      GREEN      GREY2) def Literal                                                                                                                                                                                                                                                                        
/litstring 
(      ORANGE     GREY3) def Literal                                                                                                                                                                                                                                                                        
/litstring 
(      RED        GREY4) def Literal                                                                                                                                                                                                                                                                        
/litstring 
(      CYAN       GREY5) def Literal                                                                                                                                                                                                                                                                        
/litstring 
(      MAGENTA    GREY6) def Literal                                                                                                                                                                                                                                                                        
/litstring 
(      LGREY      GREY7) def Literal                                                                                                                                                                                                                                                                        
/litstring 
(      GREY       GREY8) def Literal                                                                                                                                                                                                                                                                        
/litstring 
(      LGREEN     GREY9) def Literal                                                                                                                                                                                                                                                                        
/litstring 
(      LBLUE      GREY10) def Literal                                                                                                                                                                                                                                                                       
/litstring 
(      LRED       GREY11) def Literal                                                                                                                                                                                                                                                                       
/litstring 
(      PINK       GREY12) def Literal                                                                                                                                                                                                                                                                       
/litstring 
(      PURPLE     GREY13) def Literal                                                                                                                                                                                                                                                                       
/litstring 
(      YELLOW     GREY14) def Literal                                                                                                                                                                                                                                                                       
/litstring 
(      WHITE      WHITE) def Literal                                                                                                                                                                                                                                                                        
LitBlank
/title (               ATOM LABELLING) def                                                                                                                                                                                                                                                                  
/banner (ATOM LABELLING) def                                                                                                                                                                                                                                                                                
Newpage
/chaptext (Atom Labelling) def                                                                                                                                                                                                                                                                              
/ichap 1 def                                                                                                                                                                                                                                                                                                
Chapter 
/left leftmargin def 
/left leftmargin def 
/instr (LABEL) def Instruction                                                                                                                                                                                                                                                                              
/left leftmargin def 
/instr (NOLABEL) def Instruction                                                                                                                                                                                                                                                                            
/left  118 def /ipflag    0 def /numspace   17 def
/textstring (
The LABEL and NOLABEL commands control the atom labelling. They are set up in an identical way to
) def
/last 0 def 
Write
/ipflag    0 def /left  118 def
/last 1 def 
/textstring (
INCLUDE and EXCLUDE and the syntax is identical: 
) def
Write
/left leftmargin def 
/litpoint     8 def 
/litgap     8 def 
LitBlank
/litstring 
(LABEL C1 C2 O) def Literal                                                                                                                                                                                                                                                                                 
/litstring 
(NOLABEL C H1) def Literal                                                                                                                                                                                                                                                                                  
/litstring 
(LABEL ALL) def Literal                                                                                                                                                                                                                                                                                     
/litstring 
(NOLABEL ALL) def Literal                                                                                                                                                                                                                                                                                   
/litstring 
(LABEL GROUP g1 ....) def Literal                                                                                                                                                                                                                                                                           
LitBlank
/ipflag    0 def /left  118 def
/last 1 def 
/textstring (
are all valid. Note that atoms will not be labelled if they are not included in the picture. 
) def
Write
/left leftmargin indent add def 
/instr (MOUSE) def Instruction                                                                                                                                                                                                                                                                              
/left  128 def /ipflag    0 def /numspace   18 def
/textstring (
All atoms will be labelled if the LABEL command has been used for them. The label positions can be
) def
/last 0 def 
Write
/left  128 def /ipflag    0 def /numspace   16 def
/textstring (
altered using the mouse if required. Note that label positions are recalculated if atoms are included or
) def
/last 0 def 
Write
/left  128 def /ipflag    0 def /numspace   17 def
/textstring (
excluded or a change in the view direction has occurred. Therefore, it is advisable that the 'final' view
) def
/last 0 def 
Write
/ipflag    0 def /left  128 def
/last 1 def 
/textstring (
is obtained before labels are positioned with the mouse. 
) def
Write
/left  138 def /ipflag    1 def /numspace   16 def
/textstring (
Mouse labelling is controlled as follows. The user clicks on a position on the screen \(once the
) def
/last 0 def 
Write
/left  128 def /ipflag    0 def /numspace   17 def
/textstring (
message Mouse Labelling activated has been seen\). If this position is over a label then the label is
) def
/last 0 def 
Write
/left  128 def /ipflag    0 def /numspace   22 def
/textstring (
replaced by a box of the same size as the label. A red cross is drawn over the atom that the label refers
) def
/last 0 def 
Write
/left  128 def /ipflag    0 def /numspace   18 def
/textstring (
to to aid identification. The mouse is then used to position the TOP LEFT HAND CORNER of the label
) def
/last 0 def 
Write
/ipflag    0 def /left  128 def
/last 1 def 
/textstring (
by a second click. Alternatively, hitting the N key \(for Nolabel\) will remove the label altogether. 
) def
Write
/left  138 def /ipflag    1 def /numspace   20 def
/textstring (
If the mouse is clicked on an atom which is NOT labelled then a label will appear at the atom centre,
) def
/last 0 def 
Write
/ipflag    0 def /left  128 def
/last 1 def 
/textstring (
this label can then be moved as described above. 
) def
Write
/left  138 def /ipflag    1 def /numspace   18 def
/textstring (
If at any time the user wishes to view the current picture without releasing the mouse, this can be
) def
/last 0 def 
Write
/ipflag    0 def /left  128 def
/last 1 def 
/textstring (
done by hitting the 'V' key. 
) def
Write
/left leftmargin indent add def 
/instr (GENERATED) def Instruction                                                                                                                                                                                                                                                                          
/left leftmargin indent add def 
/instr (INITIAL) def Instruction                                                                                                                                                                                                                                                                            
/left  128 def /ipflag    0 def /numspace   15 def
/textstring (
These commands relate to the pack number display while labelling. Atoms are assigned a pack number
) def
/last 0 def 
Write
/left  128 def /ipflag    0 def /numspace   16 def
/textstring (
after PACK or ENCLOSURE. This number is then displayed as eg N1_5. These numbers are used to
) def
/last 0 def 
Write
/left  128 def /ipflag    0 def /numspace   14 def
/textstring (
refer to atoms and elements as required. INITIAL \(the default\) will just display N1 while
) def
/last 0 def 
Write
/ipflag    0 def /left  128 def
/last 1 def 
/textstring (
GENERATED shows N1_5. 
) def
Write
/left leftmargin indent add def 
/instr (CELL) def Instruction                                                                                                                                                                                                                                                                               
/ipflag    0 def /left  128 def
/last 1 def 
/textstring (
Controls the cell labelling. 
) def
Write
/left leftmargin indent add def 
/instr (FRAGMENT) def Instruction                                                                                                                                                                                                                                                                           
/ipflag    0 def /left  128 def
/last 1 def 
/textstring (
Allows the user to set labels for a given fragment. 
) def
Write
/left leftmargin def 
/instr (FONT) def Instruction                                                                                                                                                                                                                                                                               
/ipflag    0 def /left  118 def
/last 1 def 
/textstring (
This sets the point size of the font to be used in hardcopy output. It requires one argument. 
) def
Write
/left leftmargin indent add def 
/instr (DEFAULT) def Instruction                                                                                                                                                                                                                                                                            
/ipflag    0 def /left  128 def
/last 1 def 
/textstring (
This resets the point size to its default value. 
) def
Write
/left leftmargin def 
/instr (TEXT) def Instruction                                                                                                                                                                                                                                                                               
/left leftmargin indent add def 
/instr (POSITION) def Instruction                                                                                                                                                                                                                                                                           
/ipflag    0 def /left  128 def
/last 1 def 
/textstring (
This allows the user to annotate a picture. The syntax is: 
) def
Write
/left leftmargin def 
/litpoint     8 def 
/litgap     8 def 
LitBlank
/litstring 
(TEXT "text string" POSITION x y) def Literal                                                                                                                                                                                                                                                               
LitBlank
/left  128 def /ipflag    0 def /numspace   21 def
/textstring (
The text must be in quotes. x and y are the position of the text in percentages from the top left hand
) def
/last 0 def 
Write
/ipflag    0 def /left  128 def
/last 1 def 
/textstring (
corner of the diagram. After the text is processed it is assigned a number. 
) def
Write
/left leftmargin indent add def 
/instr (NUMBER) def Instruction                                                                                                                                                                                                                                                                             
/left  128 def /ipflag    0 def /numspace   18 def
/textstring (
The NUMBER command can be used to move a text item after it has been created by using TEXT
) def
/last 0 def 
Write
/ipflag    0 def /left  128 def
/last 1 def 
/textstring (
NUMBER n POSITION x y. 
) def
Write
/title (               OTHER PICTURE CONTROLLING COMMANDS) def                                                                                                                                                                                                                                              
/banner (OTHER PICTURE CONTROLLING COMMANDS) def                                                                                                                                                                                                                                                            
Newpage
/chaptext (Other Picture Controlling Commands) def                                                                                                                                                                                                                                                          
/ichap 1 def                                                                                                                                                                                                                                                                                                
Chapter 
/left leftmargin def 
/left  118 def /ipflag    1 def /numspace   17 def
/textstring (
There are a few other commands in CAMERON which deal with control of the type of picture being
) def
/last 0 def 
Write
/ipflag    0 def /left  108 def
/last 1 def 
/textstring (
used. 
) def
Write
/left leftmargin def 
/instr (MAXIMISE) def Instruction                                                                                                                                                                                                                                                                           
/left  118 def /ipflag    0 def /numspace   14 def
/textstring (
This command is related to the VIEW commands PLANE, ALONG, VERTICAL etc. In these commands
) def
/last 0 def 
Write
/left  118 def /ipflag    0 def /numspace   20 def
/textstring (
the view direction does not define all of the degrees of freedom of the molecule. It is possible to rotate the
) def
/last 0 def 
Write
/ipflag    0 def /left  118 def
/last 1 def 
/textstring (
molecule further so that as much of is as possible is shown on the screen. 
) def
Write
/left leftmargin indent add def 
/instr (ON) def Instruction                                                                                                                                                                                                                                                                                 
/left leftmargin indent add def 
/instr (OFF) def Instruction                                                                                                                                                                                                                                                                                
/left  128 def /ipflag    0 def /numspace   13 def
/textstring (
These two commands switch maximisation calculations ON and OFF. These calculations are slow -
) def
/last 0 def 
Write
/ipflag    0 def /left  128 def
/last 1 def 
/textstring (
especially for large molecules so they are included as an option. 
) def
Write
/left leftmargin def 
/instr (SCALE) def Instruction                                                                                                                                                                                                                                                                              
/left leftmargin indent add def 
/instr (FIX) def Instruction                                                                                                                                                                                                                                                                                
/left leftmargin indent add def 
/instr (UNFIX) def Instruction                                                                                                                                                                                                                                                                              
/left  128 def /ipflag    0 def /numspace   16 def
/textstring (
These two commands allow the user to control the calculation of picture scale. SCALE FIX sets the
) def
/last 0 def 
Write
/left  128 def /ipflag    0 def /numspace   17 def
/textstring (
scale to its current value and does not recalculate it, irrespective of changes in the number and position
) def
/last 0 def 
Write
/ipflag    0 def /left  128 def
/last 1 def 
/textstring (
of atoms in the picture. SCALE UNFIX reverts to scale calculations. 
) def
Write
/left leftmargin indent add def 
/instr (SET) def Instruction                                                                                                                                                                                                                                                                                
/left  128 def /ipflag    0 def /numspace   19 def
/textstring (
SCALE SET is followed by a number, the value of the scale to be used for all subsequent pictures. This
) def
/last 0 def 
Write
/ipflag    0 def /left  128 def
/last 1 def 
/textstring (
can be altered with another SCALE SET command or by issuing SCALE UNFIX. 
) def
Write
Blank
/title (               SYMMETRY INPUT) def                                                                                                                                                                                                                                                                  
/banner (SYMMETRY INPUT) def                                                                                                                                                                                                                                                                                
Newpage
/chaptext (Symmetry Input) def                                                                                                                                                                                                                                                                              
/ichap 1 def                                                                                                                                                                                                                                                                                                
Chapter 
/left leftmargin def 
/secttext (Input of symmetry operators) def Section                                                                                                                                                                                                                                                         
/left  118 def /ipflag    1 def /numspace   15 def
/textstring (
CAMERON is a crystallographically oriented program and hence many of its functions require the use of
) def
/last 0 def 
Write
/left  108 def /ipflag    0 def /numspace   13 def
/textstring (
symmetry operators. There are two methods of inputting the symmetry operators, inputting the Spacegroup
) def
/last 0 def 
Write
/ipflag    0 def /left  108 def
/last 1 def 
/textstring (
symbol and inputting the individual operators themselves. 
) def
Write
/left leftmargin def 
/instr (SPACEGROUP) def Instruction                                                                                                                                                                                                                                                                         
/left  118 def /ipflag    0 def /numspace   14 def
/textstring (
The SPACEGROUP command is followed by the symbol, which must contain all UPPER CASE letters.
) def
/last 0 def 
Write
/left  118 def /ipflag    0 def /numspace   20 def
/textstring (
If the symbol is in a non-standard setting then the full symbol must be entered. For example P 21 will be
) def
/last 0 def 
Write
/left  118 def /ipflag    0 def /numspace   23 def
/textstring (
interpreted as P 1 21 1 which is the standard setting. If P 21 1 1 is required then the "1's" must be entered
) def
/last 0 def 
Write
/ipflag    0 def /left  118 def
/last 1 def 
/textstring (
to force the choice of unique axis. 
) def
Write
/ipflag    1 def /left  128 def
/last 1 def 
/textstring (
The syntax of the command is: 
) def
Write
/left leftmargin def 
/litpoint     8 def 
/litgap     8 def 
LitBlank
/litstring 
(SPACEGROUP X X X X) def Literal                                                                                                                                                                                                                                                                            
LitBlank
/left  118 def /ipflag    0 def /numspace   19 def
/textstring (
where X are "fields" of the symbol, with spaces between fields ie entered as P 21 and NOT P21. The
) def
/last 0 def 
Write
/left  118 def /ipflag    0 def /numspace   19 def
/textstring (
program will then output the operators that have been calculated for the symbol . Note that if a centre of
) def
/last 0 def 
Write
/left  118 def /ipflag    0 def /numspace   15 def
/textstring (
inversion is present the inverted operators will NOT be shown. Also the operators generated from the
) def
/last 0 def 
Write
/left  118 def /ipflag    0 def /numspace   19 def
/textstring (
centring vectors - eg 1\/2 1\/2 1\/2 for body centring - will NOT be shown. The complete list of operators
) def
/last 0 def 
Write
/ipflag    0 def /left  118 def
/last 1 def 
/textstring (
used for packing etc can be found by entering INFO SYMMETRY. 
) def
Write
/left leftmargin def 
/instr (SYMMETRY) def Instruction                                                                                                                                                                                                                                                                           
/left  118 def /ipflag    0 def /numspace   16 def
/textstring (
The input of symmetry operators can be done "by hand" if required. There are several steps and
) def
/last 0 def 
Write
/ipflag    0 def /left  118 def
/last 1 def 
/textstring (
sub-commands available to do this. 
) def
Write
/left leftmargin indent add def 
/instr (OPERATORS) def Instruction                                                                                                                                                                                                                                                                          
/ipflag    0 def /left  128 def
/last 1 def 
/textstring (
This sub-command MUST be entered even if only the x y z operator is to be included. The syntax is :- 
) def
Write
/left leftmargin def 
/litpoint     8 def 
/litgap     8 def 
LitBlank
/litstring 
(SYMMETRY OPERATORS x y z -x y+1\/2 -z ...) def Literal                                                                                                                                                                                                                                                     
LitBlank
/left  128 def /ipflag    0 def /numspace   22 def
/textstring (
with the operators being entered with the translational part in fractional form \( 1\/2 , 1\/3 , 1\/4 , 2\/3 , 1\/6 ,
) def
/last 0 def 
Write
/left  128 def /ipflag    0 def /numspace   18 def
/textstring (
5\/6 are recognised \) which must come after the x\/y\/z as required. The fractional part must be linked to
) def
/last 0 def 
Write
/left  128 def /ipflag    0 def /numspace   21 def
/textstring (
the x\/y\/z part with a + or - sign. Note that NO spaces are allowed within each part of the operator. This
) def
/last 0 def 
Write
/ipflag    0 def /left  128 def
/last 1 def 
/textstring (
is so that ambiguities cannot arise. 
) def
Write
/left leftmargin indent add def 
/instr (CENTRE) def Instruction                                                                                                                                                                                                                                                                             
/left  128 def /ipflag    0 def /numspace   16 def
/textstring (
This command is used to introduce a centre of inversion into the symmetry information it must be
) def
/last 0 def 
Write
/ipflag    0 def /left  128 def
/last 1 def 
/textstring (
followed by a centring letter \(P,A,B,C,I,F,R\) or the command VECTORS. 
) def
Write
/left leftmargin indent add def 
/instr (NOCENTRE) def Instruction                                                                                                                                                                                                                                                                           
/left  128 def /ipflag    0 def /numspace   18 def
/textstring (
This command is used to specify that there is no centre of inversion - the centring vectors are the
) def
/last 0 def 
Write
/ipflag    0 def /left  128 def
/last 1 def 
/textstring (
specified by letter or by using VECTORS. 
) def
Write
/left leftmargin indent add indent add def
/instr (VECTORS) def Instruction                                                                                                                                                                                                                                                                            
/left  138 def /ipflag    0 def /numspace   14 def
/textstring (
This command enables the user to introduce centring vectors into the symmetry operators eg for
) def
/last 0 def 
Write
/ipflag    0 def /left  138 def
/last 1 def 
/textstring (
body centring use :- 
) def
Write
/left leftmargin def 
/litpoint     8 def 
/litgap     8 def 
LitBlank
/litstring 
(VECTORS 0 0 0 1\/2 1\/2 1\/2) def Literal                                                                                                                                                                                                                                                                  
LitBlank
/left leftmargin indent add def 
/instr (USE) def Instruction                                                                                                                                                                                                                                                                                
/left leftmargin indent add def 
/instr (NOUSE) def Instruction                                                                                                                                                                                                                                                                              
/left  128 def /ipflag    0 def /numspace   14 def
/textstring (
These commands allow the user to omit certain symmetry operators from the packing calculations. The
) def
/last 0 def 
Write
/left  128 def /ipflag    0 def /numspace   13 def
/textstring (
command is followed by the operator numbers \(found using INFO SYMMETRY\) of the operators
) def
/last 0 def 
Write
/ipflag    0 def /left  128 def
/last 1 def 
/textstring (
needed. 
) def
Write
/left leftmargin indent add indent add def
/instr (ALL) def Instruction                                                                                                                                                                                                                                                                                
/left  138 def /ipflag    0 def /numspace   15 def
/textstring (
This may be used to USE\/NOUSE all of the operators. Note that using NOUSE ALL without
) def
/last 0 def 
Write
/ipflag    0 def /left  138 def
/last 1 def 
/textstring (
following it with USE n will result in no atoms being generated after a pack operation! 
) def
Write
/secttext (Example of Space Group Input) def Section                                                                                                                                                                                                                                                        
/ipflag    1 def /left  118 def
/last 1 def 
/textstring (
In order to end up with the Spacegroup F m m m we require :- 
) def
Write
Newpage
/left leftmargin def 
/litpoint     8 def 
/litgap     8 def 
/litstring 
(SPACEGROUP F M M M) def Literal                                                                                                                                                                                                                                                                            
Blank
/litstring 
(or) def Literal                                                                                                                                                                                                                                                                                            
Blank
/litstring 
(SYMMETRY OPERATORS) def Literal                                                                                                                                                                                                                                                                            
/litstring 
(X Y Z  -X -Y Z  -X Y -Z  X -Y -Z) def Literal                                                                                                                                                                                                                                                              
/litstring 
(CENTRE) def Literal                                                                                                                                                                                                                                                                                        
/litstring 
(VECTORS) def Literal                                                                                                                                                                                                                                                                                       
/litstring 
(0 0 0) def Literal                                                                                                                                                                                                                                                                                         
/litstring 
(0 1\/2 1\/2) def Literal                                                                                                                                                                                                                                                                                   
/litstring 
(1\/2 1\/2 0) def Literal                                                                                                                                                                                                                                                                                   
/litstring 
(1\/2 0 1\/2) def Literal                                                                                                                                                                                                                                                                                   
LitBlank
/secttext (Other symmetry related operations) def Section                                                                                                                                                                                                                                                   
/left leftmargin def 
/instr (SETUNIT) def Instruction                                                                                                                                                                                                                                                                            
/left  118 def /ipflag    0 def /numspace   19 def
/textstring (
This command causes the atoms that are to be included in the current picture to be set as the asymmetric
) def
/last 0 def 
Write
/left  118 def /ipflag    0 def /numspace   18 def
/textstring (
unit. Their data then replaces that of the initially input atoms and they are used as the asymmetric unit
) def
/last 0 def 
Write
/left  118 def /ipflag    0 def /numspace   20 def
/textstring (
from now on. This is useful if, for example only half of a molecule is present in the asymmetric unit. The
) def
/last 0 def 
Write
/left  118 def /ipflag    0 def /numspace   20 def
/textstring (
other half can be generated with ADD and then SETUNIT is used to treat all of the atoms as the basic
) def
/last 0 def 
Write
/left  118 def /ipflag    0 def /numspace   15 def
/textstring (
"building block". SETUNIT is a DANGEROUS command in that it cannot be undone - UNPACK will
) def
/last 0 def 
Write
/left  118 def /ipflag    0 def /numspace   14 def
/textstring (
NOT reverse the operation. Therefore the user is prompted for confirmation before the command is
) def
/last 0 def 
Write
/ipflag    0 def /left  118 def
/last 1 def 
/textstring (
executed. The syntax is simply SETUNIT. 
) def
Write
/left leftmargin def 
/instr (ENANTIO) def Instruction                                                                                                                                                                                                                                                                            
/ipflag    0 def /left  118 def
/last 1 def 
/textstring (
This command inverts the hand of the atoms in the asymmetric unit. Note that the operator applied is :- 
) def
Write
/left leftmargin def 
/litpoint     8 def 
/litgap     8 def 
LitBlank
/litstring 
(-1  0  0) def Literal                                                                                                                                                                                                                                                                                      
/litstring 
( 0 -1  0) def Literal                                                                                                                                                                                                                                                                                      
/litstring 
( 0  0 -1) def Literal                                                                                                                                                                                                                                                                                      
LitBlank
/ipflag    0 def /left  118 def
/last 1 def 
/textstring (
and no spacegroup changes that may be required are made. 
) def
Write
/left leftmargin def 
/instr (SPECIAL) def Instruction                                                                                                                                                                                                                                                                            
/left leftmargin indent add def 
/instr (ON) def Instruction                                                                                                                                                                                                                                                                                 
/left leftmargin indent add def 
/instr (OFF) def Instruction                                                                                                                                                                                                                                                                                
/left  128 def /ipflag    0 def /numspace   13 def
/textstring (
Controls the special position calculations that occur during packing to eliminate duplicate atoms. By
) def
/last 0 def 
Write
/ipflag    0 def /left  128 def
/last 1 def 
/textstring (
default this is ON. 
) def
Write
Blank
/title (               CRYSTAL PACKING COMMANDS) def                                                                                                                                                                                                                                                        
/banner (CRYSTAL PACKING COMMANDS) def                                                                                                                                                                                                                                                                      
Newpage
/chaptext (Crystal Packing Commands) def                                                                                                                                                                                                                                                                    
/ichap 1 def                                                                                                                                                                                                                                                                                                
Chapter 
/left leftmargin def 
/left  118 def /ipflag    1 def /numspace   15 def
/textstring (
There are two methods of crystal packing available, PACK and ENCLOSURE. Both use ALL of the
) def
/last 0 def 
Write
/left  108 def /ipflag    0 def /numspace   17 def
/textstring (
symmetry operators in the Spacegroup to generate all of the atoms that lie within a user-defined volume. The
) def
/last 0 def 
Write
/left  108 def /ipflag    0 def /numspace   14 def
/textstring (
commands ADD and MOVE are available if single symmetry operators are required. The difference between
) def
/last 0 def 
Write
/ipflag    0 def /left  108 def
/last 1 def 
/textstring (
the two commands lies in the method of volume definition. 
) def
Write
/secttext (PACK) def Section                                                                                                                                                                                                                                                                                
/left  118 def /ipflag    1 def /numspace   19 def
/textstring (
The PACK command allows the user to define a volume to be filled relative to the unit cell. One of
) def
/last 0 def 
Write
/ipflag    0 def /left  108 def
/last 1 def 
/textstring (
two-sub commands is required to define this volume. 
) def
Write
/left leftmargin def 
/instr (CELL) def Instruction                                                                                                                                                                                                                                                                               
/left  118 def /ipflag    0 def /numspace   19 def
/textstring (
PACK CELL will cause the program to generate all the atoms that lie within the unit cell. This is the
) def
/last 0 def 
Write
/ipflag    0 def /left  118 def
/last 1 def 
/textstring (
default option if no range for packing is input. 
) def
Write
/left leftmargin def 
/instr (WINDOW) def Instruction                                                                                                                                                                                                                                                                             
/left  118 def /ipflag    0 def /numspace   19 def
/textstring (
PACK WINDOW allows the user to define the volume in terms of the unit cell axes. It is followed by
) def
/last 0 def 
Write
/ipflag    0 def /left  118 def
/last 1 def 
/textstring (
three pairs of numbers. 
) def
Write
/left leftmargin def 
/litpoint     8 def 
/litgap     8 def 
LitBlank
/litstring 
(PACK WINDOW xmin xmax ymin ymax zmin zmax) def Literal                                                                                                                                                                                                                                                     
LitBlank
/left  118 def /ipflag    0 def /numspace   18 def
/textstring (
The values of xmin etc are relative to the unit cell origin. Therefore to define a volume of which
) def
/last 0 def 
Write
/ipflag    0 def /left  118 def
/last 1 def 
/textstring (
contained all of the x axis, all of the y axis and the first half of the z axis we would use: 
) def
Write
/left leftmargin def 
/litpoint     8 def 
/litgap     8 def 
LitBlank
/litstring 
(PACK WINDOW 0.0 1.0 0.0 1.0 0.0 0.5) def Literal                                                                                                                                                                                                                                                           
LitBlank
/ipflag    0 def /left  118 def
/last 1 def 
/textstring (
If more than one unit cell is required negative numbers and numbers exceeding one may be used. 
) def
Write
/left  128 def /ipflag    1 def /numspace   15 def
/textstring (
One more sub-command may be entered after the WINDOW or CELL commands. If this command is
) def
/last 0 def 
Write
/left  118 def /ipflag    0 def /numspace   20 def
/textstring (
omitted then the option chosen in the last PACK command will be used. If this is the first time PACK is
) def
/last 0 def 
Write
/ipflag    0 def /left  118 def
/last 1 def 
/textstring (
used then CUT is the default option. Three sub-commands are available: 
) def
Write
/left leftmargin indent add def 
/instr (CUT) def Instruction                                                                                                                                                                                                                                                                                
/left  128 def /ipflag    0 def /numspace   18 def
/textstring (
CUT will generate all the atoms that lie within the defined volume. ie. the generation is "cut" at the
) def
/last 0 def 
Write
/ipflag    0 def /left  128 def
/last 1 def 
/textstring (
boundary. 
) def
Write
/left leftmargin indent add def 
/instr (COMPLETE) def Instruction                                                                                                                                                                                                                                                                           
/left  128 def /ipflag    0 def /numspace   13 def
/textstring (
COMPLETE is most useful for molecular crystallographers. It will generate all the asymmetric units
) def
/last 0 def 
Write
/ipflag    0 def /left  128 def
/last 1 def 
/textstring (
that have ANY ATOMS lying with the defined volume. 
) def
Write
/left leftmargin indent add def 
/instr (CENTROID) def Instruction                                                                                                                                                                                                                                                                           
/left  128 def /ipflag    0 def /numspace   15 def
/textstring (
CENTROID is similar to COMPLETE except that it calculates the centroid of the asymmetric unit \(as
) def
/last 0 def 
Write
/left  128 def /ipflag    0 def /numspace   17 def
/textstring (
though all of the atoms have equal weight\) and includes only those which have their centroid within the
) def
/last 0 def 
Write
/left  128 def /ipflag    0 def /numspace   14 def
/textstring (
defined volume. This is particulary useful for molecular crystallographers as it creates a picture without
) def
/last 0 def 
Write
/ipflag    0 def /left  128 def
/last 1 def 
/textstring (
the "odd atoms" at the edge of the unit cell. 
) def
Write
/secttext (Dealing with connectivity) def Section                                                                                                                                                                                                                                                           
/ipflag    1 def /left  118 def
/last 1 def 
/textstring (
There are three other qualifying commands that apply to PACK: 
) def
Write
/left leftmargin def 
/instr (INTRA) def Instruction                                                                                                                                                                                                                                                                              
/left leftmargin def 
/instr (INTER) def Instruction                                                                                                                                                                                                                                                                              
/left leftmargin def 
/instr (KEEP) def Instruction                                                                                                                                                                                                                                                                               
/ipflag    0 def /left  118 def
/last 1 def 
/textstring (
These deal with the treatment of connectivity calculations once the PACK has been carried out. 
) def
Write
/left leftmargin def 
/instr (INTRA) def Instruction                                                                                                                                                                                                                                                                              
/left  118 def /ipflag    0 def /numspace   13 def
/textstring (
This qualifiers means that the connectivity will be calculated within each newly generated asymmetric
) def
/last 0 def 
Write
/left  118 def /ipflag    0 def /numspace   16 def
/textstring (
unit only. Any changes to the bonding - eg with JOIN, REMOVE, CONNECT, COLOUR BONDS - will
) def
/last 0 def 
Write
/ipflag    0 def /left  118 def
/last 1 def 
/textstring (
be undone. This is the fastest option. 
) def
Write
/left leftmargin def 
/instr (INTER) def Instruction                                                                                                                                                                                                                                                                              
/left  118 def /ipflag    0 def /numspace   17 def
/textstring (
In this case connectivity is calculated once all of the atoms have been generated - therefore if any
) def
/last 0 def 
Write
/ipflag    0 def /left  118 def
/last 1 def 
/textstring (
intra-unit bonds exist they will be found. 
) def
Write
/left leftmargin def 
/instr (KEEP) def Instruction                                                                                                                                                                                                                                                                               
/left  118 def /ipflag    0 def /numspace   18 def
/textstring (
This is the default option. Connectivity is copied from the unit used to do the packing - this includes
) def
/last 0 def 
Write
/left  118 def /ipflag    0 def /numspace   20 def
/textstring (
colour and style changes if any - into the bond info of the new atoms. This is done for each asymmetric
) def
/last 0 def 
Write
/ipflag    0 def /left  118 def
/last 1 def 
/textstring (
unit as it is generated and is slower than INTRA as it requires more comparisons to be carried out. 
) def
Write
/secttext (EXAMPLES) def Section                                                                                                                                                                                                                                                                            
/left  118 def /ipflag    1 def /numspace   18 def
/textstring (
Therefore, to create a picture containing all of the complete molecules within a cube of side equal to 2
) def
/last 0 def 
Write
/ipflag    0 def /left  108 def
/last 1 def 
/textstring (
unit cells we need :- 
) def
Write
Newpage
/left leftmargin def 
/litpoint     8 def 
/litgap     8 def 
/litstring 
(PACK) def Literal                                                                                                                                                                                                                                                                                          
/litstring 
(WINDOW 0.0 2.0 0.0 2.0 0.0 2.0) def Literal                                                                                                                                                                                                                                                                
/litstring 
(COMPLETE) def Literal                                                                                                                                                                                                                                                                                      
LitBlank
/ipflag    0 def /left  108 def
/last 1 def 
/textstring (
Or alternatively, 
) def
Write
/left leftmargin def 
/litpoint     8 def 
/litgap     8 def 
LitBlank
/litstring 
(PACK) def Literal                                                                                                                                                                                                                                                                                          
/litstring 
(WINDOW -1.0 1.0 -1.0 1.0 -1.0 1.0) def Literal                                                                                                                                                                                                                                                             
/litstring 
(COMPLETE) def Literal                                                                                                                                                                                                                                                                                      
LitBlank
/secttext (ENCLOSURE) def Section                                                                                                                                                                                                                                                                           
/left  118 def /ipflag    1 def /numspace   18 def
/textstring (
The enclosure command is more flexible than PACK as it enables the user to choose the "origin" for the
) def
/last 0 def 
Write
/ipflag    0 def /left  108 def
/last 1 def 
/textstring (
atom generation. The first task is to specify this origin which is either a point in the unit cell or an atom. 
) def
Write
/secttext (Choice of enclosure "origin") def Section                                                                                                                                                                                                                                                        
/left leftmargin def 
/instr (ATOM) def Instruction                                                                                                                                                                                                                                                                               
/left  118 def /ipflag    0 def /numspace   16 def
/textstring (
If we wish to generate the atoms around Cu1 in order to examine the coordination environment for
) def
/last 0 def 
Write
/ipflag    0 def /left  118 def
/last 1 def 
/textstring (
example we can use: 
) def
Write
/left leftmargin def 
/litpoint     8 def 
/litgap     8 def 
LitBlank
/litstring 
(ENCLOSURE ATOM CU1) def Literal                                                                                                                                                                                                                                                                            
LitBlank
/left leftmargin def 
/instr (POINT) def Instruction                                                                                                                                                                                                                                                                              
/ipflag    0 def /left  118 def
/last 1 def 
/textstring (
Alternatively we can choose the centre of the unit cell: 
) def
Write
/left leftmargin def 
/litpoint     8 def 
/litgap     8 def 
LitBlank
/litstring 
(ENCLOSURE POINT 0.5 0.5 0.5) def Literal                                                                                                                                                                                                                                                                   
LitBlank
/left  118 def /ipflag    0 def /numspace   20 def
/textstring (
The POINT sub-command can be used if an atom does not lie at the point in question eg if we are
) def
/last 0 def 
Write
/ipflag    0 def /left  118 def
/last 1 def 
/textstring (
examining a "hole" within a structure. 
) def
Write
/secttext (Type of volume to be used) def Section                                                                                                                                                                                                                                                           
/ipflag    1 def /left  118 def
/last 1 def 
/textstring (
There are three different ways of defining the volume of enclosure: 
) def
Write
/left leftmargin def 
/instr (SPHERE) def Instruction                                                                                                                                                                                                                                                                             
/ipflag    0 def /left  118 def
/last 1 def 
/textstring (
This will generate a sphere of enclosure about the origin. The syntax is: 
) def
Write
/left leftmargin def 
/litpoint     8 def 
/litgap     8 def 
LitBlank
/litstring 
(SPHERE r) def Literal                                                                                                                                                                                                                                                                                      
LitBlank
/ipflag    0 def /left  118 def
/last 1 def 
/textstring (
where r is the radius in angstroms of the sphere. 
) def
Write
/left leftmargin def 
/instr (ANORTHIC) def Instruction                                                                                                                                                                                                                                                                           
/left  118 def /ipflag    0 def /numspace   21 def
/textstring (
This is used to generate an ANORTHIC box ie a box whose sides are parallel to th to the unit cell its
) def
/last 0 def 
Write
/ipflag    0 def /left  118 def
/last 1 def 
/textstring (
dimensions are given in fractional coordinates. The syntax is: 
) def
Write
/left leftmargin def 
/litpoint     8 def 
/litgap     8 def 
LitBlank
/litstring 
(ANORTHIC -x +x -y +y -z +z) def Literal                                                                                                                                                                                                                                                                    
LitBlank
/left  118 def /ipflag    0 def /numspace   18 def
/textstring (
Therefore, to generate an anorthic box with sides extending one quarter of a unit cell in all six directions
) def
/last 0 def 
Write
/ipflag    0 def /left  118 def
/last 1 def 
/textstring (
from the defined origin we use: 
) def
Write
/left leftmargin def 
/litpoint     8 def 
/litgap     8 def 
LitBlank
/litstring 
(ANORTHIC 0.25 0.25 0.25 0.25 0.25 0.25) def Literal                                                                                                                                                                                                                                                        
LitBlank
/left leftmargin def 
/instr (ORTHOGONAL) def Instruction                                                                                                                                                                                                                                                                         
/left  118 def /ipflag    0 def /numspace   19 def
/textstring (
This is used to generate a box whose sides are perpendicular to each other. The z axis lies along the
) def
/last 0 def 
Write
/left  118 def /ipflag    0 def /numspace   17 def
/textstring (
current view direction and the x and y axes lie across and vertically up the screen respectively. The
) def
/last 0 def 
Write
/left  118 def /ipflag    0 def /numspace   19 def
/textstring (
dimensions of this box is defined in a similar way to the ANORTHIC box except that they are given in
) def
/last 0 def 
Write
/left  118 def /ipflag    0 def /numspace   22 def
/textstring (
angstroms. For example, to generate a box that is 4.0 angstroms wide in x, 1 in y and 0.5 in z we would
) def
/last 0 def 
Write
/ipflag    0 def /left  118 def
/last 1 def 
/textstring (
use: 
) def
Write
/left leftmargin def 
/litpoint     8 def 
/litgap     8 def 
LitBlank
/litstring 
(ORTHOGONAL 2.0 2.0 1.0 1.0 0.25 0.25) def Literal                                                                                                                                                                                                                                                          
LitBlank
/left  118 def /ipflag    0 def /numspace   17 def
/textstring (
It is important to note that this volume is related to the CURRENT view direction. The VIEW ALONG
) def
/last 0 def 
Write
/ipflag    0 def /left  118 def
/last 1 def 
/textstring (
AXIS command can be used to orient the picture prior to carrying out this command if required. 
) def
Write
/left leftmargin indent add def 
/instr (CUT) def Instruction                                                                                                                                                                                                                                                                                
/left leftmargin indent add def 
/instr (COMPLETE) def Instruction                                                                                                                                                                                                                                                                           
/left leftmargin indent add def 
/instr (CENTROID) def Instruction                                                                                                                                                                                                                                                                           
/left  128 def /ipflag    0 def /numspace   17 def
/textstring (
As with PACK a further sub-command can be used if desired to define the type of boundary handling
) def
/last 0 def 
Write
/ipflag    0 def /left  128 def
/last 1 def 
/textstring (
used. CUT, COMPLETE and CENTROID have the same meanings as described above for PACK. 
) def
Write
/left leftmargin indent add indent add def
/instr (INTRA) def Instruction                                                                                                                                                                                                                                                                              
/left leftmargin indent add indent add def
/instr (INTER) def Instruction                                                                                                                                                                                                                                                                              
/left leftmargin indent add indent add def
/instr (KEEP) def Instruction                                                                                                                                                                                                                                                                               
/ipflag    0 def /left  138 def
/last 1 def 
/textstring (
These sub commands have an identical meaning to those described for PACK above. 
) def
Write
/secttext (EXAMPLE) def Section                                                                                                                                                                                                                                                                             
/ipflag    1 def /left  118 def
/last 1 def 
/textstring (
To generate all the atoms that lie within a sphere of radius 5.0 angstroms about a CU1 atom we use: 
) def
Write
/left leftmargin def 
/litpoint     8 def 
/litgap     8 def 
LitBlank
/litstring 
(ENCLOSURE) def Literal                                                                                                                                                                                                                                                                                     
/litstring 
(ATOM CU1) def Literal                                                                                                                                                                                                                                                                                      
/litstring 
(SPHERE 5.0) def Literal                                                                                                                                                                                                                                                                                    
Newpage
/litstring 
(CUT) def Literal                                                                                                                                                                                                                                                                                           
LitBlank
/left  118 def /ipflag    1 def /numspace   19 def
/textstring (
To generate all the asymmetric units that have any atoms within a box of side 0.5 units around the unit
) def
/last 0 def 
Write
/ipflag    0 def /left  108 def
/last 1 def 
/textstring (
cell centre we use:- 
) def
Write
/left leftmargin def 
/litpoint     8 def 
/litgap     8 def 
LitBlank
/litstring 
(ENCLOSURE) def Literal                                                                                                                                                                                                                                                                                     
/litstring 
(POINT 0.5 0.5 0.5) def Literal                                                                                                                                                                                                                                                                             
/litstring 
(ANORTHIC 0.25 0.25 0.25 0.25 0.25 0.25) def Literal                                                                                                                                                                                                                                                        
/litstring 
(COMPLETE) def Literal                                                                                                                                                                                                                                                                                      
LitBlank
/left  118 def /ipflag    1 def /numspace   21 def
/textstring (
And to generate all the atoms that lie inside a box centred on the point 0.25 0.25 0.25 and of sides x=1.0
) def
/last 0 def 
Write
/ipflag    0 def /left  108 def
/last 1 def 
/textstring (
y=2.0 and z=3.0 angstroms :- 
) def
Write
/left leftmargin def 
/litpoint     8 def 
/litgap     8 def 
LitBlank
/litstring 
(ENCLOSURE) def Literal                                                                                                                                                                                                                                                                                     
/litstring 
(POINT 0.25 0.25 0.25) def Literal                                                                                                                                                                                                                                                                          
/litstring 
(ORTHOGONAL 0.5 0.5 1.0 1.0 1.5 1.5) def Literal                                                                                                                                                                                                                                                            
/litstring 
(CUT) def Literal                                                                                                                                                                                                                                                                                           
LitBlank
/secttext (PACKING MORE COMPLICATED STRUCTURES) def Section                                                                                                                                                                                                                                                 
/left  118 def /ipflag    1 def /numspace   14 def
/textstring (
The PACK and ENCLOSURE commands always work on the initial data- unless a SETUNIT command
) def
/last 0 def 
Write
/left  108 def /ipflag    0 def /numspace   21 def
/textstring (
has been issued. In some cases however, it is more useful for the user to be able to deal with certain sections
) def
/last 0 def 
Write
/left  108 def /ipflag    0 def /numspace   19 def
/textstring (
of the structure separately. This is most likely to occur where there is more than one distinct unit in the
) def
/last 0 def 
Write
/ipflag    0 def /left  108 def
/last 1 def 
/textstring (
asymmetric unit. This is dealt with by the command GROUP. 
) def
Write
/left leftmargin def 
/instr (GROUP) def Instruction                                                                                                                                                                                                                                                                              
/ipflag    0 def /left  118 def
/last 1 def 
/textstring (
GROUP can be used directly after both PACK and ENCLOSURE. The syntax is:- 
) def
Write
/left leftmargin def 
/litpoint     8 def 
/litgap     8 def 
LitBlank
/litstring 
(PACK GROUP groupname CELL ...) def Literal                                                                                                                                                                                                                                                                 
/litstring 
(or) def Literal                                                                                                                                                                                                                                                                                            
/litstring 
(PACK GROUP groupname WINDOW ...) def Literal                                                                                                                                                                                                                                                               
/litstring 
(etc) def Literal                                                                                                                                                                                                                                                                                           
LitBlank
/left  118 def /ipflag    0 def /numspace   14 def
/textstring (
This causes the groups to be packed individually, the CENTROID, COMPLETE and CUT commands are
) def
/last 0 def 
Write
/left  118 def /ipflag    0 def /numspace   17 def
/textstring (
applied to the group and not to the asymmetric unit as a whole. Packs are cumulative, unless a
) def
/last 0 def 
Write
/left  118 def /ipflag    0 def /numspace   13 def
/textstring (
PACK\/ENCLOSURE is done without the GROUP sub command in which case the previously generated
) def
/last 0 def 
Write
/ipflag    0 def /left  118 def
/last 1 def 
/textstring (
atoms are overwritten. Groups are defined with the command DEFGROUP. 
) def
Write
/left  128 def /ipflag    1 def /numspace   17 def
/textstring (
If required, more than one groupname can be packed at once - they are all treated separately. All
) def
/last 0 def 
Write
/ipflag    0 def /left  118 def
/last 1 def 
/textstring (
groups can be packed in turn if PACK GROUP * is used. 
) def
Write
Blank
/secttext (UNPACK) def Section                                                                                                                                                                                                                                                                              
/left  118 def /ipflag    1 def /numspace   14 def
/textstring (
This command causes all atoms generated via PACK or ENCLOSURE to be removed from the
) def
/last 0 def 
Write
/ipflag    0 def /left  108 def
/last 1 def 
/textstring (
calculations, drawings etc. It has no sub-commands. It also works with ADD and MOVE generated data. 
) def
Write
Blank
/title (               ADD AND MOVE - FURTHER SYMMETRY RELATED COMMANDS) def                                                                                                                                                                                                                                
/banner (ADD AND MOVE - FURTHER SYMMETRY RELATED COMMANDS) def                                                                                                                                                                                                                                              
Newpage
/chaptext (Add And Move - Further Symmetry Related Commands) def                                                                                                                                                                                                                                            
/ichap 1 def                                                                                                                                                                                                                                                                                                
Chapter 
/left leftmargin def 
/left  118 def /ipflag    1 def /numspace   15 def
/textstring (
The PACK and ENCLOSURE commands already detailed allow the user to apply all of the symmetry
) def
/last 0 def 
Write
/left  108 def /ipflag    0 def /numspace   20 def
/textstring (
operators in the spacegroup to the initial set of atoms in order to get a fully 'packed' result. In some cases
) def
/last 0 def 
Write
/left  108 def /ipflag    0 def /numspace   20 def
/textstring (
however, the user may wish to apply only one symmetry operator or to apply ones that are not present in the
) def
/last 0 def 
Write
/ipflag    0 def /left  108 def
/last 1 def 
/textstring (
spacegroup. The ADD and MOVE commands allow this. 
) def
Write
/secttext (ADD) def Section                                                                                                                                                                                                                                                                                 
/left  118 def /ipflag    1 def /numspace   15 def
/textstring (
The ADD command allows the user complete control over the symmetry operator used to generate new
) def
/last 0 def 
Write
/left  108 def /ipflag    0 def /numspace   21 def
/textstring (
atoms. The first task of the user is to generate a list of those atoms to be used in the symmetry generation
) def
/last 0 def 
Write
/ipflag    0 def /left  108 def
/last 1 def 
/textstring (
later. One of the following sub-commands is required :- 
) def
Write
/left leftmargin def 
/instr (ATOMS) def Instruction                                                                                                                                                                                                                                                                              
/left  118 def /ipflag    0 def /numspace   20 def
/textstring (
The names of atoms to be included in the pack list are specified here. Element names can also be used if
) def
/last 0 def 
Write
/ipflag    0 def /left  118 def
/last 1 def 
/textstring (
required. 
) def
Write
/left leftmargin def 
/instr (ALL) def Instruction                                                                                                                                                                                                                                                                                
/left  118 def /ipflag    0 def /numspace   20 def
/textstring (
ALL refers to the atoms that are in the current list. If any atoms have been generated by previous PACK ,
) def
/last 0 def 
Write
/ipflag    0 def /left  118 def
/last 1 def 
/textstring (
ENCLOSURE or ADD commands then these will all go into the list. 
) def
Write
/left leftmargin def 
/instr (INITIAL) def Instruction                                                                                                                                                                                                                                                                            
/ipflag    0 def /left  118 def
/last 1 def 
/textstring (
ADD INITIAL means that the only atoms to go into the ADD list are those that were initially input. 
) def
Write
/left leftmargin def 
/instr (GROUP) def Instruction                                                                                                                                                                                                                                                                              
/left  118 def /ipflag    0 def /numspace   17 def
/textstring (
This is followed by a group name. The group must have been previously been defined by the command
) def
/last 0 def 
Write
/ipflag    0 def /left  118 def
/last 1 def 
/textstring (
DEFGROUP. 
) def
Write
Blank
/left  128 def /ipflag    1 def /numspace   17 def
/textstring (
Once the ADD list has been created the user must then supply the symmetry operators which will act
) def
/last 0 def 
Write
/ipflag    0 def /left  118 def
/last 1 def 
/textstring (
on the atoms in this list to generate the new atoms. The symmetry input is in two parts. 
) def
Write
/left leftmargin indent add def 
/instr (OPERATOR) def Instruction                                                                                                                                                                                                                                                                           
/ipflag    0 def /left  128 def
/last 1 def 
/textstring (
The symmetry operator may be input in decimal or fractional form eg 
) def
Write
/left leftmargin def 
/litpoint     8 def 
/litgap     8 def 
LitBlank
/litstring 
(x y+1\/2 z) def Literal                                                                                                                                                                                                                                                                                    
Blank
/litstring 
(-0.333-x -y -z) def Literal                                                                                                                                                                                                                                                                                
/litstring 
(ETC) def Literal                                                                                                                                                                                                                                                                                           
LitBlank
/left  128 def /ipflag    0 def /numspace   17 def
/textstring (
Decimal translations may come before or after the axis symbol. The fractions 1\/2, 1\/3, 1\/4, 2\/3, 1\/6 and
) def
/last 0 def 
Write
/left  128 def /ipflag    0 def /numspace   16 def
/textstring (
5\/6 are accepted by the program, but must appear after the x\/y\/z character. There must be spaces
) def
/last 0 def 
WriteCalc
/textstring (5\/6 are accepted by the program, but ) def WritePart
/textstring (must ) def
WriteBold
/textstring (appear ) def WritePart
/textstring (after ) def
WriteBold
/textstring (the x\/y\/z character. There must be spaces) def WritePart
/ypos ypos linegap sub def
/ipflag    0 def /left  128 def
/last 1 def 
/textstring (
between the three parts but NO SPACES within the operator ie 
) def
Write
/left leftmargin def 
/litpoint     8 def 
/litgap     8 def 
LitBlank
/litstring 
(X + 1\/2 -Y  Z) def Literal                                                                                                                                                                                                                                                                                
LitBlank
/left  128 def /ipflag    0 def /numspace   21 def
/textstring (
will produce an error as it is not possible to tell whether you mean X+1\/2, -Y, Z or X, +1\/2-Y, Z. This
) def
/last 0 def 
Write
/ipflag    0 def /left  128 def
/last 1 def 
/textstring (
strict input syntax is used to eliminate any ambiguities. 
) def
Write
/left leftmargin indent add def 
/instr (TRANS) def Instruction                                                                                                                                                                                                                                                                              
/left  128 def /ipflag    0 def /numspace   15 def
/textstring (
Translations can also be applied if required. The translations are applied in unit cell fractions. The
) def
/last 0 def 
Write
/ipflag    0 def /left  128 def
/last 1 def 
/textstring (
syntax is :- 
) def
Write
/left leftmargin def 
/litpoint     8 def 
/litgap     8 def 
LitBlank
/litstring 
(TRANS x y z) def Literal                                                                                                                                                                                                                                                                                   
LitBlank
/secttext (EXAMPLES) def Section                                                                                                                                                                                                                                                                            
/ipflag    0 def /left  108 def
/last 1 def 
/textstring (
To generate an atom at x+1\/2 y z from an atom at x y z we can use 
) def
Write
/left leftmargin def 
/litpoint     8 def 
/litgap     8 def 
LitBlank
/litstring 
(ADD) def Literal                                                                                                                                                                                                                                                                                           
/litstring 
(ATOMS C1) def Literal                                                                                                                                                                                                                                                                                      
/litstring 
(OPERATOR X+1\/2 Y Z) def Literal                                                                                                                                                                                                                                                                           
LitBlank
/ipflag    0 def /left  108 def
/last 1 def 
/textstring (
or we could use 
) def
Write
/left leftmargin def 
/litpoint     8 def 
/litgap     8 def 
LitBlank
/litstring 
(ADD) def Literal                                                                                                                                                                                                                                                                                           
/litstring 
(ATOMS C1) def Literal                                                                                                                                                                                                                                                                                      
/litstring 
(TRANS 0.5 0 0) def Literal                                                                                                                                                                                                                                                                                 
LitBlank
/left  108 def /ipflag    0 def /numspace   15 def
/textstring (
The OPERATOR and TRANS commands can be used together if required. We can apply a symmetry
) def
/last 0 def 
Write
/left  108 def /ipflag    0 def /numspace   17 def
/textstring (
operator followed by a translation. This reduces the errors that may occur when trying to combine the two
) def
/last 0 def 
Write
/ipflag    0 def /left  108 def
/last 1 def 
/textstring (
things into one symmetry operator. 
) def
Write
Blank
/ipflag    0 def /left  108 def
/last 1 def 
/textstring (
The use of INITIAL versus ALL is illustrated below. Start with :- 
) def
Write
/left leftmargin def 
/litpoint     8 def 
/litgap     8 def 
LitBlank
/litstring 
(ADD) def Literal                                                                                                                                                                                                                                                                                           
/litstring 
(ALL) def Literal                                                                                                                                                                                                                                                                                           
/litstring 
(TRANS 1 0 0) def Literal                                                                                                                                                                                                                                                                                   
LitBlank
/ipflag    0 def /left  108 def
/last 1 def 
/textstring (
which gives us a molecule at x y z and another at x+1 y z. Follow this with :- 
) def
Write
/left leftmargin def 
/litpoint     8 def 
/litgap     8 def 
LitBlank
Newpage
/litstring 
(ADD) def Literal                                                                                                                                                                                                                                                                                           
/litstring 
(ALL) def Literal                                                                                                                                                                                                                                                                                           
/litstring 
(TRANS 0 1 0) def Literal                                                                                                                                                                                                                                                                                   
LitBlank
/ipflag    0 def /left  108 def
/last 1 def 
/textstring (
and we get four molecules, x y z , x+1 y z , x+1 y+1 z and x y+1 z. Following it with :- 
) def
Write
/left leftmargin def 
/litpoint     8 def 
/litgap     8 def 
LitBlank
/litstring 
(ADD) def Literal                                                                                                                                                                                                                                                                                           
/litstring 
(INITIAL) def Literal                                                                                                                                                                                                                                                                                       
/litstring 
(TRANS 0 1 0) def Literal                                                                                                                                                                                                                                                                                   
LitBlank
/ipflag    0 def /left  108 def
/last 1 def 
/textstring (
Gives us three molecules, x y z, x+1 y z and x y+1 z. 
) def
Write
Blank
/secttext (MOVE) def Section                                                                                                                                                                                                                                                                                
/ipflag    1 def /left  118 def
/last 1 def 
/textstring (
The syntax for this command is identical to that for ADD. Therefore the commands available are :- 
) def
Write
/left leftmargin def 
/instr (ATOMS) def Instruction                                                                                                                                                                                                                                                                              
/left leftmargin def 
/instr (ALL) def Instruction                                                                                                                                                                                                                                                                                
/left leftmargin def 
/instr (GROUP) def Instruction                                                                                                                                                                                                                                                                              
/left leftmargin def 
/instr (INITIAL) def Instruction                                                                                                                                                                                                                                                                            
/ipflag    0 def /left  118 def
/last 1 def 
/textstring (
Which must be followed one \(or both\) of :- 
) def
Write
/left leftmargin indent add def 
/instr (OPERATOR) def Instruction                                                                                                                                                                                                                                                                           
/left leftmargin indent add def 
/instr (TRANS) def Instruction                                                                                                                                                                                                                                                                              
/left  128 def /ipflag    0 def /numspace   17 def
/textstring (
The MOVE command applies a symmetry operator and\/or a translation to all of the atoms held in the
) def
/last 0 def 
Write
/left  128 def /ipflag    0 def /numspace   10 def
/textstring (
list defined by the ATOMS\/ALL\/GROUP\/INITIAL commands. Unlike ADD therefore, the same
) def
/last 0 def 
Write
/ipflag    0 def /left  128 def
/last 1 def 
/textstring (
number of atoms are present at the beginning and end of the operation. 
) def
Write
Blank
/title (               DISTANCE AND ANGLE CALCULATIONS) def                                                                                                                                                                                                                                                 
/banner (DISTANCE AND ANGLE CALCULATIONS) def                                                                                                                                                                                                                                                               
Newpage
/chaptext (Distance And Angle Calculations) def                                                                                                                                                                                                                                                             
/ichap 1 def                                                                                                                                                                                                                                                                                                
Chapter 
/left leftmargin def 
/ipflag    1 def /left  118 def
/last 1 def 
/textstring (
CAMERON allows the user to calculate distances , angles and torsion angles. 
) def
Write
/left leftmargin def 
/instr (DISTANCE) def Instruction                                                                                                                                                                                                                                                                           
/left  118 def /ipflag    0 def /numspace   19 def
/textstring (
In order to perform a distance calculation two atoms lists must be generated. The first list is used as a
) def
/last 0 def 
Write
/left  118 def /ipflag    0 def /numspace   16 def
/textstring (
'starting atom' and the second list is for 'target atoms'. Distances will be calculated between atoms in
) def
/last 0 def 
Write
/ipflag    0 def /left  118 def
/last 1 def 
/textstring (
separate lists BUT NOT within the lists themselves. The list may be generated in two ways:- 
) def
Write
/left leftmargin def 
/litpoint     8 def 
/litgap     8 def 
LitBlank
/litstring 
(DISTANCE N O) def Literal                                                                                                                                                                                                                                                                                  
LitBlank
/left  118 def /ipflag    0 def /numspace   22 def
/textstring (
generates two lists - both of which can all the N and all the O atoms. In this case N-O, N-N and O-O
) def
/last 0 def 
Write
/ipflag    0 def /left  118 def
/last 1 def 
/textstring (
distances will be found. 
) def
Write
/left leftmargin indent add def 
/instr (FROM) def Instruction                                                                                                                                                                                                                                                                               
/left leftmargin indent add def 
/instr (TO) def Instruction                                                                                                                                                                                                                                                                                 
/ipflag    0 def /left  128 def
/last 1 def 
/textstring (
These subcommands allow to specify different starting and target atoms. 
) def
Write
/left leftmargin def 
/litpoint     8 def 
/litgap     8 def 
LitBlank
/litstring 
(DISTANCE FROM N TO O) def Literal                                                                                                                                                                                                                                                                          
LitBlank
/left  128 def /ipflag    0 def /numspace   15 def
/textstring (
will only calculated N-O distances. Note that the distance arguments may be either atoms or elements
) def
/last 0 def 
Write
/ipflag    0 def /left  128 def
/last 1 def 
/textstring (
as required. 
) def
Write
/left leftmargin indent add def 
/instr (RANGE) def Instruction                                                                                                                                                                                                                                                                              
/ipflag    0 def /left  128 def
/last 1 def 
/textstring (
This sets the minimum and maximum ranges for displayed distances. The syntax is :- 
) def
Write
/left leftmargin def 
/litpoint     8 def 
/litgap     8 def 
LitBlank
/litstring 
(DISTANCE RANGE dmin dmax) def Literal                                                                                                                                                                                                                                                                      
LitBlank
/left  128 def /ipflag    0 def /numspace   18 def
/textstring (
distances are given in angstroms. If only TWO atoms are present in the atom list then the distance will
) def
/last 0 def 
Write
/left  128 def /ipflag    0 def /numspace   16 def
/textstring (
be outputted irrespective of the range. However, as the full calculation will be carried out first there
) def
/last 0 def 
Write
/ipflag    0 def /left  128 def
/last 1 def 
/textstring (
may be a time delay while the calculation proceeds. 
) def
Write
/secttext (Method of Calculation) def Section                                                                                                                                                                                                                                                               
/left  118 def /ipflag    1 def /numspace   16 def
/textstring (
The distances output make use of the symmetry operators in order to find distances within the given
) def
/last 0 def 
Write
/left  108 def /ipflag    0 def /numspace   16 def
/textstring (
range. The starting atom coordinates are NOT ALTERED but those of the target atoms are. The symmetry
) def
/last 0 def 
Write
/ipflag    0 def /left  108 def
/last 1 def 
/textstring (
operators \(and any suitable translations\) are used to move the target atoms around. The output produced is:- 
) def
Write
/left leftmargin def 
/litpoint     8 def 
/litgap     8 def 
LitBlank
/litstring 
(N1_0      O2      2.323) def Literal                                                                                                                                                                                                                                                                       
/litstring 
(Operator x y z Translations 0 0 1) def Literal                                                                                                                                                                                                                                                             
/litstring 
(N1_0      O2_4    1.114) def Literal                                                                                                                                                                                                                                                                       
/litstring 
(Operator -x y+1\/2 -z Translations 0 0 -1) def Literal                                                                                                                                                                                                                                                     
LitBlank
/left  108 def /ipflag    0 def /numspace   19 def
/textstring (
These show the N1 to O2 distances. The first distance relates to an O2 atom which does not currently exist.
) def
/last 0 def 
Write
/left  108 def /ipflag    0 def /numspace   17 def
/textstring (
The operator and translations shown can be used with ADD to generate the atom if required. The second
) def
/last 0 def 
Write
/left  108 def /ipflag    0 def /numspace   22 def
/textstring (
distance is to an atom \(O2_4\) which does exist. ie. if no pack number is given for the second atom it is not
) def
/last 0 def 
Write
/ipflag    0 def /left  108 def
/last 1 def 
/textstring (
present in the current list. 
) def
Write
/left leftmargin def 
/instr (ANGLE) def Instruction                                                                                                                                                                                                                                                                              
/left leftmargin def 
/instr (TORSION) def Instruction                                                                                                                                                                                                                                                                            
/left  118 def /ipflag    0 def /numspace   17 def
/textstring (
These commands are used to find angles and torsion angles between atoms that are in the current list.
) def
/last 0 def 
Write
/ipflag    0 def /left  118 def
/last 1 def 
/textstring (
They are entered in sets of three \(or four\) as required. 
) def
Write
Blank
/title (               INFORMATION ON DATA HELD WITHIN THE PROGRAM) def                                                                                                                                                                                                                                     
/banner (INFORMATION ON DATA HELD WITHIN THE PROGRAM) def                                                                                                                                                                                                                                                   
Newpage
/chaptext (Information On Data Held Within The Program) def                                                                                                                                                                                                                                                 
/ichap 1 def                                                                                                                                                                                                                                                                                                
Chapter 
/left leftmargin def 
/left  118 def /ipflag    1 def /numspace   19 def
/textstring (
CAMERON holds a number of pieces of information while it is running and in some cases it is useful for
) def
/last 0 def 
Write
/ipflag    0 def /left  108 def
/last 1 def 
/textstring (
the user to be able to access this information. 
) def
Write
/left leftmargin def 
/instr (INFORMATION) def Instruction                                                                                                                                                                                                                                                                        
/ipflag    0 def /left  118 def
/last 1 def 
/textstring (
This command is followed by a sub-command which specifies the type of information wanted. 
) def
Write
/left leftmargin indent add def 
/instr (CELL) def Instruction                                                                                                                                                                                                                                                                               
/ipflag    0 def /left  128 def
/last 1 def 
/textstring (
Outputs the unit cell parameters. 
) def
Write
/left leftmargin indent add def 
/instr (ATOMS) def Instruction                                                                                                                                                                                                                                                                              
/left  128 def /ipflag    0 def /numspace   17 def
/textstring (
Outputs the names of atoms stored within the program. It produces two lists - one of atoms currently
) def
/last 0 def 
Write
/ipflag    0 def /left  128 def
/last 1 def 
/textstring (
included and one of atoms currently excluded from the picture. 
) def
Write
/left leftmargin indent add def 
/instr (COLOUR) def Instruction                                                                                                                                                                                                                                                                             
/ipflag    0 def /left  128 def
/last 1 def 
/textstring (
This outputs the colour names that are available. 
) def
Write
/left leftmargin indent add def 
/instr (SYMMETRY) def Instruction                                                                                                                                                                                                                                                                           
/ipflag    0 def /left  128 def
/last 1 def 
/textstring (
This command outputs the symmetry operators currently stored. 
) def
Write
/left leftmargin indent add def 
/instr (GROUP) def Instruction                                                                                                                                                                                                                                                                              
/ipflag    0 def /left  128 def
/last 1 def 
/textstring (
Outputs a list of the currently defined groups and their members. 
) def
Write
/left leftmargin indent add def 
/instr (PACKNUMBERS) def Instruction                                                                                                                                                                                                                                                                        
/left  128 def /ipflag    0 def /numspace   13 def
/textstring (
Outputs the symmetry operator and translation associated with a given packnumber. The syntax is
) def
/last 0 def 
Write
/ipflag    0 def /left  128 def
/last 1 def 
/textstring (
INFO PACKNUMBER n1 n2 n3. 
) def
Write
Blank
/title (               GROUP DEFINITIONS) def                                                                                                                                                                                                                                                               
/banner (GROUP DEFINITIONS) def                                                                                                                                                                                                                                                                             
Newpage
/chaptext (Group Definitions) def                                                                                                                                                                                                                                                                           
/ichap 1 def                                                                                                                                                                                                                                                                                                
Chapter 
/left leftmargin def 
/left  118 def /ipflag    1 def /numspace   17 def
/textstring (
For complicated structures it is sometimes useful to define GROUPS of atoms which can be referred to as
) def
/last 0 def 
Write
/left  108 def /ipflag    0 def /numspace   14 def
/textstring (
a whole later. EXCLUDE, INCLUDE, COLOUR BONDS etc can all be used with the GROUP
) def
/last 0 def 
Write
/ipflag    0 def /left  108 def
/last 1 def 
/textstring (
sub-command. 
) def
Write
/left leftmargin def 
/instr (DEFGROUP) def Instruction                                                                                                                                                                                                                                                                           
/left  118 def /ipflag    0 def /numspace   21 def
/textstring (
This is the main header command and is followed by the name of the group. Note that it is not possible to
) def
/last 0 def 
Write
/left  118 def /ipflag    0 def /numspace   19 def
/textstring (
have group names that begin with GROUP itself - g1, g2 are valid names but group1, group2 are not. Up
) def
/last 0 def 
Write
/ipflag    0 def /left  118 def
/last 1 def 
/textstring (
to twelve characters are allowed to define the group name. 
) def
Write
/left leftmargin indent add def 
/instr (ATOMS) def Instruction                                                                                                                                                                                                                                                                              
/ipflag    0 def /left  128 def
/last 1 def 
/textstring (
This is followed by a list of atoms\/elements to be included in the group. 
) def
Write
/left leftmargin indent add def 
/instr (GROUP) def Instruction                                                                                                                                                                                                                                                                              
/left  128 def /ipflag    0 def /numspace   21 def
/textstring (
It is possible to have an atom as a member of up to three groups at once. You can therefore add groups
) def
/last 0 def 
Write
/ipflag    0 def /left  128 def
/last 1 def 
/textstring (
into other groups \(see Example\). 
) def
Write
/left leftmargin indent add def 
/instr (FRAGMENT) def Instruction                                                                                                                                                                                                                                                                           
/left  128 def /ipflag    0 def /numspace   16 def
/textstring (
The user can include atoms in a group by defining a fragment. The fragment definition requires a
) def
/last 0 def 
Write
/ipflag    0 def /left  128 def
/last 1 def 
/textstring (
single atom. Any atoms joined to it, and any atoms to those etc are made part of the group. 
) def
Write
/left leftmargin indent add def 
/instr (DELETE) def Instruction                                                                                                                                                                                                                                                                             
/ipflag    0 def /left  128 def
/last 1 def 
/textstring (
You can also remove atoms from groups if required. 
) def
Write
/secttext (Example) def Section                                                                                                                                                                                                                                                                             
/left  118 def /ipflag    1 def /numspace   15 def
/textstring (
Consider an molecule that contains a tri-phenyl phosphine. A use of the DEFGROUP command would be
) def
/last 0 def 
Write
/ipflag    0 def /left  108 def
/last 1 def 
/textstring (
:- 
) def
Write
/left leftmargin def 
/litpoint     8 def 
/litgap     8 def 
LitBlank
/litstring 
(DEFGROUP PHENYL1) def Literal                                                                                                                                                                                                                                                                              
/litstring 
(ATOMS C1 C2 C3 C4 C5 C6) def Literal                                                                                                                                                                                                                                                                       
/litstring 
(DEFGROUP PHENYL2) def Literal                                                                                                                                                                                                                                                                              
/litstring 
(ATOMS C11 C12 C13 C14 C15 C16) def Literal                                                                                                                                                                                                                                                                 
/litstring 
(DEFGROUP PHENYL3) def Literal                                                                                                                                                                                                                                                                              
/litstring 
(ATOMS C21 C22 C23 C24 C35 C36) def Literal                                                                                                                                                                                                                                                                 
/litstring 
(DEFGROUP PPH3) def Literal                                                                                                                                                                                                                                                                                 
/litstring 
(ATOMS P) def Literal                                                                                                                                                                                                                                                                                       
/litstring 
(GROUP PHENYL1 PHENYL2 PHENYL3) def Literal                                                                                                                                                                                                                                                                 
LitBlank
/ipflag    0 def /left  108 def
/last 1 def 
/textstring (
If you then realise that there are two phosphorus atoms in the molecule P1 and P2 you can use :- 
) def
Write
/left leftmargin def 
/litpoint     8 def 
/litgap     8 def 
LitBlank
/litstring 
(DEFGROUP PPH3 DELETE P2) def Literal                                                                                                                                                                                                                                                                       
LitBlank
/ipflag    0 def /left  108 def
/last 1 def 
/textstring (
to remove P2 as it is not a member of the tri-phenyl phosphine group. 
) def
Write
Blank
/title (               MISCELLANEOUS COMMANDS) def                                                                                                                                                                                                                                                          
/banner (MISCELLANEOUS COMMANDS) def                                                                                                                                                                                                                                                                        
Newpage
/chaptext (Miscellaneous Commands) def                                                                                                                                                                                                                                                                      
/ichap 1 def                                                                                                                                                                                                                                                                                                
Chapter 
/left leftmargin def 
/left leftmargin def 
/instr (RESET) def Instruction                                                                                                                                                                                                                                                                              
/left  118 def /ipflag    0 def /numspace   16 def
/textstring (
This command allows the user to begin again without having to exit and reload CAMERON. All current
) def
/last 0 def 
Write
/left  118 def /ipflag    0 def /numspace   20 def
/textstring (
flags will be set to their initial states. Note that if a CAMERON.INI file is present it will not be obeyed
) def
/last 0 def 
Write
/left  118 def /ipflag    0 def /numspace   16 def
/textstring (
after a RESET command. The screen will be set to VGA automatically \(as on startup\) if a
) def
/last 0 def 
Write
/ipflag    0 def /left  118 def
/last 1 def 
/textstring (
CAMERON.SRT file is present. 
) def
Write
/left leftmargin def 
/instr (LOG) def Instruction                                                                                                                                                                                                                                                                                
/left  118 def /ipflag    0 def /numspace   18 def
/textstring (
The LOG command is used to generate a log of the CAMERON session, this may be OBEYed later if
) def
/last 0 def 
Write
/left  118 def /ipflag    0 def /numspace   21 def
/textstring (
required. LOG must be followed by a filename. If a file is already in use for a log file then the log
) def
/last 0 def 
Write
/ipflag    0 def /left  118 def
/last 1 def 
/textstring (
information will be transferred to the new file. 
) def
Write
/left leftmargin def 
/instr (EDIT) def Instruction                                                                                                                                                                                                                                                                               
/left leftmargin indent add def 
/instr (ON) def Instruction                                                                                                                                                                                                                                                                                 
/left leftmargin indent add def 
/instr (OFF) def Instruction                                                                                                                                                                                                                                                                                
/left  128 def /ipflag    0 def /numspace   22 def
/textstring (
This sets the edit option which is used when an error is found in an input line. If edit is on \(the default\)
) def
/last 0 def 
Write
/left  128 def /ipflag    0 def /numspace   19 def
/textstring (
then the user is prompted as described in Chapter 1. If not the computer will bleep and put up the
) def
/last 0 def 
Write
/ipflag    0 def /left  128 def
/last 1 def 
/textstring (
message "Error: Automatic Abandon", ignore any unexecuted commands and wait for a new input line. 
) def
Write
/left leftmargin def 
/instr (MENUS) def Instruction                                                                                                                                                                                                                                                                              
/left leftmargin indent add def 
/instr (ON) def Instruction                                                                                                                                                                                                                                                                                 
/left leftmargin indent add def 
/instr (OFF) def Instruction                                                                                                                                                                                                                                                                                
/left  128 def /ipflag    0 def /numspace   19 def
/textstring (
The user is able to control the program via push button menus at the side of the screen \(PC only\).
) def
/last 0 def 
Write
/left  128 def /ipflag    0 def /numspace   19 def
/textstring (
These can be turned on or off as required. When the menus are active the user can input commands as
) def
/last 0 def 
Write
/ipflag    0 def /left  128 def
/last 1 def 
/textstring (
normal by typing - they will appear in a box at the bottom of the screen. 
) def
Write
/left leftmargin def 
/instr (ISSUE) def Instruction                                                                                                                                                                                                                                                                              
/left  118 def /ipflag    0 def /numspace   17 def
/textstring (
This allows the user to execute a single system command. This command should be enclosed in quotes if
) def
/last 0 def 
Write
/ipflag    0 def /left  118 def
/last 1 def 
/textstring (
it is longer than one word or if it corresponds to a CAMERON command. 
) def
Write
/left leftmargin def 
/instr (PRINT) def Instruction                                                                                                                                                                                                                                                                              
/left  118 def /ipflag    0 def /numspace   19 def
/textstring (
This allows the user to print a hardcopy file. The file will be closed if it is currently attached to
) def
/last 0 def 
Write
/left  118 def /ipflag    0 def /numspace   20 def
/textstring (
CAMERON via a COPY command. NOTE that the print job will be very slow - it may be quicker to close
) def
/last 0 def 
WriteCalc
/textstring (CAMERON via a COPY command. ) def WritePart
/textstring (NOTE ) def
WriteBold
/textstring (that the print job will be very slow - it may be quicker to close) def WritePart
/ypos ypos linegap sub def
/ipflag    0 def /left  118 def
/last 1 def 
/textstring (
down CAMERON first. 
) def
Write
/title (               HOW TO STOP THE PROGRAM) def                                                                                                                                                                                                                                                         
/banner (HOW TO STOP THE PROGRAM) def                                                                                                                                                                                                                                                                       
Newpage
/chaptext (How To Stop The Program) def                                                                                                                                                                                                                                                                     
/ichap 1 def                                                                                                                                                                                                                                                                                                
Chapter 
/left leftmargin def 
/left leftmargin def 
/instr (END) def Instruction                                                                                                                                                                                                                                                                                
/ipflag    0 def /left  118 def
/last 1 def 
/textstring (
The command END will cause the program to finish. 
) def
Write
/title (               MENU Definition file) def                                                                                                                                                                                                                                                            
/banner (MENU Definition file) def                                                                                                                                                                                                                                                                          
Newpage
/chaptext (Menu Definition file) def                                                                                                                                                                                                                                                                        
/ichap 1 def                                                                                                                                                                                                                                                                                                
Chapter 
/left leftmargin def 
/ipflag    0 def /left  108 def
/last 1 def 
/textstring (
The labels on the menu buttons and the actions they invoke are in the file cameron\\button.cam. 
) def
Write
/left  118 def /ipflag    1 def /numspace   19 def
/textstring (
The first line gives the number of columns and the number of lines in the menu. After this, adjacent pairs
) def
/last 0 def 
Write
/left  108 def /ipflag    0 def /numspace   19 def
/textstring (
of lines give the text to appear on the button, and the CAMERON commands to be obeyed by the button.
) def
/last 0 def 
Write
/ipflag    0 def /left  108 def
/last 1 def 
/textstring (
The pairs of lines are given first for column 1, then column 2 etc. 
) def
Write
Blank
/title (               SOME USEFUL IDEAS) def                                                                                                                                                                                                                                                               
/banner (SOME USEFUL IDEAS) def                                                                                                                                                                                                                                                                             
Newpage
/chaptext (Some Useful Ideas) def                                                                                                                                                                                                                                                                           
/ichap 1 def                                                                                                                                                                                                                                                                                                
Chapter 
/left leftmargin def 
/ipflag    1 def /left  118 def
/last 1 def 
/textstring (
To produce black and white illustrations for papers,try 
) def
Write
/left leftmargin def 
/litpoint     8 def 
/litgap     8 def 
LitBlank
/litstring 
(colour c black) def Literal                                                                                                                                                                                                                                                                                
/litstring 
(colour h black) def Literal                                                                                                                                                                                                                                                                                
/litstring 
(colour n black) def Literal                                                                                                                                                                                                                                                                                
/litstring 
(colour o black) def Literal                                                                                                                                                                                                                                                                                
/litstring 
(colour bond all white) def Literal                                                                                                                                                                                                                                                                         
/litstring 
(ball all unfil) def Literal                                                                                                                                                                                                                                                                                
/litstring 
(ball h fill) def Literal                                                                                                                                                                                                                                                                                   
/litstring 
(colour back grey) def Literal                                                                                                                                                                                                                                                                              
/litstring 
(ELLIP) def Literal                                                                                                                                                                                                                                                                                         
/litstring 
(C) def Literal                                                                                                                                                                                                                                                                                             
/litstring 
(N) def Literal                                                                                                                                                                                                                                                                                             
/litstring 
(O) def Literal                                                                                                                                                                                                                                                                                             
/litstring 
(ELLIP) def Literal                                                                                                                                                                                                                                                                                         
/litstring 
(TYPE) def Literal                                                                                                                                                                                                                                                                                          
/litstring 
(ALL) def Literal                                                                                                                                                                                                                                                                                           
/litstring 
(4) def Literal                                                                                                                                                                                                                                                                                             
/litstring 
(CONN) def Literal                                                                                                                                                                                                                                                                                          
/litstring 
(TAPER) def Literal                                                                                                                                                                                                                                                                                         
/litstring 
(3) def Literal                                                                                                                                                                                                                                                                                             
/litstring 
(VIEW) def Literal                                                                                                                                                                                                                                                                                          
LitBlank
/ipflag    1 def /left  118 def
/last 1 def 
/textstring (
To hack up a packing diagram, cutting out most and just keeping a bit, try \(all on one line\) 
) def
Write
/left leftmargin def 
/litpoint     8 def 
/litgap     8 def 
LitBlank
/litstring 
(EXCLUDE ALL INCLUDE AREA) def Literal                                                                                                                                                                                                                                                                      
LitBlank
/ipflag    0 def /left  108 def
/last 1 def 
/textstring (
Then use the mouse to draw round the bit you want to keep. 
) def
Write
Blank
Blank
/title (               CAMERON MANUAL) def                                                                                                                                                                                                                                                                  
/banner (CAMERON MANUAL) def                                                                                                                                                                                                                                                                                
Newpage
/chaptext (Cameron Manual) def                                                                                                                                                                                                                                                                              
/ichap 1 def                                                                                                                                                                                                                                                                                                
Chapter 
/left leftmargin def 
/left leftmargin def 
/litpoint     8 def 
/litgap     8 def 
LitBlank
Blank
LitBlank
Blank
ypos top ne {showpage} if
Doindex
/Indexpage   29 def
/Indextext (ADD) def
Index
/Indexpage   10 def
/Indextext (ALL) def
Index
/Indexpage   13 def
/Indextext (ALL) def
Index
/Indexpage   14 def
/Indextext (ALL) def
Index
/Indexpage   15 def
/Indextext (ALL) def
Index
/Indexpage   16 def
/Indextext (ALL) def
Index
/Indexpage   18 def
/Indextext (ALL) def
Index
/Indexpage   20 def
/Indextext (ALL) def
Index
/Indexpage   24 def
/Indextext (ALL) def
Index
/Indexpage   29 def
/Indextext (ALL) def
Index
/Indexpage   30 def
/Indextext (ALL) def
Index
/Indexpage   11 def
/Indextext (ALONG) def
Index
/Indexpage   31 def
/Indextext (ANGLE) def
Index
/Indexpage   27 def
/Indextext (ANORTHIC) def
Index
/Indexpage    8 def
/Indextext (ARCHIVE) def
Index
/Indexpage   13 def
/Indextext (AREA) def
Index
/Indexpage   18 def
/Indextext (ATOM) def
Index
/Indexpage   27 def
/Indextext (ATOM) def
Index
/Indexpage    6 def
/Indextext (ATOMS) def
Index
/Indexpage   29 def
/Indextext (ATOMS) def
Index
/Indexpage   30 def
/Indextext (ATOMS) def
Index
/Indexpage   32 def
/Indextext (ATOMS) def
Index
/Indexpage   33 def
/Indextext (ATOMS) def
Index
/Indexpage   11 def
/Indextext (AXIS) def
Index
/Indexpage    1 def
/Indextext (Abandon) def
Index
/Indexpage   29 def
/Indextext (Add And Move - Further Symmetry Related ) def
Index
/Indexpage    8 def
/Indextext (Archiving and retrieving views) def
Index
/Indexpage   22 def
/Indextext (Atom Labelling) def
Index
/Indexpage   20 def
/Indextext (BACKGROUND) def
Blank
Index
/Indexpage   21 def
/Indextext (BACKGROUND) def
Index
/Indexpage   15 def
/Indextext (BALL) def
Index
/Indexpage   15 def
/Indextext (BALL commands.) def
Index
/Indexpage   10 def
/Indextext (BASIC CONTROL) def
Index
/Indexpage   11 def
/Indextext (BISECT) def
Index
/Indexpage   20 def
/Indextext (BONDS) def
Index
/Indexpage   20 def
/Indextext (BUTTON) def
Index
/Indexpage    4 def
/Indextext (CELL) def
Blank
Index
/Indexpage   13 def
/Indextext (CELL) def
Index
/Indexpage   22 def
/Indextext (CELL) def
Index
/Indexpage   26 def
/Indextext (CELL) def
Index
/Indexpage   32 def
/Indextext (CELL) def
Index
/Indexpage    9 def
/Indextext (CENCAP) def
Index
/Indexpage   24 def
/Indextext (CENTRE) def
Index
/Indexpage   14 def
/Indextext (CENTROID) def
Index
/Indexpage   26 def
/Indextext (CENTROID) def
Index
/Indexpage   27 def
/Indextext (CENTROID) def
Index
/Indexpage   20 def
/Indextext (COLOUR) def
Index
/Indexpage   32 def
/Indextext (COLOUR) def
Index
/Indexpage   26 def
/Indextext (COMPLETE) def
Index
/Indexpage   27 def
/Indextext (COMPLETE) def
Index
/Indexpage   17 def
/Indextext (CONNECT) def
Index
/Indexpage   14 def
/Indextext (COORDS) def
Index
/Indexpage   11 def
/Indextext (COPY) def
Index
/Indexpage   15 def
/Indextext (COVALENT) def
Index
/Indexpage   17 def
/Indextext (COVALENT) def
Index
/Indexpage    9 def
/Indextext (CPOST) def
Index
/Indexpage    4 def
/Indextext (CSSR) def
Index
/Indexpage    5 def
/Indextext (CSSR) def
Index
/Indexpage   10 def
/Indextext (CURSOR) def
Index
/Indexpage   26 def
/Indextext (CUT) def
Index
/Indexpage   27 def
/Indextext (CUT) def
Index
/Indexpage   38 def
/Indextext (Cameron Manual) def
Index
/Indexpage   27 def
/Indextext (Choice of enclosure "origin") def
Index
/Indexpage    1 def
/Indextext (Command Groups) def
Index
/Indexpage   17 def
/Indextext (Connectivity Control) def
Index
/Indexpage   20 def
/Indextext (Control Of Colour) def
Index
/Indexpage   26 def
/Indextext (Crystal Packing Commands) def
Index
/Indexpage   15 def
/Indextext (DEFAULT) def
Blank
Index
/Indexpage   17 def
/Indextext (DEFAULT) def
Index
/Indexpage   21 def
/Indextext (DEFAULT) def
Index
/Indexpage   22 def
/Indextext (DEFAULT) def
Index
/Indexpage   33 def
/Indextext (DEFGROUP) def
Index
/Indexpage   12 def
/Indextext (DEGREE) def
Index
/Indexpage   33 def
/Indextext (DELETE) def
Index
/Indexpage   18 def
/Indextext (DISCONNECT) def
Index
/Indexpage   31 def
/Indextext (DISTANCE) def
Index
/Indexpage   18 def
/Indextext (DOTTED) def
Index
/Indexpage   13 def
/Indextext (DUMMY) def
Index
/Indexpage    4 def
/Indextext (Data Input) def
Index
/Indexpage   26 def
/Indextext (Dealing with connectivity) def
Index
/Indexpage   31 def
/Indextext (Distance And Angle Calculations) def
Index
/Indexpage   15 def
/Indextext (Drawing Style Control) def
Index
/Indexpage   34 def
/Indextext (EDIT) def
Blank
Index
/Indexpage    9 def
/Indextext (EGA) def
Index
/Indexpage   15 def
/Indextext (ELLIPSE) def
Index
/Indexpage   15 def
/Indextext (ELLIPSE commands) def
Index
/Indexpage   25 def
/Indextext (ENANTIO) def
Index
/Indexpage    9 def
/Indextext (ENCAPPOST) def
Index
/Indexpage   27 def
/Indextext (ENCLOSURE) def
Index
/Indexpage   35 def
/Indextext (END) def
Index
/Indexpage    1 def
/Indextext (ERROR HANDLING) def
Index
/Indexpage   27 def
/Indextext (EXAMPLE) def
Index
/Indexpage   26 def
/Indextext (EXAMPLES) def
Index
/Indexpage   29 def
/Indextext (EXAMPLES) def
Index
/Indexpage   13 def
/Indextext (EXCLUDE) def
Index
/Indexpage    1 def
/Indextext (Edit) def
Index
/Indexpage    6 def
/Indextext (Editing The Atom List) def
Index
/Indexpage   14 def
/Indextext (Example) def
Index
/Indexpage   20 def
/Indextext (Example) def
Index
/Indexpage   33 def
/Indextext (Example) def
Index
/Indexpage   24 def
/Indextext (Example of Space Group Input) def
Index
/Indexpage   10 def
/Indextext (FACE) def
Blank
Index
/Indexpage   11 def
/Indextext (FILE) def
Index
/Indexpage   15 def
/Indextext (FILL) def
Index
/Indexpage   23 def
/Indextext (FIX) def
Index
/Indexpage   22 def
/Indextext (FONT) def
Index
/Indexpage    5 def
/Indextext (FRACT) def
Index
/Indexpage   13 def
/Indextext (FRAGMENT) def
Index
/Indexpage   15 def
/Indextext (FRAGMENT) def
Index
/Indexpage   20 def
/Indextext (FRAGMENT) def
Index
/Indexpage   22 def
/Indextext (FRAGMENT) def
Index
/Indexpage   33 def
/Indextext (FRAGMENT) def
Index
/Indexpage   31 def
/Indextext (FROM) def
Index
/Indexpage   18 def
/Indextext (FULL) def
Index
/Indexpage   13 def
/Indextext (Further related commands) def
Index
/Indexpage   22 def
/Indextext (GENERATED) def
Blank
Index
/Indexpage   13 def
/Indextext (GROUP) def
Index
/Indexpage   15 def
/Indextext (GROUP) def
Index
/Indexpage   18 def
/Indextext (GROUP) def
Index
/Indexpage   20 def
/Indextext (GROUP) def
Index
/Indexpage   28 def
/Indextext (GROUP) def
Index
/Indexpage   29 def
/Indextext (GROUP) def
Index
/Indexpage   30 def
/Indextext (GROUP) def
Index
/Indexpage   32 def
/Indextext (GROUP) def
Index
/Indexpage   33 def
/Indextext (GROUP) def
Index
/Indexpage   21 def
/Indextext (GSCALE) def
Index
/Indexpage    2 def
/Indextext (General Input Syntax) def
Index
/Indexpage   13 def
/Indextext (Generation of Dummy atoms) def
Index
/Indexpage    9 def
/Indextext (Graphical Output Devices) def
Index
/Indexpage   33 def
/Indextext (Group Definitions) def
Index
/Indexpage    9 def
/Indextext (HARDCOPY) def
Blank
Index
/Indexpage   17 def
/Indextext (HBONDS) def
Index
/Indexpage   11 def
/Indextext (HORIZONTAL) def
Index
/Indexpage    1 def
/Indextext (HOW TO CONTROL THE PROGRAM) def
Index
/Indexpage    1 def
/Indextext (Help) def
Index
/Indexpage    3 def
/Indextext (How To Get Started) def
Index
/Indexpage   35 def
/Indextext (How To Stop The Program) def
Index
/Indexpage   13 def
/Indextext (INCLUDE) def
Blank
Index
/Indexpage   32 def
/Indextext (INFORMATION) def
Index
/Indexpage   22 def
/Indextext (INITIAL) def
Index
/Indexpage   29 def
/Indextext (INITIAL) def
Index
/Indexpage   30 def
/Indextext (INITIAL) def
Index
/Indexpage    4 def
/Indextext (INPUT) def
Index
/Indexpage   18 def
/Indextext (INTER) def
Index
/Indexpage   26 def
/Indextext (INTER) def
Index
/Indexpage   27 def
/Indextext (INTER) def
Index
/Indexpage   26 def
/Indextext (INTRA) def
Index
/Indexpage   27 def
/Indextext (INTRA) def
Index
/Indexpage   15 def
/Indextext (IONIC) def
Index
/Indexpage   17 def
/Indextext (IONIC) def
Index
/Indexpage   34 def
/Indextext (ISSUE) def
Index
/Indexpage   13 def
/Indextext (Include And Exclude) def
Index
/Indexpage   32 def
/Indextext (Information On Data Held Within The Prog) def
Index
/Indexpage    4 def
/Indextext (Input of CRYSTALS List 5 files) def
Index
/Indexpage   24 def
/Indextext (Input of symmetry operators) def
Index
/Indexpage    1 def
/Indextext (Introduction) def
Index
/Indexpage   18 def
/Indextext (JOIN) def
Blank
Index
/Indexpage   26 def
/Indextext (KEEP) def
Blank
Index
/Indexpage   27 def
/Indextext (KEEP) def
Index
/Indexpage   20 def
/Indextext (LABCOLOUR) def
Blank
Index
/Indexpage   22 def
/Indextext (LABEL) def
Index
/Indexpage   15 def
/Indextext (LINE) def
Index
/Indexpage   15 def
/Indextext (LINE commands.) def
Index
/Indexpage   11 def
/Indextext (LIST) def
Index
/Indexpage    4 def
/Indextext (LIST5) def
Index
/Indexpage    5 def
/Indextext (LIST5) def
Index
/Indexpage   34 def
/Indextext (LOG) def
Index
/Indexpage   13 def
/Indextext (MASK) def
Blank
Index
/Indexpage   11 def
/Indextext (MATRIX) def
Index
/Indexpage   23 def
/Indextext (MAXIMISE) def
Index
/Indexpage   34 def
/Indextext (MENUS) def
Index
/Indexpage   20 def
/Indextext (MENUTEXT) def
Index
/Indexpage   22 def
/Indextext (MOUSE) def
Index
/Indexpage   30 def
/Indextext (MOVE) def
Index
/Indexpage   36 def
/Indextext (Menu Definition file) def
Index
/Indexpage   31 def
/Indextext (Method of Calculation) def
Index
/Indexpage   18 def
/Indextext (Miscellaneous CONNECT commands) def
Index
/Indexpage   34 def
/Indextext (Miscellaneous Commands) def
Index
/Indexpage    2 def
/Indextext (Mouse Activation) def
Index
/Indexpage   16 def
/Indextext (NEGATIVE) def
Blank
Index
/Indexpage   24 def
/Indextext (NOCENTRE) def
Index
/Indexpage   22 def
/Indextext (NOLABEL) def
Index
/Indexpage   21 def
/Indextext (NORMAL) def
Index
/Indexpage   12 def
/Indextext (NOSTEREO) def
Index
/Indexpage   24 def
/Indextext (NOUSE) def
Index
/Indexpage   22 def
/Indextext (NUMBER) def
Index
/Indexpage    7 def
/Indextext (OBEY) def
Blank
Index
/Indexpage   12 def
/Indextext (OFF) def
Index
/Indexpage   23 def
/Indextext (OFF) def
Index
/Indexpage   25 def
/Indextext (OFF) def
Index
/Indexpage   34 def
/Indextext (OFF) def
Index
/Indexpage   12 def
/Indextext (ON) def
Index
/Indexpage   23 def
/Indextext (ON) def
Index
/Indexpage   25 def
/Indextext (ON) def
Index
/Indexpage   34 def
/Indextext (ON) def
Index
/Indexpage   29 def
/Indextext (OPERATOR) def
Index
/Indexpage   30 def
/Indextext (OPERATOR) def
Index
/Indexpage   24 def
/Indextext (OPERATORS) def
Index
/Indexpage   10 def
/Indextext (ORIENTATION COMMANDS) def
Index
/Indexpage    5 def
/Indextext (ORTH) def
Index
/Indexpage   27 def
/Indextext (ORTHOGONAL) def
Index
/Indexpage    5 def
/Indextext (OUTPUT) def
Index
/Indexpage    7 def
/Indextext (Obeying Files) def
Index
/Indexpage   23 def
/Indextext (Other Picture Controlling Commands) def
Index
/Indexpage   11 def
/Indextext (Other related commands) def
Index
/Indexpage   25 def
/Indextext (Other symmetry related operations) def
Index
/Indexpage    5 def
/Indextext (Outputting Data) def
Index
/Indexpage   26 def
/Indextext (PACK) def
Blank
Index
/Indexpage   28 def
/Indextext (PACKING MORE COMPLICATED STRUCTURES) def
Index
/Indexpage   32 def
/Indextext (PACKNUMBERS) def
Index
/Indexpage   12 def
/Indextext (PHOTO) def
Index
/Indexpage   12 def
/Indextext (PHOTOGRAPHS) def
Index
/Indexpage   10 def
/Indextext (PLANE) def
Index
/Indexpage   27 def
/Indextext (POINT) def
Index
/Indexpage   22 def
/Indextext (POSITION) def
Index
/Indexpage    9 def
/Indextext (POSTSCRIPT) def
Index
/Indexpage   34 def
/Indextext (PRINT) def
Index
/Indexpage   16 def
/Indextext (PROBABILITY) def
Index
/Indexpage   15 def
/Indextext (RADII) def
Blank
Index
/Indexpage   17 def
/Indextext (RADII) def
Index
/Indexpage   31 def
/Indextext (RANGE) def
Index
/Indexpage   18 def
/Indextext (REMOVE) def
Index
/Indexpage    6 def
/Indextext (RENAME) def
Index
/Indexpage   34 def
/Indextext (RESET) def
Index
/Indexpage    8 def
/Indextext (RETRIEVE) def
Index
/Indexpage   11 def
/Indextext (RETRIEVE) def
Index
/Indexpage    6 def
/Indextext (RETYPE) def
Index
/Indexpage   10 def
/Indextext (ROT) def
Index
/Indexpage   23 def
/Indextext (SCALE) def
Blank
Index
/Indexpage    9 def
/Indextext (SCREEN) def
Index
/Indexpage   13 def
/Indextext (SELECT) def
Index
/Indexpage   23 def
/Indextext (SET) def
Index
/Indexpage   25 def
/Indextext (SETUNIT) def
Index
/Indexpage    9 def
/Indextext (SIGMA) def
Index
/Indexpage   24 def
/Indextext (SPACEGROUP) def
Index
/Indexpage   25 def
/Indextext (SPECIAL) def
Index
/Indexpage   27 def
/Indextext (SPHERE) def
Index
/Indexpage   12 def
/Indextext (STEREO) def
Index
/Indexpage   11 def
/Indextext (STORE) def
Index
/Indexpage   13 def
/Indextext (SWITCH) def
Index
/Indexpage   24 def
/Indextext (SYMMETRY) def
Index
/Indexpage   32 def
/Indextext (SYMMETRY) def
Index
/Indexpage   37 def
/Indextext (Some Useful Ideas) def
Index
/Indexpage   24 def
/Indextext (Symmetry Input) def
Index
/Indexpage   18 def
/Indextext (TAPER) def
Blank
Index
/Indexpage    9 def
/Indextext (TEK) def
Index
/Indexpage   20 def
/Indextext (TEXT) def
Index
/Indexpage   22 def
/Indextext (TEXT) def
Index
/Indexpage   19 def
/Indextext (THICKNESS) def
Index
/Indexpage   31 def
/Indextext (TO) def
Index
/Indexpage   19 def
/Indextext (TOLERANCE) def
Index
/Indexpage   31 def
/Indextext (TORSION) def
Index
/Indexpage   29 def
/Indextext (TRANS) def
Index
/Indexpage   30 def
/Indextext (TRANS) def
Index
/Indexpage   15 def
/Indextext (TYPE) def
Index
/Indexpage    2 def
/Indextext (The HELP facility) def
Index
/Indexpage   27 def
/Indextext (Type of volume to be used) def
Index
/Indexpage   15 def
/Indextext (UNFILL) def
Blank
Index
/Indexpage   23 def
/Indextext (UNFIX) def
Index
/Indexpage   13 def
/Indextext (UNMASK) def
Index
/Indexpage   28 def
/Indextext (UNPACK) def
Index
/Indexpage   24 def
/Indextext (USE) def
Index
/Indexpage   15 def
/Indextext (VANDERWAALS) def
Blank
Index
/Indexpage   17 def
/Indextext (VANDERWAALS) def
Index
/Indexpage   24 def
/Indextext (VECTORS) def
Index
/Indexpage   11 def
/Indextext (VERTICAL) def
Index
/Indexpage    9 def
/Indextext (VGA) def
Index
/Indexpage   11 def
/Indextext (VIEW) def
Index
/Indexpage   10 def
/Indextext (View Direction Control) def
Index
/Indexpage   26 def
/Indextext (WINDOW) def
Blank
Index
/Indexpage   10 def
/Indextext (XROT) def
Blank
Index
/Indexpage   10 def
/Indextext (YROT) def
Blank
Index
/Indexpage   10 def
/Indextext (ZROT) def
Blank
Index
Banner
Docontents
/Indexpage    1 def
/chapno    1 def
/Indextext (Introduction                                                ) def
Indexchapter
/Indexpage    1 def
/Indextext (HOW TO CONTROL THE PROGRAM                                  ) def
Indexsection
/Indexpage    1 def
/Indextext (Command Groups                                              ) def
Indexsection
/Indexpage    1 def
/Indextext (ERROR HANDLING                                              ) def
Indexsection
/Indexpage    2 def
/Indextext (The HELP facility                                           ) def
Indexsection
/Indexpage    2 def
/Indextext (Mouse Activation                                            ) def
Indexsection
/Indexpage    2 def
/Indextext (General Input Syntax                                        ) def
Indexsection
/Indexpage    3 def
/chapno    2 def
/Indextext (How To Get Started                                          ) def
Indexchapter
/Indexpage    4 def
/chapno    3 def
/Indextext (Data Input                                                  ) def
Indexchapter
/Indexpage    4 def
/Indextext (Input of CRYSTALS List 5 files                              ) def
Indexsection
/Indexpage    5 def
/chapno    4 def
/Indextext (Outputting Data                                             ) def
Indexchapter
/Indexpage    6 def
/chapno    5 def
/Indextext (Editing The Atom List                                       ) def
Indexchapter
/Indexpage    7 def
/chapno    6 def
/Indextext (Obeying Files                                               ) def
Indexchapter
/Indexpage    8 def
/chapno    7 def
/Indextext (Archiving and retrieving views                              ) def
Indexchapter
/Indexpage    9 def
/chapno    8 def
/Indextext (Graphical Output Devices                                    ) def
Indexchapter
/Indexpage   10 def
/chapno    9 def
/Indextext (View Direction Control                                      ) def
Indexchapter
/Indexpage   10 def
/Indextext (BASIC CONTROL                                               ) def
Indexsection
/Indexpage   10 def
/Indextext (ORIENTATION COMMANDS                                        ) def
Indexsection
/Indexpage   11 def
/Indextext (Other related commands                                      ) def
Indexsection
/Indexpage   12 def
/Indextext (PHOTOGRAPHS                                                 ) def
Indexsection
/Indexpage   13 def
/chapno   10 def
/Indextext (Include And Exclude                                         ) def
Indexchapter
/Indexpage   13 def
/Indextext (Further related commands                                    ) def
Indexsection
/Indexpage   13 def
/Indextext (Generation of Dummy atoms                                   ) def
Indexsection
/Indexpage   14 def
/Indextext (Example                                                     ) def
Indexsection
/Indexpage   15 def
/chapno   11 def
/Indextext (Drawing Style Control                                       ) def
Indexchapter
/Indexpage   15 def
/Indextext (LINE commands.                                              ) def
Indexsection
/Indexpage   15 def
/Indextext (BALL commands.                                              ) def
Indexsection
/Indexpage   15 def
/Indextext (ELLIPSE commands                                            ) def
Indexsection
/Indexpage   17 def
/chapno   12 def
/Indextext (Connectivity Control                                        ) def
Indexchapter
/Indexpage   17 def
/Indextext (CONNECT                                                     ) def
Indexsection
/Indexpage   18 def
/Indextext (Miscellaneous CONNECT commands                              ) def
Indexsection
/Indexpage   20 def
/chapno   13 def
/Indextext (Control Of Colour                                           ) def
Indexchapter
/Indexpage   20 def
/Indextext (Example                                                     ) def
Indexsection
/Indexpage   22 def
/chapno   14 def
/Indextext (Atom Labelling                                              ) def
Indexchapter
/Indexpage   23 def
/chapno   15 def
/Indextext (Other Picture Controlling Commands                          ) def
Indexchapter
/Indexpage   24 def
/chapno   16 def
/Indextext (Symmetry Input                                              ) def
Indexchapter
/Indexpage   24 def
/Indextext (Input of symmetry operators                                 ) def
Indexsection
/Indexpage   24 def
/Indextext (Example of Space Group Input                                ) def
Indexsection
/Indexpage   25 def
/Indextext (Other symmetry related operations                           ) def
Indexsection
/Indexpage   26 def
/chapno   17 def
/Indextext (Crystal Packing Commands                                    ) def
Indexchapter
/Indexpage   26 def
/Indextext (PACK                                                        ) def
Indexsection
/Indexpage   26 def
/Indextext (Dealing with connectivity                                   ) def
Indexsection
/Indexpage   26 def
/Indextext (EXAMPLES                                                    ) def
Indexsection
/Indexpage   27 def
/Indextext (ENCLOSURE                                                   ) def
Indexsection
/Indexpage   27 def
/Indextext (Choice of enclosure "origin"                                ) def
Indexsection
/Indexpage   27 def
/Indextext (Type of volume to be used                                   ) def
Indexsection
/Indexpage   27 def
/Indextext (EXAMPLE                                                     ) def
Indexsection
/Indexpage   28 def
/Indextext (PACKING MORE COMPLICATED STRUCTURES                         ) def
Indexsection
/Indexpage   28 def
/Indextext (UNPACK                                                      ) def
Indexsection
/Indexpage   29 def
/chapno   18 def
/Indextext (Add And Move - Further Symmetry Related Commands            ) def
Indexchapter
/Indexpage   29 def
/Indextext (ADD                                                         ) def
Indexsection
/Indexpage   29 def
/Indextext (EXAMPLES                                                    ) def
Indexsection
/Indexpage   30 def
/Indextext (MOVE                                                        ) def
Indexsection
/Indexpage   31 def
/chapno   19 def
/Indextext (Distance And Angle Calculations                             ) def
Indexchapter
/Indexpage   31 def
/Indextext (Method of Calculation                                       ) def
Indexsection
/Indexpage   32 def
/chapno   20 def
/Indextext (Information On Data Held Within The Program                 ) def
Indexchapter
/Indexpage   33 def
/chapno   21 def
/Indextext (Group Definitions                                           ) def
Indexchapter
/Indexpage   33 def
/Indextext (Example                                                     ) def
Indexsection
/Indexpage   34 def
/chapno   22 def
/Indextext (Miscellaneous Commands                                      ) def
Indexchapter
/Indexpage   35 def
/chapno   23 def
/Indextext (How To Stop The Program                                     ) def
Indexchapter
/Indexpage   36 def
/chapno   24 def
/Indextext (Menu Definition file                                        ) def
Indexchapter
/Indexpage   37 def
/chapno   25 def
/Indextext (Some Useful Ideas                                           ) def
Indexchapter
/Indexpage   38 def
/chapno   26 def
/Indextext (Cameron Manual                                              ) def
Indexchapter
Endcontents
