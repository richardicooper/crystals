#LEXICAL SCANNER REFERENCE MANUAL   
#ZINTRODUCTION# 
#PTHE LEXICAL SCANNER IS USED TO READ DATA AND INSTRUCTIONS FROM THE INPUT  
 STREAM, CONVERT THEM INTO A STANDARD INTERNAL FORMAT, AND OUTPUT THE   
 RESULTS TO THE DISC.   
 AS EACH CARD IS SCANNED, FOUR DIFFERENT TYPES OF ARGUMENT ARE  
 RECOGNISED :   
#J  
    
1.   DIRECTIVES.
    
2.   OPERATORS. 
    
3.   NUMBERS.   
    
4.   OPERANDS OR VARIABLES. 
    
#   
#YDIRECTIVES#   
#PEACH CARD MUST CONTAIN A DIRECTIVE,   
 WHICH BEGINS IN COLUMN ONE AND IS TERMINATED   
 BY ONE OR MORE SPACES. 
 THE NUMBER OF DIRECTIVES AND THEIR VALUES ARE SET UP IN THE ROUTINE THAT   
 CALLS THE LEXICAL SCANNER. 
 ADDITIONALLY, THERE ARE TWO SPECIAL DIRECTIVES WHICH ARE ALWAYS KNOWN TO THE   
 SCANNER, AND WHICH NEED NOT BE SPECIFIED BY THE CALLING ROUTINE.   
 THESE ARE :
#J  
    
1.   END
    
2.   CONTINUE     (OR IN SHORTENED FORM 'CONT').
    
#   
'END' IS THE LAST DIRECTIVE THAT WILL BE PROCESSED BY THE CURRENT CALL OF   
 THE SCANNER.   
 THIS DIRECTIVE IS NOT OUTPUT TO THE DISC, BUT IS IMPLIED AT THE END OF 
 THE INFORMATION.   
 THE SECOND DIRECTIVE 'CONTINUE' INDICATES A CONTINUATION CARD FOR A PREVIOUS   
 USER DIRECTIVE CARD.   
 THE SCANNER GROUPS DIRECTIVE CARDS AND ANY SUBSEQUENT CONTINUATION CARDS   
 TOGETHER   
 AND OUTPUTS THEM TO THE DISC AS A SINGLE CARD IMAGE.   
 (A CARD IMAGE IN THIS CONTEXT IS THE INTERNAL REPRESENTATION   
 OF THE INPUT CARD OR CARDS EITHER IN CORE OR ON THE DISC). 
 WHEN THE INFORMATION ON THE DISC IS SUBSEQUENTLY PROCESSED, IT IS THUS 
 UNNECESSARY TO CONSIDER CONTINUATION CARDS.
#YOPERATORS#
#PTHE REMAINDER OF THE CARD AFTER THE DIRECTIVE IS SPLIT INTO THREE DIFFERENT   
 TYPES OF ARGUMENT. 
 THE FIRST GROUP OF ARGUMENTS CONTAINS THE  
 OPERATORS, OF WHICH THERE ARE NINE :   
#J  
    
1   +   
2   -   
3   *   
4   /   
5   **  
6   )   
7   (   
8   ,   
9   =   
    
#   
WHENEVER SUCH AN OPERATOR OCCURS, IT IS SET UP AS AN ARGUMENT BY ITSELF.
 THE TWO '*' CHARACTERS FOR '**' MUST APPEAR ON THE SAME CARD, ALTHOUGH 
 THEY MAY BE SEPARATED BY SPACES.   
#YNUMBERS#  
#PTHE SECOND TYPE OF ARGUMENT THAT IS RECOGNISED IS A NUMBER.   
 A NUMBER IS A SEQUENCE OF CHARACTERS THAT CONTAINS ONLY :  
#J  
    
0   
1   
2   
3   
4   
5   
6   
7   
8   
9   
.   
    
#   
A NUMBER IS DELIMITED BY AN OPERATOR OR ONE OR MORE SPACES, 
 AND STORED AS AN UNSIGNED  
 FLOATING POINT NUMBER. 
 (ITS SIGN, IF ONE IS PRESENT, IS STORED AS A SEPARATE ARGUMENT AS AN OPERATOR).
 A NUMBER MAY NOT SPAN MORE THAN ONE CARD.  
#YVARIABLES OR OPERANDS#
#PGROUPS OF CHARACTERS THAT ARE NEITHER OPERATORS NOR NUMBERS ARE TREATED   
 AS VARIABLES OR OPERANDS.  
 THESE ARE READ AS AN ALPHA-NUMERIC STRING, 
 FOUR CHARACTERS PER WORD IN A4 FORMAT. 
 WHEN THE VARIABLE IS STORED, ITS LENGTH IS SET TO 'LK' WORDS, WHERE
 'LK' IS PRESET IN THE COMMON BLOCK 'XKEYS'.
 A VARIABLE IS TERMINATED BY AN OPERATOR OR ONE OR MORE SPACES, 
 AND MAY NOT BE CONTINUED ONTO A NEW CARD.  
#ZREADING DATA USING THE LEXICAL SCANNER#   
#YFUNCTION KLEXAN(ISTART,IBASE,NWARG,IARG,NARG,NSARG)#  
#PTHE LEXICAL SCANNER IS ACTIVATED BY A FUNCTION CALL, WHICH MIGHT  
 APPEAR IN A BLOCK OF CODE AS : 
#J  
    
      . 
C--CALL THE LEXICAL SCANNER 
      I=FUNCTION KLEXAN(ISTART,IBASE,NWARG,IARG,NARG,NSARG) 
C--CHECK THE REPLY FROM THE SCANNER 
      . 
    
WHERE : 
    
ISTART  DISC ADDRESS AT WHICH TO START STORING THE INFORMATION. 
IBASE   FIRST WORD IN 'STORE' THAT MAY BE USED AS WORK SPACE.   
        (THE AREA FROM 'IBASE' UP TO 'LFL' IS USED).
NWARG   THE NUMBER OF WORDS NEEDED TO DEFINE EACH USER DIRECTIVE.   
IARG    THE ARRAY CONTAINING THE USER DIRECTIVES, 4 CHARACTERS  
        PER WORD IN A4 FORMAT.  
NARG    THE NUMBER OF USER DIRECTIVES.  
NSARG   THE NUMBER OF WORDS BETWEEN SUCCESSIVE USER DIRECTIVES  
        IN 'IARG'. (THIS MAY BE THE SAME AS 'NWARG' OR DIFFERENT).  
    
    
THE RETURN VALUES OF 'KLEXAN' ARE : 
    
<0      ONE OR MORE ERRORS IN THE DATA. AN APPROPIATE ERROR 
        MESSAGE WILL HAVE BEEN PRINTED. 
>0      THE INPUT HAS BEEN COMPLETED SUCCESSFULLY, AND THE RETURN   
        VALUE IS THE NEXT FREE DISC ADDRESS.
    
#   
THIS ROUTINE USES THE COMMON BLOCK 'XWORK', AND RETURNS THE NUMBER OF CARDS 
 PROCESSED IN 'MD' :
#J  
    
      COMMON/XWORK/MA,MB,MC,MD,ME,MF,MG,MH,MI,MJ,MK,ML,MM,MN,   
     2 MO,MP,MQ,MR,MS,MT,MU,MV,MW,MX,MY,MZ  
    
#   
THE COMMON BLOCK 'XLISTI' IS USED TO KEEP A COUNT OF THE NUMBER OF  
 ERRORS IN THE VARIABLE 'LEF' : 
#J  
    
      COMMON/XLISTI/JN,LN,LSN,LEF   
    
#   
#YAN EXAMPLE#   
#PTO SCAN THE INPUT STREAM FOR THE DIRECTIVES 'ADD', 'SUBTRACT', 'MULTIPLY' AND 
 'DIVIDE', AND OUTPUT THE RESULTS TO A TEMPORARY AREA OF THE DISC, THE FOLLOWING
 CODE COULD BE USED :   
#J  
    
      DIMENSION IDIR(4) 
      . 
      . 
      COMMON/XDATA/NFL,LFL,NL,STORE(1)  
      . 
      . 
      DATA NWDIR/1/,NDIR/4/,NSDIR/1/
      DATA IDIR(1)/4HADD /,IDIR(2)/4HSUBT/,IDIR(3)/4HMULT/,IDIR(4)/4HDIVI/  
      . 
      . 
      . 
C--FIND THE NEXT FREE DISC ADDRESS  
      IADD=KNEXTF(I)
C--CALL THE LEXICAL SCANNER 
      IF(KLEXAN(IADD,NFL,NWDIR,IDIR,NDIR,NSDIR))9000,9000,1500  
C--SET UP THE SCANNER OUTPUT FOR PROCESSING 
1500  CONTINUE  
      . 
      . 
      . 
      . 
C--ERRORS IN THE INPUT DATA  -  ABANDON THE JOB 
9000  CONTINUE  
      CALL XERRHD   
      . 
    
#   
#ZFORMAT OF THE LEXICAL SCANNER OUTPUT# 
#YTHE HEADER BLOCK# 
#PTHE INFORMATION STORED FOR EACH CARD IMAGE ON THE DISC HAS THE
 SAME FORMAT, AND IS INTRODUCED BY A CONTROL BLOCK WHICH HAS THE
 FOLLOWING FORMAT : 
#J  
    
0   INEXT   DISC ADDRESS OF THE CONTROL BLOCK FOR THE NEXT CARD 
            IMAGE. (-1000000 IF THIS IS THE LAST CONTROL BLOCK).
1   LENGTH  TOTAL LENGTH OF THE INFORMATION STORED FOR THIS CARD IMAGE, 
            INCLUDING THE CONTROL BLOCK, THE CHARACTER REPRESENTATION   
            AND THE ARGUMENT LIST.  
2   ICARD   ADDRESS OF THE CHARACTER REPRESENTATION OF THIS CARD IMAGE, 
            INCLUDING CONTINUATION CARDS, RELATIVE TO WORD 0 FOR THIS   
            CARD. THE CHARACTER REPRESENTATION IS STORED IN A4 FORMAT,  
            FOUR CHARACTERS PER WORD.   
3   NWORD   NUMBER OF WORDS REQUIRED TO HOLD THE CHARACTER REPRESENTATION   
            OF THIS CARD IMAGE, INCLUDING CONTINUATION CARDS.   
4   NCARD   NUMBER OF THIS CARD IMAGE ON INPUT. THESE NUMBERS RUN FROM  
            ZERO AND ARE INCREMENTED BY ONE FOR EACH NEW USER DIRECTIVE 
            THAT IS STORED. 
5   IARG    ADDRESS OF THE INFORMATION FOR THE FIRST ARGUMENT ON THIS   
            CARD, RELATIVE TO WORD 0 FOR THIS CARD. 
6   NARG    NUMBER OF ARGUMENTS FOUND ON THIS CARD. 
7   NDIR    POSITION OF THE DIRECTIVE ON THIS CARD IN THE USER SUPPLIED 
            DIRECTIVE LIST. (1 FOR THE FIRST DIRECTIVE, 2 FOR THE   
            SECOND, AND SO ON). 
    
#   
THE CARD IMAGE IN CHARACTER FORM IS FOUND USING WORDS 2 AND 3 OF THE
 CONTROL BLOCK, AFTER THE WHOLE CARD IMAGE HAS BEEN LOADED INTO STORE.  
#YTHE ARGUMENT LIST#
#PWORDS 5, 6 AND 7 PROVIDE THE INFORMATION FOR PROCESSING THE ARGUMENTS 
 THAT HAVE BEEN FOUND ON THE CARD.  
 THE INFORMATION FOR EACH ARGUMENT IS IN A FIXED LENGTH BLOCK WHICH 
 HAS THE FOLLOWING FORMAT : 
#J  
    
0     ITYPE     FLAG INDICATING THE TYPE OF ARGUMENT, SEE BELOW.
1     NCHAR     ADDRESS OF THE FIRST CHARACTER ON THE INPUT CARD FOR
                THIS ARGUMENT.  
2     VALUE(1)  FIRST WORD OF THE VALUE ASSOCIATED WITH THIS TYPE   
                OF ARGUMENT, SEE BELOW. 
.     . 
1+LK  VALUE(N)  LAST WORD OF THE VALUE ASSOCIATED WITH THIS TYPE OF ARUMENT.
    
#   
SUCCESSIVE ARGUMENTS IN THE ARGUMENT LIST FOLLOW EACH OTHER 
 DIRECTLY, AND  
 THE TOTAL LENGTH OF THE INFORMATION FOR EACH ARGUMENT IS 'LK2', WHICH IS PRESET
 IN THE COMMON BLOCK 'XKEYS', TOGETHER WITH 'LK' :  
#J  
    
      COMMON/XKEYS/KEY,NIN,LK,LK1,LK2   
    
#   
THE VARIOUS 'VALUES' AND 'TYPES' ARE :  
#J  
    
ITYPE            VALUE  
    
 -1         HOLERITH CHARACTER STRING 'LK' WORDS LONG, 4 CHARACTERS 
            PER WORD, DEFINING THE VARIABLE THAT HAS BEEN FOUND.
  0         UNSIGNED FLOATING POINT NUMBER. 
 >0         OPERATOR IN HOLERITH CHARACTERS, 'LK' WORDS LONG WITH 4 
            CHARACTERS PER WORD. IN THIS CASE THE VALUE 
            OF 'ITYPE' INDICATES THE OPERATOR THAT HAS BEEN 
            FOUND : 
    
  1         +   
  2         -   
  3         *   
  4         /   
  5         **  
  6         (   
  7         )   
  8         ,   
  9         =   
    
#   
THE HOLERITH CHARACTER EQUIVALENTS FOR THE OPERATORS MAY ALSO BE FOUND IN   
 THE COMMON BLOCK 'XLEXIC', IN WHICH THEY ARE PRESET :  
#J  
    
      COMMON/XLEXIC/NWXA,NXA,LXA,XA(9)  
    
WHERE : 
    
NWXA    NUMBER OF WORDS PER OPERATOR.   
NXA     NUMBER OF OPERATORS.
LXA     NUMBER OF WORDS BETWEEN SUCCESSIVE OPERATORS.   
XA      ARRAY CONTAINING THE OPERATORS IN HOLERITH CHARACTER
        FORM, PRESET AS FOLLOWS :   
    
      DATA XA(1)/4H+   /,XA(2)/4H-   /, AND SO ON.  
    
#   
#ZCHECKS PERFORMED BY THE SCANNER ON INPUT# 
#YSYSTEM PROVIDED CHECKS#   
#PAS THE CARDS ARE READ IN AND PROCESSED, THE SCANNER PERFORMS SEVERAL  
 CHECKS UPON THE ARGUMENTS THAT IT FINDS.   
 THESE CHECKS ARE : 
#J  
    
1.   EACH CARD MUST BEGIN WITH A DIRECTIVE. 
    
2.   'CONTINUE' MUST FOLLOW A CARD CONTAING A DIRECTIVE.
    
3.   ALL NUMBERS MUST BE TERMINATED BY AN OPERATOR OR BY A SPACE.   
    
4.   ON EACH COMPLETE CARD IMAGE, THE NUMBER OF '(' OPERATORS MUST  
     BE EQUAL TO THE NUMBER OF ')' OPERATORS.   
    
5.   ONLY CERTAIN COMBINATIONS OF ARGUMENT ARE ALLOWED TOGETHER :   
    
                       SECOND ARGUMENT  
    
                + - * / **  ( ) , =  S E N V
    
             +  N N N N N   Y N N N  N N Y Y
             -  N N N N N   Y N N N  N N Y Y
             *  N N N N N   Y N N N  N N Y Y
             /  N N N N N   Y N N N  N N Y Y
            **  N N N N N   Y N N N  N N Y Y
    
  FIRST      (  Y Y N N N   Y N Y N  N N Y Y
ARGUMENT     )  Y Y Y Y Y   N Y Y Y  N Y Y Y
             ,  Y Y N N N   N Y Y N  N N Y Y
             =  Y Y N N N   Y N N N  N N Y Y
    
             S  Y Y N N N   Y N N N  N Y Y Y
             E  N N N N N   N N N N  N Y N N
             N  Y Y Y Y Y   Y Y Y Y  N Y N Y
             V  Y Y Y Y Y   Y Y Y Y  N Y Y Y
    
#   
AN 'N' IN THE TABLE INDICATES THAT THE COMBINATION GIVEN IS NOT ALLOWED,
 WHEREAS A 'Y' INDICATES THAT THE COMBINATION IS ALLOWED.   
#YFORMING THE CHECK TABLE IN 'XLEXCH'#  
#PTHE TABLE ABOVE IS CONTROLLED FROM THE COMMON BLOCK 'XLEXCH'  
 WHICH MUST BE SET WHEN THE SCANNER IS CALLED.  
 THE VALUES CORRESPONDING TO THE TABLE ABOVE ARE AVAILABLE IN PRESET FORM,  
 AND THE INFORMATION IS SET UP AS FOLLOWS.  
#PEACH TYPE OF ARGUMENT IS ASSIGNED A NUMERIC VALUE THAT CORRESPONDS
 TO ONE BIT OF A WORD.  
 THE PRESET VALUES ARE :
#J  
    
+   1   
-   2   
*   4   
/   8   
**  16  
(   32  
)   64  
,   128 
=   1024
S   256 
E   512 
N   2097152 
V   4194304 
    
#   
FOR EACH TYPE OF ARGUMENT A SECOND WORD IS SET UP WHICH IS THE SUM  
 OF THE NUMERIC VALUES ASSOCIATED WITH THOSE ARGUMENTS THAT MAY NOT FOLLOW IT.  
 (IN OTHER WORDS THE BIT PATTERN FOR INADMISSABLE ARGUMENTS IS SET UP). 
 FOR THE TABLES ABOVE, THE VALUES ARE : 
#J  
    
+   2015
-   2015
*   2015
/   2015
**  2015
(   1884
)   288 
,   1852
=   2012
S   1500
E   6292991 
N   2098432 
V   256 
    
ALL THESE VALUES ARE PRESET IN THE COMMON BLOCK 'XLEXCH' :  
    
      COMMON/XLEXCH/KS,KE,KN,KV,KB(13),KC(13)   
    
#   
 THE ARRAY 'KB' HOLDS THE NUMERIC EQUIVALENT FOR EACH TYPE OF   
 ARGUMENT.  
 THE ARRAY 'KC' HOLDS THE VALUES THAT DEFINE WHICH ARGUMENTS MAY NOT FOLLOW 
 EACH TYPE OF ARGUMENT. 
 THE FIRST NINE POSITIONS IN EACH ARRAY ARE ALLOCATED TO THE OPERATORS, 
 IN THE SEQUENCE ALREADY DEFINED ABOVE AND USED IN THE COMMON BLOCK 
 'XLEXIC'.  
 THE POSITIONS OF THE OTHER TYPES OF ARGUMENT ARE GIVEN BY 'KS', 'KE',  
 'KN' AND 'KV', AS FOLLOWS :
#J  
    
KS   POSITION OF THE INFORMATION FOR START OF CARD.  (=13)  
KE   POSITION OF THE INFORMATION FOR END OF CARD.  (=10)
KN   POSITION OF THE INFORMATION FOR A NUMBER.  (=11)   
KV   POSITION OF THE INFORMATION FOR A VARIABLE.  (=12) 
    
#   
THIS COMMON BLOCK MAY BE USED IN ITS PRESET FORM, OR
 ANOTHER SET OF VALUES MAY BE USED IF REQUIRED. 
#ZADDITIONAL INPUT UTILITIES#   
#YSUBROUTINE XRDSYM(LN,NWARG,IARG,NARG,NSARG)#  
#PAS WELL AS THE FUNCTION 'KLEXAN' WHICH READS THE INPUT DATA AND STORES IT 
 ON THE DISC, THERE ARE TWO OTHER SUBROUTINES AVAILABLE.
 THE FIRST OF THESE TWO SUBROUTINES 'XRDSYM' USES 'KLEXAN' TO INPUT 
 AND STORE A LIST ON THE DISC.  
 (SUCH LISTS ARE CALLED SYMBOLIC LISTS).
 THE SECOND OF THESE TWO ROUTINES 'XCSLST' WILL COPY A LIST PRODUCED
 BY 'XRDSYM' FROM ONE AREA OF THE DISC TO ANOTHER.  
 (IN FACT, WHEN A LIST IS BEING INPUT, 'XRDSYM' ITSELF CALLS 'XCSLST'   
 IF AN OLD VERSION OF A LIST IS BEING OVERWRITTEN). 
#PA CALL TO 'XRDSYM' MIGHT BE AS FOLLOWS :  
#J  
    
      . 
C--READ THE DATA FOR LIST 'LN' AND STORE IT ON THE DISC 
      CALL XRDSYM(LN,NWARG,IARG,NARG,NSARG) 
      . 
    
WHERE : 
    
LN      THE LIST TYPE THAT IS TO BE PRODUCED.   
NWARG   NUMBER OF WORDS PER USER DIRECTIVE FOR 'KLEXAN'.
IARG    ARRAY CONTAINING THE USER DIRECTIVES.   
NARG    NUMBER OF USER DIRECTIVES.  
NSARG   NUMBER OF WORDS BETWEEN SUCCESSIVE USER DIRECTIVES. 
    
#   
THE LAST FOUR ARGUMENTS ARE THE SAME AS THOSE FOR 'KLEXAN'. 
 THIS SUBROUTINE USES THE SAME COMMON BLOCKS AS 'KLEXAN', BUT   
 THE AREAS USED ARE DIFFERENT.  
 FOR 'XWORK' AND 'XLISTI' ALL THE VARIABLES ARE USED, WHILE THE AREA IN 'XDATA' 
 IS FROM 'NFL' TO 'LFL'.
#YFORMAT OF THE PREAMBLE BLOCK FOR A SYMBOLIC LIST# 
#PA SYMBOLIC LIST PRODUCED BY 'XRDSYM' BEGINS WITH A PREAMBLE   
 BLOCK WHICH IS NINE WORDS LONG :   
#J  
    
0       XJN     THE JOB NUMBER  
1       XLN     THE LIST NUMBER 
2       XLSN    THE LIST SERIAL NUMBER  
3       XLVN    THE LIST VERSION NUMBER 
4       -       RESERVED
5       XLK     LENGTH OF THE VALUE ASSOCIATED WITH EACH ARGUMENT.  
                (TAKEN FROM 'XKEYS' AND CHECKED WHEN THE LIST IS
                READ BACK FROM THE DISC).   
6       -       RESERVED
7       IADD1   DISC ADDRRSS OF THE CONTROL BLOCK FOR THE FIRST 
                CARD IMAGE. 
8       NCARD   NUMBER OF CARDS FOR WHICH INFORMATION IS STORED.
    
#   
THIS PREAMBLE IS USED TO GAIN ACCESS TO THE REST OF THE LIST.   
 IT MAY BE LOADED SEPARATELY USING THE SUBROUTINE 'XRLIST'  
 AS FOLLOWS :   
#J  
    
      . 
C--LOAD THE PREAMBLE BLOCK FOR THE SYMBOLIC LIST 'LN'   
      CALL XRLIST(LN,LSN,STORE(NFL),LL) 
C--FIND THE DISC ADDRESS OF THE FIRST CARD IMAGE
      IADD=ISTORE(NFL+7)
C--START TO PROCESS THE REST OF THE LIST
      . 
    
#   
THE LIST LENGTH 'LL' WILL BE SET NEGATIVE, TO INDICATE THAT A PREAMBLE  
 BLOCK HAS BEEN READ.   
 USING WORD 7 OF THE PREAMBLE BLOCK, THE DISC ADDRESS OF THE
 INFORMATION FOR THE FIRST CARD CAN FOUND, AND THUS THE LIST PROCESSED. 
#YSUBROUTINE XCSLST(IADD,LPB,LFW,LLW)#  
#PTHE SECOND SUBROUTINE 'XCSLST' WILL COPY A LIST PRODUCED BY 'XRDSYM'  
 FROM ONE AREA OF THE DISC TO ANOTHER.  
 THIS ROUTINE MIGHT BE CALLED BY THE CODE SEQUENCE :
#J  
    
      . 
C--COPY THE INPUT LIST INTO THE SPACE OCCUPIED BY THE OLD LIST  
      CALL XCSLST(IADD,LPB,LFW,LLW) 
      . 
    
WHERE : 
    
IADD    DISC ADDRESS OF THE PREAMBLE BLOCK OF THE LIST TO BE COPIED.
LPB     LENGTH OF THE PREAMBLE BLOCK OF THE LIST TO BE COPIED.  
LFW     DISC ADDRESS AT WHICH TO PLACE THE FIRST WORD OF THE
        PREAMLBE BLOCK OF THE NEW LIST. 
LLW     SET ON RETURN TO THE DISC ADDRESS OF THE LAST WORD OF   
        THE LIST AFTER IT HAS BEEN COPIED.  
    
#   
'LFW' MUST BE SET WHEN THE LIST IS CALLED, AND THE AREA ASSIGNED IS 
 ASSUMED TO BE LARGE ENOUGH TO TAKE THE COMPLETE LIST.  
 (THE CALLING PROGRAM CAN CHECK THIS USING 'XOWLST', BUT 'XCSLST'   
 ITSELF PERFORMS NO SUCH CHECK).
 THIS ROUTINE USES THE AREA BETWEEN 'NFL' AND 'LFL' IN 'STORE'  
 AND ASSUMES THAT SUFFICIENT SPACE HAS BEEN ALLOCATED TO LOAD EACH CARD.
 'XCSLST' DOES NOT UPDATE THE LIST CONTROL TABLES.  
#ZOUTPUT UTILITIES# 
#YSUBROUTINE XPRTCI(NCARD,IADD,NWORD)#  
#PVARIOUS SUBROUTINES ARE AVAILABLE TO PRINT THE INFORMATION PRODUCED   
 BY THE LEXICAL SCANNER ON THE LINE PRINTER.
 THE FIRST OF THESE ROUTINES PRINTS A CARD THAT HAS ALREADY BEEN
 LOADED INTO CORE : 
#J  
    
      . 
C--PRINT THE CURRENT CARD   
      CALL XPRTCI(NCARD,IADD,NWORD) 
      . 
    
WHERE : 
    
NCARD   THE NUMBER OF THE CARD, AS GIVEN IN WORD 4 OF THE CONTROL   
        BLOCK FOR EACH CARD.
IADD    ABSOLUTE ADDRESS IN 'STORE' OF THE CARD IMAGE IN CHARACTER  
        FORM, AS GIVEN IN RELATIVE FORM IN WORD 5 OF THE CONTROL
        BLOCK FOR EACH CARD.
NWORD   LENGTH OF THE CARD IMAGE IN WORDS, EACH OF WHICH CONTAINS   
        FOUR CHARACTERS IN A4 FORMAT.   
        (AS GIVEN IN WORD 3 OF THE THE CONTROL BLOCK).  
    
#   
 IF INSUFFICIENT CORE IS AVAILABLE, AN ERROR MESSAGE IS PRODUCED
 AND THE SUBROUTINE THEN RETURNS CONTROL TO THE CALLING PROGRAM.
THIS ROUTINE DOES NOT ALTER ANY VALUES IN ANY COMMON BLOCKS.
#YSUBROUTINE XPRTLX(IADD,IBASE,ITYPE)#  
#PTHE SECOND OUTPUT UTILITY USES 'XPRTCI' TO PRINT ALL  
 THE INFORMATION STORED ON THE DISC BY 'KLEXAN'.
 THIS ROUTINE IS CALLED BY THE SEQUENCE :   
#J  
    
      . 
C--PRINT THE OUTPUT FROM KLEXAN 
      CALL XPRTLX(IADD,IBASE,ITYPE) 
      . 
    
WHERE : 
    
IADD    DISC ADDRESS OF THE CONTROL BLOCK FOR THE FIRST CARD IMAGE. 
IBASE   FIRST WORD IN 'STORE' THAT MAY BE USED. 
        (THIS SUBROUTINE MAY USE THE WHOLE AREA BETWEEN 'IBASE' 
         AND 'LFL' AS WORK SPACE).  
ITYPE   THIS ARGUMENT DETERMINES THE TYPE OF LISTING PRODUCED : 
    
        <1  ONLY THE CARD IMAGE IN CHARACETER FORM IS PRINTED.  
        >0  THE CARD IMAGE IN CHARACTER FORM AND THE ARGUMENT   
            LIST ARE PRINTED.   
    
#   
THIS SUBROUTINE USES THE COMMON BLOCK 'XWORK' AS WELL AS THE AREA DEFINED   
 IN 'STORE'.
#YSUBROUTINE XPRTSM(LN)#
#PTHE THIRD SUBROUTINE USES 'XPRTLX' TO PRINT THE INFORMATION STORED
 FOR A SYMBOLIC LIST PRODUCED BY 'XRDSYM' : 
#J  
    
      . 
C--PRINT THE CURRENT SYMBOLIC LIST OF TYPE 'LN' 
      CALL XPRTSM(LN)   
      . 
    
WHERE : 
    
LN      THE LIST NUMBER TO BE PRINTED.  
    
#   
THIS ROUTINE IS A STANDARD LIST PRINT, PRODUCING THE INFORMATION
 GENERATED BY THE LEXICAL SCANNER TOGETHER WITH THE NORMAL  
 HEADER INFORMATION PRINTED BY 'KPRTLH'.
 THE VALUE OF 'IBASE' GIVEN TO 'XPRTLX' IS 'NFL', SO THAT THE WHOLE 
 OF THE AREA BETWEEN 'NFL' AND 'LFL' MAY BE USED.   
 THE VALUE OF 'ITYPE' IS DETERMINED BY THE CORE DUMP PARAMETER 'ISTAT2' 
 FROM THE COMMON BLOCK 'XSYS'.  
 THIS MAY BE ALTERED BY A CALLING PROGRAM OR BY A USER WITH THE 
 SECOND PARAMETER TO '\MONITOR'.
#ZGENERAL UTILITIES FOR PROCESSING THE OUTPUT FROM KLEXAN#  
#YCOMMON BLOCK VARIABLES REQUIRED#  
#PA WIDE VARIETY OF ROUTINES ARE AVAILABLE TO HELP IN THE   
 PROCESSING OF THE OUTPUT FROM 'KLEXAN' AS IT IS READ BACK  
 FROM THE DISC. 
 THE ROUTINES COMMUNICATE WITH THE MAIN PROCESSING  
 PROGRAM VIA BOTH THEIR ARGUMENT LISTS, AND VIA VARIABLES IN
 THE FOLLOWING COMMON BLOCKS :  
#J  
    
      COMMON/XLISTI/JN,LN,LSN,LEF   
      COMMON/XWORK/MA,MB,MC,MD,ME,MF,MG,MH,MI,MJ,MK,ML,MM,MN,   
     2 MO,MP,MQ,MR,MS,MT,MU,MV,MW,MX,MY,MZ  
    
#   
THE VARIABLES THAT MUST BE SET AND NOT ALTERED UNINTENTIONALLY ARE :
#J  
    
LN      LIST TYPE NUMBER ASSOCIATED WITH THIS TYPE OF   
        LEXICAL SCANNER OUTPUT. WHEN THE OUTPUT IS PRINTED, 
        IT IS CALLED 'SYMBOLIC LIST TYPE LN'. THIS MUST BE  
        SET BY THE ROUTINE THAT CALLES 'KLEXAN' BEFORE IT   
        STARTS PROCESSING THE OUTPUT ON THE DISC.   
LEF     THIS VARIABLE COUNTS THE NUMBER OF ERRORS FOUND 
        DURING THE PROCESSING OF THE INFORMATION ON THE 
        DISC. THIS SHOULD BE SET TO ZERO BEFORE THE 
        INFORMATION IS PROCESSED.   
MA      DISC ADDRESS OF THE CONTROL BLOCK FOR THE FIRST 
        CARD IMAGE STORED. THIS SHOULD BE SET BEFORE THE
        INFORMATION IS PROCESSED, AND SHOULD CORRESPOND TO THE DISC 
        ADDRESS PROVIDED AS THE FIRST ARGUMENT TO 'KLEXAN'. 
MB      DISC ADDRESS OF THE CONTROL BLOCK FOR THE CARD IMAGE THAT IS
        CURRENTLY BEING PROCESSED. THIS SHOULD BE SET INITIALLY TO THE  
        SAME VALUE AS 'MA' AND UPDATED AS EACH NEW CARD IS  
        LOADED INTO CORE FOR PROCESSING.
MC      DISC ADDRESS OF THE CONTROL BLOCK OF THE CARD LAST PRINTED  
        BY 'XPCLNN'. 'MC' SHOULD BE SET INITIALLY TO ZERO, AND UPDATED  
        ONLY BY 'XPCLNN'.   
MD      ADDRESS IN CORE OF THE FIRST WORD OF THE CONTROL BLOCK  
        FOR THE CARD IMAGE CURRENTLY BEING PROCESSED. THIS IS THE   
        ADDRESS AT WHICH EACH CARD IS LOADED, AND MAY BE A CONSTANT 
        OR MAY CHANGE FROM CARD TO CARD. THE SUBROUTINE 'XPCLNN'
        MAY LOAD THE INFORMATION FOR ANY OF THE CARDS BEFORE THE
        CURRENT CARD INTO CORE. FOR THIS REASON, SUFFICIENT CORE
        ABOVE 'MD' MUST BE ALLOCATED TO ALLOW ANY OF THE PREVIOUS   
        CARD IMAGE INFORMATION TO BE LOADED FROM THE DISC.  
        IN EFFECT THE MAXIMUM LENGTH OF CARD IMAGE INFORMATION  
        MUST BE RECORDED AND ALLOCATED BEYOND 'MD'. 
ME      THIS VARIABLE CONTAINS THE NUMBER OF ARGUMENTS REAMINING
        TO BE PROCESSED ON THE CURRENT CARD. THIS VARIABLE  
        MUST ALWAYS BE CHECKED BEFORE AN ARGUMENT IS EXAMINED   
        TO ENSURE THAT AN ARGUMENT IS PRESENT.  
        IT SHOULD ALSO BE UPDATED WHEN AN ARGUMENT HAS BEEN 
        PROCESSED. THIS VARIABLE MUST BE SET TO THE CONTENTS
        OF WORD 6 OF THE CONTROL BLOCK FOR EACH CARD WHEN THE CARD  
        IS FIRST LOADED INTO CORE FROM THE DISC.
MF      CORE ADDRESS OF THE ARGUMENT BEING PROCESSED ON THE CURRENT 
        CARD. THIS VARIABLE MUST BE UODATED AS EACH ARGUMENT IS PROCESSED   
        BY A SEQUENCE SUCH AS : 
    
        ME=ME-1 
        MF=MF+LK2   
    
        THIS VARIABLE MUST BE CALCULATED INITIALLY USING THE CONTENTS   
        OF WORD 5 OF THE CONTROL BLOCK FOR EACH CARD IMAGE :
    
        MF=ISTORE(MD+5)+MD  
    
MG      THIS VARIABLE MUST BE SET TO THE VALUE STORED FOR THE   
        TYPE OF DIRECTIVE ON THE CURRENT CARD, GIVEN IN WORD 7 OF   
        THE CONTROL BLOCK.  
MQ      THIS VARIABLE INDICATES A BUFFER OF 100 WORDS AT WHICH  
        THE ATOM AND OVERALL PARAMETER ROUTINES STORE   
        INFORMATION. THIS VARIABLE MAY BE SET AS EACH CARD IS   
        LOADED INTO CORE, OR LEFT AT A FIXED VALUE. 
    
#   
#YSUBROUTINE XPCLNN(LN)#
#PTHE FIRST SUBROUTINE IN THIS SECTION IS A PRINT ROUTINE WHICH 
 USES 'XPRTCI' :
#J  
    
      . 
C--PRINT UPTO AND INCLUDING THE CURRENT CARD IMAGE  
      CALL XPCLNN(LN)   
      . 
    
WHERE : 
    
LN      THE LIST TYPE NUMBER ASSOCIATED WITH THIS TYPE OF   
        SCANNER OUTPUT. ('LN' IS USUALLY TAKEN FROM 'XLISTI',   
        AND IS ASSIGNED A VALUE IN EXCESS OF 100 BY THE CALLING 
        ROUTINE).   
    
#   
THIS ROUTINE REQUIRES THE VARIABLES 'MA', 'MB', 'MC' AND 'MD' TO BE SET 
 IN THE COMMON BLOCK 'XWORK'.   
 THIS ROUTINE PRINTS ALL THE CARDS STORED ON THE DISC, STARTING AFTER   
 THE LAST CARD THAT IT PROCESSED DURING THE PREVIOUS CALL, AND FINISHING
 WITH THE CURRENT CARD BEING PROCESSED. 
 (SUCCESSIVE CALLS WITH THE SAME CARD LOADED, AND THUS THE SAME VALUE   
 OF 'MB', PRODUCE NO ADDITIONAL OUTPUT AFTER THE FIRST CALL).   
 THE CORE AREA DEFINED BY 'MD' MUST THEREFORE BE LARGE ENOUGH   
 TO CONTAIN THE LARGEST CARD IMAGE PROCESSED THUS FAR.  
 SINCE THE FINAL CARD AT 'MD' IS THE ONE CURRENTLY BEING PROCESSED  
 'MD' IS NORMALLY TAKEN TO DEFINE THE CORE AREA AT WHICH CARDS  
 ARE BOTH PRINTED AND PROCESSED.
#PTHIS SUBROUTINE CAN BE USED TO PRINT THE CURRENT CARD IMAGE AFTER AN  
 ERROR OR TO PRODUCE A LISTING REQUESTED BY THE USER.   
 THE NORMAL LIST CONTROL PARAMETER IS 'ISTAT2' IN THE COMMON BLOCK  
 'XSYS'.
 THIS VARIABLE CONTROLS THE LISTING OF INFORMATION AS EACH LIST IS LOADED   
 AND CAN BE USED FOR THE LEXICAL SCANNER AS WELL.   
#YAN EXAMPLE#   
#PA LEXICAL SCANNER CALL WHICH INCLUDES THE USER CONTROL PARAMETERS 
 'LIST' AND 'NO LIST' MIGHT THUS BE :   
#J  
    
      DIMENSION IDIR(10)
C   
      COMMON/XLISTI/JN,LN,LSN,LEF   
      COMMON/XWORK/MA,MB,MC,MD,ME,MF,MG,MH,MI,MJ,MK,ML,MM,MN,   
     2 MO,MP,MQ,MR,MS,MT,MU,MV,MW,MX,MY,MZ  
C   
      . 
      DATA IDIR(1)/4HLIST/,IDIR(2)/4HNO  /,IDIR(3)/4HFULL/  
      . 
      . 
      . 
      CALL XCSAE
C--PRESERVE THE INITIAL VALUE OF 'ISTAT2'   
      KC=ISTAT2 
C--SET UP THE LIST TYPE FOR THIS TYPE OF LEXICAL SCANNER OUTPUT 
      LN= . . . 
C--CALL THE LEXICAL SCANNER 
      KA=KNEXTF(KC) 
      IF(KLEXAN(KA,NFL,NWDIR,IDIR,NDIR,NSDIR))9000,9000,1500
C--SET UP THE CORE AND DISC CONTROL FLAGS   
1500  CONTINUE  
      MA=KA 
      MB=MA 
      MC=0  
      MD=NFL
C--SET THE MAXIMUM CARD LENGTH FOUND TO ZERO
      KD=0  
C--SET THE ERROR COUNTER TO ZERO
      LEF=0 
      . 
      . 
      . 
C--CHECK IF THERE IS ANOTHER CARD TO LOAD   
2000  CONTINUE  
      IF(MB)3000,3000,2010  
C--READ DOWN THE FIRST TWO WORDS OF THE CONTROL BLOCK   
2010  CONTINUE  
      CALL XDOWNF(MB,ISTORE(MD),2)  
C--PRESERVE THE DISC ADDRESS OF THE NEXT CONTROL BLOCK  
      KE=ISTORE(MD) 
C--CALCULATE THE MAXIMUM LENGTH OF CARD INFORMATION FOUND SO FAR
      KD=MAX0(KD,ISTORE(MD+1))  
C--SET UP THE NEW VALUE OF 'NFL'
      NFL=MD+KD+100 
C--CHECK THAT THERE IS SUFFICIENT ROOM FOR THIS CARD
      IF(NFL-LFL)2100,2020,2020 
C--INSUFFICIENT CORE AVAILABLE  
2020  CONTINUE  
      CALL XICA 
      GOTO 9000 
C--LOAD ALL THE INFORMATION FOR THIS CARD IMAGE INTO STORE  
2100  CONTINUE  
      CALL XDOWNF(MB,ISTORE(MD),ISTORE(MD+1))   
C--SET UP THE NUMBER OF ARGUMENTS TO BE PROCESSED   
      ME=ISTORE(MD+6)   
C--COMPUTE THE ADDRESS OF THE ARGUMENTS 
      MF=ISTORE(MD+5)+MD
C--FIND THE TYPE OF USER DIRECTIVE ON THIS CARD 
      MG=ISTORE(MD+7)   
C--SET UP THE AREA FOR THE ATOM INFORMATION TO BE PLACED
      MQ=NFL-100
      . 
      . 
C--BRANCH ON THE TYPE OF USER DIRECTIVE ON THE CARD 
      GOTO (2200,2210,2220, . . . . .),MG   
C   
C--A 'LIST' DIRECTIVE   
2200  CONTINUE  
      ISTAT2=-1 
      GOTO 2900 
C   
C--A 'NO LIST' DIRECTIVE
2210  CONTINUE  
      ISTAT2=0  
      GOTO 2900 
C   
C--A 'FULL LIST' DIRECTIVE  
2220  CONTINUE  
      ISTAT2=1  
      GOTO 2900 
C   
C--A '. . . . .' DIRECTIVE  
      . 
      . 
      . 
C   
C--END OF THE PROCESSING FOR THE CURRENT CARD  -  CHECK FOR LISTING 
2900  CONTINUE  
      IF(ISTAT2)2910,2920,2910  
C--PRINT THE CURRENT CARD   
2910  CONTINUE  
      CALL XPCLNN(LN)   
C--RETURN FOR THE NEXT CARD FROM THE DISC   
2920  CONTINUE  
      MB=KE 
      GOTO 2000 
C   
C--END OF ALL THE DIRECTIVE CARDS  -  CHECK FOR ERRORS DURING THE PROCESSING
3000  CONTINUE  
      IF(LEF)9000,3010,3010 
C--START THE REST OF THE PROCESSING 
3010  CONTINUE  
      . 
      . 
      . 
C   
C--GENERAL ERROR ROUTINE
9000  CONTINUE  
      . 
    
#   
#YUPDATING 'ME', 'MF' AND 'LEF'#
#PTHE CORRECT TYPE OF CODE FOR PROCESSING THE VARIABLES 'ME', 'MF'  
 AND 'LEF' ARE ILLUSTRATED BY THE  NEXT EXAMPLE, WHICH MIGHT OCCUR  
 IN THE EXAMPLE ABOVE DURING THE PROCESSING OF ONE OF THE OTHER 
 USER DIRECTIVES :  
#J  
    
      . 
C--CHECK THAT THIS CARD HAS AT LEAST ONE ARGUMENT ON IT 
      IF(ME)2510,2510,2540  
C--NO ARGUMENTS ON THIS CARD  -  THIS IS AN ERROR   
2510  CONTINUE  
      CALL XPCLNN(LN)   
      WRITE(NCWU,2520)  
2520  FORMAT(/19H NO ARGUMENTS FOUND)   
      LEF=LEF+1 
      GOTO 2900 
C--CHECK IF THERE IS ANOTHER ARGUMENT TO PROCESS ON THIS CARD   
2530  CONTINUE  
      IF(ME)2900,2900,2540  
C--BRANCH ON THE NEXT TYPE OF ARGUMENT  
2540  CONTINUE  
      IF(ISTORE(MF))2550,2560,2570  
C--THIS IS A VARIABLE  -  FIND OUT WHAT TYPE
2550  CONTINUE  
      . 
      . 
      . 
      GOTO 2590 
C--THIS IS A NUMBER 
2560  CONTINUE  
      . 
      . 
      . 
      GOTO 2590 
C--THIS IS AN OPERATOR  
2570  CONTINUE  
      . 
      . 
C--UPDATE THE CURRENT CARD POSITION AFTER PROCESSING THIS ARGUMENT  
2590  CONTINUE  
      ME=ME-1   
      MF=MF+LK2 
      GOTO 2530 
    
#   
THE ERROR ROUTINE AT '2510' UPDATES THE ERROR COUNTER 'LEF' 
 AND USES 'LN' WHEN PRINTING THE LIST.  
#YERROR MESSAGE SUBROUTINES#
#PAPART FROM 'XPCLNN', THERE ARE SEVERAL OTHER PRINT ROUTINES THAT  
 MAY BE USEFUL. 
 THE FIRST GROUP OF SUCH ROUTINES ALL CALL 'XPCLNN', UPDATE 'LEF' AND THEN  
 PRINT OUT AN ERROR MESSAGE.
 THESE ROUTINES ARE GIVEN BELOW, TOGETHER WITH THEIR ERROR MESSAGES :   
#J  
    
CALL XILOP(IN)    : ILLEGAL OPERATOR AT ABOUT COLUMN  'IN'  
    
CALL XILNUM(IN)   : ILLEGAL NUMBER AT ABOUT COLUMN 'IN' 
    
CALL XMISOP(A,IN) : OPERATOR 'A' NOT FOUND AT ABOUT COLUMN  'IN'
    
CALL XPCA(IN)     : PROCESSING OF CARD 'IN' ABANDONED   
    
CALL XCSO(IN)     : COMPILER REQUIRES MORE CORE AT ABOUT COLUMN  'IN'   
    
CALL XADE(IN)     : ERROR IN ATOM DEFINITION AT ABOUT COLUMN  'IN'  
    
CALL XSFDE(IN)    : ERROR IN SCALE FACTOR DEFINITION AT ABOUT COLUMN  'IN'  
    
#   
THE 'IN' VALUES GIVING THE COLUMN POSITION ARE GENERALLY TAKEN  
 FROM THE SECOND WORD OF EACH ARGUMENT, WHILE 'IN' FOR 'XPCA' IS
 FOUND IN WORD 4 OF THE CONTROL BLOCK.  
 THE FORMAT OF 'A' FOR 'XMISOP' IS A1 WHEN IT IS PRINTED.   
 THERE IS ONE OTHER GENERAL ROUTINE WHICH MAY BE CALLED, WHICH  
 DOES NOT CALL 'XPCLNN' BEFORE IT PRINTS OUT ITS MESSAGE :  
#J  
    
CALL XICA   : INSUFFICIENT CORE AVAILABLE   
    
#   
#YFUNCTION KSYNUM(A)#   
#PSINCE THE SIGN OF A NUMBER AND ITS VALUE MAY BE STORED
 AS SEPARATE ARGUMENTS, TWO FUNCTIONS ARE PROVIDED TO COMBINE THEM :
#J  
    
      . 
C--CHECK IF THE NEXT ARGUMENT(S) CAN BE FORMED INTO A NUMBER
      I=KSYNUM(A)   
C--CHECK THE VALUE OF THE REPLY 
      . 
    
WHERE : 
    
A       SET TO THE SIGNED NUMBER UPON RETURN, IF ONE IS FOUND   
    
THE RETURN VALUES OF 'KSYNUM' ARE : 
    
-1      VARIABLE FOUND INSTEAD OF A NUMBER. 
 0      A NUMBER, WITH OR WITHOUT A SIGN, HAS BEEN FOUND AND
        PROCESSED CORRECTLY.
>1      AN OPERATOR, WHOSE VALUE IS GIVEN BY 'KSYNUM', HAS BEEN 
        FOUND INSTEAD OF A NUMBER. (THIS INCLUDES A '+' OR A '-'
        THAT IS NOT FOLLOWED BY A NUMBER).  
    
#   
THIS ROUTINE USES 'ME' AND 'MF', BUT DOES NOT CHECK 'ME' WHEN IT IS 
 CALLED TO CHECK FOR END OF CARD, AND LEAVES 'ME' AND 'MF' POINTING 
 TO THE LAST ARGUMENT PROCESSED RATHER THAN THE NEXT ARGUMENT TO BE 
 PROCESSED. 
 A SUITABLE BLOCK OF CODE FOR USING 'KSYNUM' MIGHT THUS BE :
#J  
    
      . 
C--CHECK FOR ANOTHER ARGUMENT   
      IF(ME)2750,2750,2700  
C--CHECK IF THIS ARGUMENT GROUP IS ANUMBER  
2700  CONTINUE  
      IF(KSYNUM(Z))2710,2730,2720   
C--NOT A NUMBER, BUT A VARAIBLE INSTEAD 
2710  CONTINUE  
      . 
      . 
      . 
C--NOT A NUMBER, BUT AN OPERATOR
2720  CONTINUE  
      . 
      . 
      . 
C--FIX THE NUMBER SO THAT WE CAN USE AS AN INTEGER  
2730  CONTINUE  
      IT=NINT(Z)
C--UPDATE THE CARD POSITIONS
      ME=ME-1   
      MF=MF+LK2 
C--CARRY ON PROCESSING  
      . 
    
#   
#YFUNCTION KNUMBR(A)#   
#PTHE SECOND FUNCTION USES 'KSYNUM', BUT APPLIES ALL THE
 NECESSARY CHECKS AND LEAVES 'ME' AND 'MF' POINTING TO THE NEXT 
 ARGUMENT TO BE PROCESSED : 
#J  
    
      . 
C--CHECK IF THE NEXT ARGUMENT GROUP IS A NUMBER 
      I=KNUMBR(A)   
      . 
    
WHERE : 
    
A       SET TO THE SIGNED NUMBER IF ONE IS FOUND.   
    
THE RETURN VALUES OF 'KNUMBR' ARE : 
    
-1      END OF CARD FOUND   
 0      A NUMBER, WITH OR WITHOUT A SIGN, HAS BEEN FOUND
        AND CORRECTLY PROCESSED. 'ME' AND 'MF' NOW POINT
        TO THE NEXT ARGUMENT TO BE PROCESSED.   
+1      THE NEXT ARGUMENT GROUP DOES NOT DEFINE A NUMBER.   
        (NO ERROR MESSAGE IS OUTPUT).   
    
#   
#YFUNCTION KOP(J)#  
#PTO FACILITATE THE INVESTIGATION OF OPERATORS, A FUNCTION IS PROVIDED  
 TO CHECK FOR THEM :
#J  
    
      . 
C--CHECK THE NEXT ARGUMENT TO SEE IF IT IS AN OPERATOR  
      I=KOP(J)  
      . 
    
WHERE : 
    
J       THE NUMERIC VALUE ASSOCIATED WITH THIS OPERATOR, AS 
        DEFINED ABOVE IN 'XLEXIC'.  
    
THE RETURN VALUES OF 'KOP' ARE :
    
-1      END OF CARD DETECTED.   
 0      THE OPERATOR REQUESTED WAS THE CURRENT ARGUMENT. 'ME'   
        AND 'MF' NOW POINT TO THE ARGUMENT AFTER THE OPERATOR   
        THAT HAS BEEN FOUND.
+1      THE ARGUMENT IS NOT THE REQUESTED OPERATOR. 
    
#   
THIS FUNCTION CHECKS FOR END OF CARD AT THE START, AND LEAVES   
 'ME' AND 'MF' POINTING TO THE NEXT ARGUMENT TO BE PROCESSED.   
#ZPROCESSING ATOMS AND ATOMIC PARAMETERS#   
#YINTRODUCTION# 
#PAS WELL AS THE GENERAL ROUTINES DESCRIBED IN THE PREVIOUS SECTIONS,   
 THERE ARE A SET OF ROUTINES FOR PROCESSING THE INFORMATION ASSOCIATED  
 WITH ATOMS AND ATOMIC PARAMETERS.  
 THESE ROUTINES DEFINE THE FORMAT THAT MUST BE USED TO DESCRIBE 
 AN ATOM OR AN ATOMIC PARAMETER, AND ARE DESCRIBED IN THE NEXT SECTION. 
#YATOM SPECIFICATION#   
#PTHERE ARE TWO DIFFERENT BUT RELATED WAYS OF SPECIFYING AN ATOM
 OR A GROUP OF ATOMS.   
#Y1.    TYPE(SERIAL,S,L,TX,TY,TZ)#      
#PTHIS SPECIFICATION DEFINES ONE ATOM.  
 THE VARIOUS PARTS OF THE EXPRESSION ARE :  
#J  
    
    
TYPE      THE ATOM TYPE     
        
SERIAL    THE SERIAL NUMBER OF THE GIVEN ATOM TYPE  
        
          THE 'TYPE' AND 'SERIAL' SERVE TO IDENTIFY     
          THE REQUIRED ATOM IN THE CURRENT LIST.
        
S         'S' SPECIFIES A SYMMETRY MATRIX PROVIDED  
          IN THE UNIT CELL SYMMETRY LIST (LIST 2).  
          'S' MAY TAKE ANY VALUE BETWEEN '-P' AND '+P',     
          EXCEPT ZERO, WHERE 'P' IS THE NUMBER OF SYMMETRY  
          EQUIVALENT POSITIONS PROVIDED IN LIST 2 (SEE ABOVE).  
          IF 'S' IS LESS THAN ZERO, THE COORDINATES OF THE  
          ATOM IN THE LIST ARE NEGATED (I.E. INVERTED   
          THROUGH A CENTRE OF SYMMETRY AT THE ORIGIN)   
          AND THEN MULTIPLIED BY THE MATRIX 
          DEFINED BY THE ABSOLUTE VALUE OF 'S'  
          TO GENERATE THE NEW ATOMIC COORDINATES.   
          'S' MAY BE LESS THAN ZERO EVEN IF THE SPACE   
          GROUP IS NON-CENTROSYMMETRIC, BUT MUST NOT BE     
          GREATER THAN 'P'.     
          THE DEFAULT VALUE FOR 'S' IS '1', SPECIFYING THE  
          FIRST MATRIX IN LIST 2, WHICH MAY OR MAY NOT  
          BE THE UNIT MATRIX, DEPENDING ON HOW THE  
          INPUT WAS DONE.   
        
L         'L' SPECIFIES THE NON-PRIMITIVE LATTICE TRANSLATION   
          THAT IS TO BE ADDED AFTER THE COORDINATES HAVE BEEN   
          MODIFIED BY THE OPERATIONS GIVEN BY 'S'.  
          'L' MUST NOT BE GREATER THAN THE NUMBER OF ALLOWED    
          NON-PRIMITIVE TRANSLATIONS IN THE SPACE GROUP.    
          THE TRANSLATIONS PROVIDED BY 'L' DEPEND ON    
          THE LATTICE TYPE AND ARE GIVEN BY :   
        
          P LATTICE :   
        
                L=1, 0,0,0. 
        
          I LATTICE :   
        
                L=1, 0,0,0. 
                L=2, 1/2,1/2,1/2.   
        
          R LATTICE :   
        
                L=1, 0,0,0. 
                L=2, 1/3,2/3,2/3.   
                L=3, 2/3,1/3,1/3.   
        
          F LATTICE :   
        
                L=1, 0,0,0. 
                L=2, 0,1/2,1/2. 
                L=3, 1/2,0,1/2. 
                L=4, 1/2,1/2,0. 
        
          A LATTICE :   
        
                L=1, 0,0,0. 
                L=2, 0,1/2,1/2. 
        
          B LATTICE :   
        
                L=1, 0,0,0. 
                L=2, 1/2,0,1/2. 
        
          C LATTICE :   
        
                L=1, 0,0,0. 
                L=2, 1/2,1/2,0. 
        
          THE DEFAULT VALUE OF 'L' IS '1', SPECIFYING NO    
          NON-PRIMITVE LATTICE TRANSLATION.     
        
TX        UNIT CELL TRANSLATION ALONG THE X DIRECTION.  
        
TY        UNIT CELL TRANSLATION ALONG THE Y DIRECTION.  
        
TZ        UNIT CELL TRANSLATION ALONG THE Z DIRECTION.  
        
          THE UNIT CELL TRANSLATIONS ARE ADDED TO THE   
          COORDINATES AFTER THE 'S' AND 'L' OPERATIONS  
          HAVE BEEN PERFORMED.  
          THE TRANSLATIONS MAY BE POSITIVE OR   
          NEGATIVE, BUT MUST REFER TO COMPLETE  
          UNIT CELL SHIFTS.     
          THE DEFAULT VALUES FOR 'TX', 'TY' AND 'TZ'    
          ARE ALL ZERO, GIVING NO UNIT CELL TRANSLATIONS.   
        
#   
#PALTHOUGH THE FORMAT GIVEN ABOVE FOR THE DEFINITION OF AN ATOM 
 IS COMPLETE, IT IS SOMEWHAT CUMBERSOME AND MAY CONTAIN INFORMATION THAT
 IS ALREADY PROVIDED BY THE DEFAULT VALUES. 
 FOR SIMPLICITY THEREFORE, CERTAIN PARTS OF THE DEFINITION ABOVE
 ARE CONSIDERED TO BE OPTIONAL, WHILE THE REMAINDER 
 ARE CONSIDERED TO BE OBLIGATORY AND MUST ALWAYS BE PRESENT. THESE  
 NON-OPTIONAL PARTS ARE THE 'TYPE' AND 'SERIAL' WHICH IDENTIFY  
 THE ATOM IN THE CURRENT PARAMETER LIST.
 THE REMAINING PARAMETERS IN AN ATOM DEFINITION, 'S', 'L', 'TX', 'TY'   
 AND 'TZ', ARE OPTIONAL.
#PAN OPTIONAL PARAMETER WHICH CAN TAKE ITS DEFAULT VALUE
 MAY BE OMITTED FROM AN ATOM DEFINITION PROVIDED THAT ITS PRESENCE  
 IS INDICATED BY THE ',' THAT WOULD HAVE TERMINATED THE PARAMETER HAD   
 IT BEEN PRESENT.   
 FOR EXAMPLE, THE FOLLOWING ARE ALL EQUIVALENT :    
#J  
    
TYPE(SERIAL,1,1,0,0,0)  
    
TYPE(SERIAL,,,0,0,0)
    
TYPE(SERIAL,1,,,,0) 
    
TYPE(SERIAL,,,,,)   
    
#   
#PA FURTHER MODIFICATION IS ALSO POSSIBLE, ALLOWING PARAMETERS THAT     
 ARE TO BE GIVEN AS THEIR DEFAULT VALUES TO BE OMITTED AFTER THE LAST   
 PARAMETER THAT IS NOT TO BE GIVEN AS ITS DEFAULT VALUE.
 IF FOR EXAMPLE, 'TX' MUST HAVE A VALUE OF '1', THEN 'TY' AND 'TZ'  
 MAY BE OMITTED ENTIRELY IF THEIR DEFAULT VALUES ARE SUFFICIENT,
 BUT 'S' AND
 'L' MUST BE INDICATED EITHER BY A NUMBER FOLLOWED BY THE ',' OR
 BY THE ',' ALONE IF THE DEFAULT VALUE WILL SUFFICE.
 THE SIMPLEST WAY OF REPRESENTING THE EXAMPLE ABOVE IS THUS :   
#J  
    
TYPE(SERIAL)
    
#   
#PTHE VALUES OF 'S', 'L', 'TX', 'TY' AND 'TZ' ARE EXACTLY THOSE 
 OUTPUT AND USED BY THE DISTANCE ANGLES ROUTINES UNDER THE HEADINGS 
 'S(I)', 'L', 'T(X)', 'T(Y)' AND 'T(Z)' RESPECTIVELY.   
#Y2.    TYPE1(SERIAL1,S,L,TX,TY,TZ)  UNTIL  TYPE2(SERIAL2)# 
#PTHIS DEFINITION IS AN EXTENSION OF THE FIRST ONE ABOVE AND SPECIFIES ALL THE  
 ATOMS IN THE CURRENT LIST STARTING WITH THE ATOM OF TYPE 'TYPE1' AND SERIAL
 NUMBER 'SERIAL1' UP TO AND INCLUDING THE ATOM WITH TYPE 'TYPE2' AND
 SERIAL NUMBER 'SERIAL2'.   
 THE SECOND ATOM IN THE SPECIFICATION MUST BE AFTER THE FIRST ATOM  
 IN THE CURRENT PARAMETER LIST, 
 OTHERWISE AN ERROR MESSAGE WILL BE OUTPUT AND THE JOB TERMINATED.  
 THE SYMMETRY OPERATORS, WHEN THEY ARE USED, ARE APPLIED TO ALL 
 THE ATOMS IN THE GIVEN STRING. 
 THE SPECIFICATION SEQUENCE MUST BE TYPED EXACTLY AS SHOWN ABOVE, EXCEPT
 THAT THE DROP OUT RULES FOR 'S', 'L', 'TX', 'TY' AND 'TZ' DESCRIBED ABOVE  
 STILL APPLY.   
 THIS MEANS THAT THE SIMPLEST DEFINITION OF THIS TYPE IS :  
#J  
    
TYPE1(SERIAL1)  UNTIL  TYPE2(SERIAL2)   
    
#   
#YATOMIC PARAMETER SPECIFICATION#   
#PTHERE ARE TWO DIFFERENT WAYS IN WHICH ATOMIC PARAMETERS CAN BE DEFINED.   
 THESE ARE :
#Y1.    TYPE(SERIAL,S,L,TX,TY,TZ,KEY1,KEY2, . KEYN)#    
THIS IS ANALOGOUS TO DEFINITION NUMBER ONE FOR AN ATOM, 
 AND SPECIFIES THE PARAMETERS GIVEN BY 'KEY1', 'KEY2', ETC. 
 FOR ONE ATOM.  
 THE 'KEY'S ARE REGARDED AS 
 OBLIGATORY PARAMETERS, BUT FOR THE REMAINING   
 SYMMETRY PARAMETERS, THE SAME DROP 
 OUT RULES AND DEFAULT  
 SETTINGS DESCRIBED UNDER THE ATOM DEFINITION MAY BE    
 APPLIED, SO THAT THE SIMPLEST FORM OF  
 COORDINATE DEFINITION IS : 
#J  
    
TYPE(SERIAL,KEY)
    
#   
#Y2.    TYPE1(SERIAL1,S,L,TX,TY,TZ,KEY1, .) UNTIL TYPE2(SERIAL2)#   
THIS IS ANALOGOUS TO DEFINITION NUMBER TWO FOR AN ATOM, AND SPECIFIES   
 THE PARAMETERS GIVEN BY 'KEY1', 'KEY2', ETC. FOR THE   
 GROUP OF ATOMS FROM 'TYPE1(SERIAL1)' UP TO 
 AND INCLUDING 'TYPE2(SERIAL2)'.
 THE LATTER ATOM MUST OCCUR AFTER THE FIRST ATOM IN THE CURRENT PARAMETER LIST, 
 OR THE JOB 
 WILL BE TERMINATED, AFTER AN ERROR MESSAGE HAS BEEN PRINTED.   
 THE SYMMETRY OPERATORS, WHEN THEY ARE USED, ARE APPLIED TO ALL THE 
 ATOMS IN THE GIVEN STRING. 
 THE 'KEY'S ARE REGARDED AS OBLIGATORY PARAMETERS, BUT FOR THE REMAINING
 SYMMETRY PARAMETERS, THE SAME DROP 
 OUT RULES AND DEFAULT  
 SETTINGS DESCRIBED UNDER THE ATOM DEFINITION MAY BE    
 APPLIED, SO THAT THE SIMPLEST FORM OF  
 COORDINATE DEFINITION IS : 
#J  
    
TYPE(SERIAL,KEY)  UNTIL  TYPE2(SERIAL2) 
    
#   
#YFORMAT OF AN ATOM HEADER BLOCK#   
#PWHEN ANY OF THE ATOM DEFINITIONS GIVEN ABOVE IS PROCESSED, THE
 INFORMATION IS PLACED AT 'MQ' IN 'STORE' AND CALLED AN 
 'ATOM HEADER BLOCK'.   
 ('MQ' IS IN THE COMMON BLOCK /XWORK/). 
 THE FORMAT OF THE HEADER BLOCK FORMED AT 'MQ' IS AS FOLLOWS :  
#J  
    
 0   LINK    CORE ADDRESS OF THE NEXT ATOM HEADER BLOCK 
             OR -1000000.   
 1   TYPE    THE TYPE OF ATOM HEADER BLOCK FOUND :  
             0  THE HEADER BLOCK FOR A SINGLE ATOM. 
             1024  THE FIRST ATOM OF AN 'UNTIL' SEQUENCE.   
 2   TYPE    THE ATOM TYPE IN CHARACTERS (A4 FORMAT).   
 3   SERIAL  THE ATOM SERIAL NUMBER (FLOATING POINT NUMBER).
 4   IADD2   INITIALLY SET TO -1000000, AND RESET TO THE ADDRESS
             OF THE MATRIX 'S' IN LIST 2 BY 'KATOMS'.   
 5   NPAR    NUMBER OF ATOMIC PARAMETERS GIVEN. 
 6   IADD    CORE ADDRESS OF THE ATOMIC PARAMETER CHAIN RELATIVE
             TO 'MQ' OR -1000000 IF NO PARAMETERS ARE PRESENT.  
 7   IS      'S' STORED AS AN INTEGER.  
 8   L       'L' STORED AS AN INTEGER.  
 9   ITX     'TX' STORED AS AN INTEGER. 
10   ITY     'TY' STORED AS AN INTEGER. 
11   ITZ     'TZ' STORED AS AN INTEGER. 
12   IADD5   INITIALLY SET TO -1000000, AND RESET TO THE ADDRESS
             OF THE ATOM IN LIST 5 BY 'KLOADR'. 
13   IADD12  SET INITIALLY TO -1000000, AND RESET TO THE ADDRESS OF THE 
             GROUP HEADER FOR THIS ATOM IN LIST 12 BY 'KLOADR'. 
14   CENTRE  SET INITIALLY TO -1000000, AND RESET TO 1.0 OR -1.0 DEPENDING  
             UPON THE SIGN OF 'IS' BY 'KATOMS'. 
15   -       NOT USED HERE, AND SET TO -1000000.
16   -       NOT USED HERE, AND SET TO -1000000.
    
#   
IF ATOMIC PARAMETERS ARE GIVEN IN THE DEFINITION, THEY ARE PLACED ON A CHAIN
 WHICH IS ADDRESSED VIA WORDS 5 AND 6 OF THE ATOM HEADER BLOCK. 
 EACH ENTRY ON THE ATOMIC PARAMETER CHAIN HAS THE FORMAT :  
#J  
    
 0   LINK    CORE ADDRESS OF THE NEXT PARAMETER ENTRY RELATIVE  
             TO 'MQ' OR -1000000.   
 1   IPOS    THE POSITION OF THIS ATOMIC PARAMETER IN THE   
             ATOMIC PARAMETER KEY LIST. THESE NUMBERS START 
             FROM 1, AND ARE DEFINED IN THE NEXT SECTION.   
 2   -       NOT SET HERE.  
    
#   
#YFUNCTION KATOMG(NWARG,IARG,NARG,NSARG)#   
#PTHE FIRST ROUTINE IN THIS CHAPTER PROCESSES THE CURRENT   
 ARGUMENT LIST AS DEFINED BY 'ME' AND 'MF' TO PRODUCE A SINGLE  
 STANDARD ATOM HEADER TOGETHER WITH ITS ASSOCIATED PARAMETER
 CHAIN IF NECESSARY.
 THE ATOMIC PARAMETERS THAT ARE PUT IN THE CHAIN ARE DEFINED
 BY A SET OF KEYS WHEN THE FUNCTION IS CALLED : 
#J  
    
      . 
C--PROCESS THE NEXT ARGUMENTS TO PRODUCE THE ATOM HEADER
      I=KATOMG(NWARG,IARG,NARG,NSARG)   
      . 
    
WHERE : 
    
NWARG   LENGTH OF EACH ATOMIC PARAMETER KEY IN WORDS.   
IARG    ARRAY HOLDING THE ATOMIC PARAMETER KEYS. THESE ARE  
        SET UP IN CHARACTERS, 4 PER WORD IN A4 FORMAT.  
NARG    THE NUMBER OF ATOMIC PARAMETER KEYS IN 'IARG'.  
NSARG   THE NUMBER OF WORDS BETWEEN SUCCESSIVE ATOMIC PARAMETER 
        KEYS. (THIS MAY OR MAY NOT BE EQUAL TO 'NWARG').
    
THE RETURN VALUES OF 'KATOMG' ARE : 
    
<0      THE CURRENT ARGUMENTS CANNOT BE FORMED INTO A CORRECT   
        ATOM DEFINITION. (NO DIAGNOSTIC MESSAGES ARE PRODUCED BY
        THIS ROUTINE IN THIS CASE). 
>0      AN ATOM HEADER HAS BEEN FORMED AT 'MQ', AND 'KATOMG' NOW
        INDICATES THE NEXT ADDRESS AFTER ALL THE INFORMATION
        THAT HAS BEEN STORED FOR THIS HEADER BLOCK. 
    
#   
LIKE 'KSYNUM' ABOVE, THIS FUNCTION DOES NOT CHECK 'ME' AT THE   
 START TO SEE THAT THERE ARE SOME ARGUMENTS LEFT ON THE CARD, AND IT
 LEAVES 'ME' AND 'MF' POINTING TO THE LAST ARGUMENT PROCESSED   
 RATHER THAN THE NEXT ONE TO BE PROCESSED.  
#PTHE VALUES STORED IN THE ATOMIC PARAMETER CHAIN REFLECT THE POSITION  
 OF THE PARAMETERS IN THE ARGUMENT LIST 'IARG'. 
 CONVENTIONALLY, THE VALUES STORED IN THE   
 COMMON BLOCK 'XAPK' ARE USED : 
#J  
    
      . 
C--USE THE CONVENTIONAL KEY DEFINITIONS 
      COMMON/XAPK/NWARG,NARG,NSARG,IARG(2,13)   
      . 
    
WHERE : 
    
NWARG   THE NUMBER OF WORDS PER KEY.
NARG    THE NUMBER OF KEYS. 
NSARG   THE NUMBER OF WORDS BETWEEN SUCCESSIVE KEYS IN 'IARG'.  
IARG    THE ARRAY HOLDING THE CHARACTER REPRESENTATION OF THE   
        KEYS IN A4 FORMAT, 4 CHARACTERS PER WORD.   
    
#   
THE NORMAL VALUES STORED IN THIS COMMON BLOCK, TOGETHER 
 WITH THEIR MEANINGS ARE :  
#J  
    
VALUE   KEY          PARAMETER  
    
   1   TYPE       ATOM TYPE 
   2   SERIAL     ATOM SERIAL NUMBER
   3   OCC        SITE OCCUPANCY
   4   U[ISO]     ISOTROPIC TEMPERATURE FACTOR  
   5   X          X 
   6   Y          Y 
   7   Z          Z 
   8   U[11]      U(11) 
   9   U[22]      U(22) 
  10   U[33]      U(33) 
  11   U[23]      U(23) 
  12   U[13]      U(13) 
  13   U[12]      U(12) 
    
#   
AS WELL AS THE PARAMETERS DEFINED ABOVE, THREE ADDITIONAL PARAMETER 
 DEFINITIONS ARE ALWAYS KNOWN TO 'KATOMG'.  
 THESE ARE :
#J  
    
U'S     THIS REFERS TO ALL THE ANISOTROPIC TEMPERATURE FACTORS  
        AND IS EXPANDED TO :
    
        U[11],U[22],U[33],U[23],U[13],U[12] 
    
        THE VALUES FOR 'IPOS' IN THE PARAMETER CHAIN RUN FROM   
        8 TO 13 FOR THESE PARAMETERS RESPECTIVELY.  
UII'S   THIS IS ALSO A SHORTENED FORM WHICH IS EXPANDED TO :
    
        U[11],U[22],U[33]   
    
        THE VALUES OF 'IPOS' IN THIS CASE RUN FROM 8 TO 10. 
UIJ'S   THIS IS ALSO A SHORTENED FORM WHICH IS EXPANDED TO :
    
        U[23],U[13],U[12]   
    
        THE VALUES OF 'IPOS' IN THIS CASE RUN FROM 11 TO 13.
    
#   
THESE VARIABLES ARE SET UP IN THE COMMON BLOCK 'XUIJS' WHICH HAS
 THE FOLLOWING FORMAT : 
#J  
    
      COMMON/XUIJS/NWUS,NUS,LUS,MUS(2,3)
    
WHERE : 
    
NWUS    THE NUMBER OF WORDS PER ENTRY.  
NUS     THE NUMBER OF ENTRIES (=3). 
LUS     THE NUMBER OF WORDS BETWEEN SUCCESSIVE ENTRIES. 
MUS     THE ARRAY HOLDING THE ENTRIES, 4 CHARACTERS PER 
        WORD, A4 FORMAT.
    
#   
#YFUNCTION KATOMH(NWARG,IARG,NARG,NSARG)#   
#PTHE SECOND FUNCTION IN THIS SECTION USES 'KATOMG' TO PRODUCE A SINGLE ATOM
 HEADER AT 'MQ'.
 THE ARGUMENTS IN THE CALL AND THE OUTPUT PRODUCED AT 'MQ' ARE EXACTLY THE  
 SAME AS THOSE FOR 'KATOMG'.
 HOWEVER, THIS FUNCTION CHECKS FOR THE END OF THE CARD IMAGE BEFORE 
 CALLING 'KATOMG', AND LEAVES 'ME' AND 'MF' POINTING TO THE NEXT
 ARGUMENT TO BE PROCESSED AFTER A SUCCESSFUL CALL.  
 THE RETURN VALUES FOR 'KATOMH' ARE :   
#J  
    
-1      END OF CARD FOUND AT THE START. 
 0      THE CURRENT ARGUMENTS CANNOT BE FORMED INTO A CORRECT   
        ATOM DEFINITION. (NO DIAGNOSTIC MESSAGES ARE PRODUCED BY THIS   
        FUNCTION CALL). 
>0      AN ATOM HEADER HAS BEEN PRODUCED, AND 'KATOMH' NOW INDICATES THE
        NEXT ADDRESS AFTER ALL THE INFORMATION STORED AT 'MQ'.  
    
#   
#YFUNCTION KATOMU(IN)#  
#PTHE THIRD FUNCTION IN THIS SECTION USES 'KATOMH' TO PRODUCE ONE   
 OR MORE LINKED ATOM HEADERS AS REQUIRD FOR AN 'UNTIL' SEQUENCE.
 THE CALL MIGHT APPEAR AS : 
#J  
    
      . 
C--CHECK THE NEXT ARGUMENTS FOR ONE OR MORE ATOM HEADERS
      I=KATOMU(IN)  
      . 
    
WHERE : 
    
IN      A DUMMY ARGUMENT.   
    
THE RETURN VALUES OF 'KATOMU' ARE : 
    
-1      END OF CARD AT THE START.   
 0      THE CURRENT ARGUMENTS CANNOT BE FORMED INTO A CORRECT   
        SET OF ATOM DEFINITIONS, OR THE ATOMS CANNOT BE FOUND   
        IN LIST 5 IF THIS IS REQUIRED. A SUITABLE DIAGNOSTIC
        MESSAGE IS PRINTED IN THIS CASE.
>1      ONE OR MORE ATOM HEADERS HAVE BEEN PRODUCED, AND 'KATOMU'   
        NOW INDICATES THE NEXT ADDRESS AFTER THE INFORMATION
        STORED AT 'MQ'. 
    
#   
THIS FUNCTION WILL PROCESS ONE ATOM DEFINITION, OR TWO ATOM DEFINITIONS 
 LINKED BY 'UNTIL'. 
 IF 'UNTIL' IS FOUND, THE LINK WORD (WORD 0) OF THE FIRST ATOM HEADER   
 AT 'MQ' CONTAINS THE ABSOLUTE CORE ADDRESS OF THE SECOND ATOM HEADER, AND  
 WORD 1 IS SET TO 1024. 
 IN COMMON WITH 'KATOMH', THIS FUNCTION CHECKS FOR THE END OF THE CARD  
 IMAGE AT THE START, AND LEAVES 'ME' AND 'MF' POINTING TO THE   
 NEXT ARGUMENT TO BE PROCESSED. 
 THE ATOMIC PARAMETER KEYS REQUIRED BY 'KATOMH' ARE TAKEN FROM THE  
 COMMON BLOCK 'XAPK' DEFINED ABOVE. 
#PAS WELL AS PROCESSING AN 'UNTIL' SEQUENCE, THIS ROUTINE CAN ALSO LOCATE   
 THE GIVEN ATOMS IN LIST 5. 
 BEFORE THIS OPTION CAN BE USED, THEREFORE, LIST 5 MUST HAVE BEEN LOADED
 INTO CORE, AND THE FOLLOWING VARIABLES IN THE COMMON BLOCK 'XLST05' SET :  
#J  
    
L5      ADDRESS IN CORE OF THE FIRST WORD OF THE FIRST ATOM.
MD5     NUMBER OF WORDS PER ATOM.   
N5      NUMBER OF ATOMS.
MD5A    NUMBER OF WORDS PER ATOM (=MD5).
    
#   
THESE VARIABLES ARE ALL SET WHEN 'XFAL05' IS CALLED TO LOAD LIST 5 FROM THE DISC,   
 AND THE FORMAT OF THE COMMON BLOCK 'XLST05' IS :   
#J  
    
      COMMON/XLST05/L5,M5,MD5,N5,L5A,M5A,MD5A,N5A,L5S,M5S,MD5S,N5S,     
     2 L5O,M5O,MD5O,N5O,L5AK,M5AK,MD5AK,N5AK,L5OK,M5OK,MD5OK,N5OK,      
     3 HKL5(4),L5LS,M5LS,MD5LS,N5LS,L5ES,M5ES,MD5ES,N5ES                
    
#   
'KATOMU' SETS THE ADDRESS OF THE FIRST ATOM FOUND IN 'M5A', AND THE NUMBER  
 OF ATOMS FOUND IN 'N5A'.   
 WORD 12 OF THE HEADER BLOCK, HOWEVER, IS NOT SET TO THE ADDRESS
 OF THE ATOM IN LIST 5 BY THIS ROUTINE. 
#PAS WELL AS FINDING THE ATOMS IN LIST 5, 'KATOMG' CAN ALSO FIND
 THE ADDRESS OF THE GROUP HEADER FOR THE GIVEN ATOMS IN LIST 12.
 IF THIS OPTION IS REQUIRED, LIST 22 MUST HAVE BEEN LOADED FROM THE 
 DISC INTO CORE AS EITHER A LIST 12 OR A LIST 22.   
 THE FOLLOWING VARIABLE IN THE COMMON BLOCK 'XLST12' MUST BE SET :  
#J  
    
L12     ADDRESS OF THE GROUP HEADER FOR THE FIRST ATOM. 
    
#   
THIS VARIABLE IS SET WHEN 'XFAL12' AND 'XFAL22' ARE USED TO LOAD
 LIST 22 INTO STORE.
 THE COMMON BLOCK 'XLST12' HAS THE FORMAT : 
#J  
    
      COMMON/XLST12/L12,M12,MD12,N12,L12A,M12A,MD12A,N12A,              
     2 L12O,M12O,MD12O,N12O,L12B,M12B,MD12B,N12B,                       
     3 L12LS,M12LS,MD12LS,N12LS,L12ES,M12ES,MD12ES,N12ES                
    
#   
'KATOMU' SETS 'L12A' TO THE ADDRESS OF THE GROUP HEADER FOR THE FIRST   
 ATOM FOUND.
 WORD 13 OF THE HEADER BLOCK, HOWEVER, IS NOT SET TO THE ADDRESS OF 
 THE GROUP HEADER IN LIST 12.   
#YFUNCTION KATOMF(ATOM,M5,N5,MD5,M12)#  
#PTHIS FUNCTION SEARCHES LIST 5 AND OPTIONALLY LIST 12 FOR THE ATOM 
 GIVEN BY 'ATOM'.   
 THIS ROUTINE IS USED BY 'KATOMU' ONCE IT HAS ASSEMBLED THE HEADER  
 BLOCKS.
#J  
    
      . 
C--SEARCH FOR THE ATOM IN LIST 5
      I=KATOMF(ATOM,M5,N5,MD5,M12)  
      . 
    
WHERE : 
    
ATOM    AN ARRAY CONTAINING THE ATOM TYPE AND SERIAL OF THE ATOM TO 
        BE FOUND, IN THE FOLLOWING FORMAT : 
    
        ATOM(1)   THE ATOM TYPE IN CHARACTERS A4 FORMAT.
        ATOM(2)   THE ATOM SERIAL NUMBER AS A FLOATING POINT NUMBER.
    
M5      ADDRESS IN 'STORE' AT WHICH TO BEGIN THE SEARCH IN LIST 5.  
        THE ATOMS AT 'M5' ONWARDS ARE ASSUMED TO BE IN THE FORMAT : 
    
        M5     TYPE OF THE FIRST ATOM.  
        M5+1   SERIAL NUMBER OF THE FIRST ATOM  
        .   
        .   
        M5+MD5 TYPE OF THE SECOND ATOM. 
        .   
    
        UPON RETURN,'M5' CONTAINS THE ADDRESS OF THE ATOM THAT  
        HAS BEEN FOUND, IF THE SEARCH IS SUCCESSFUL.
N5      THE NUMBER OF ATOMS THROUGH WHICH THE SEARCH SHOULD BE MADE.
        UPON RETURN, THIS PARAMETER IS SET TO THE NUMBER OF ATOMS   
        LEFT IN THE LIST PLUS ONE. ('M5' AND 'N5' POINT TO THE  
        ATOM THAT HAS BEEN FOUND, AND ARE CORRECTLY POSITIONED FOR THE  
        SEARCH TO BE RESUMED AT THIS POINT).
MD5     NUMBER OF WORDS PER ATOM.   
M12     THIS PARAMETER SHOULD BE SET TO THE ADDRESS OF THE GROUP HEADER 
        IN LIST 12 CORRESPONDING TO THE ATOM AT 'M5'. UPON RETURN, 'M12'
        POINTS TO THE GROUP HEADER FOR THE ATOM THAT HAS BEEN FOUND.
        IF 'M12' IS LESS THAN ZERO WHEN 'KATOMF' IS CALLED, HOWEVER,
        LIST 12 IS NOT SEARCHED, AND 'M12' IS NOT UPDATED.  
    
THE RETURN VALUES FOR 'KATOMF' ARE :
    
-1      THE ATOM CANNOT BE FOUND.   
 0      THE ATOM HAS BEEN FOUND, AND IS POINTED TO BY 'M5', ETC.
    
#   
#YSUBROUTINE XNOTL5(IADD)#  
#PTHIS SUBROUTINE PRINTS AND ERROR MESSAGE INDICATING THAT A REQUESTED  
 ATOM IS NOT IN LIST 5. 
 'KATOMU' USES THIS ROUTINE IF 'KATOMF' FAILS TO FIND AN ATOM.  
#J  
    
CALL XNOTL5(IADD) : ATOM NOT IN LIST 5  
    
WHERE : 
    
IADD    THE ADDRESS IN 'STORE' OF THE ATOM THAT CANNOT BE FOUND,
        IN THE FOLLOWING FORMAT :   
    
        IADD     ATOM TYPE IN CHARACTERS.   
        IADD+1   ATOM SERIAL NUMBER AS A FLOATING POINT NUMBER. 
    
#   
#YSUBROUTINE XPRTCO(ITYPE,IADD,IPARAM)# 
#PTHIS SUBROUTINE PRINTS VARIOUS COMBINATIONS OF ATOM TYPE, ATOM SERIAL 
 NUMBER AND ATOMIC PARAMETER.   
 THIS ROUTINE IS USED BY 'XNOTL5' TO PRINT THE ATOM THAT HAS NOT BEEN   
 FOUND, AFTER THE MESSAGE TO THAT EFFECT HAS BEEN PRINTED.  
#J  
    
      . 
C--PRINT THE MISSING ATOM   
      CALL XPRTCO(ITYPE,IADD,IPARAM)
      . 
    
WHERE : 
    
ITYPE   THIS PARAMETER DETERMINES THE AMOUNT OF INFORMATION PRODUCED,   
        AND TAKES THE FOLLOWING VALUES :
    
        1   PRINT ONLY THE ATOM TYPE (IN CHARACTERS A4 FORMAT). 
        2   PRINT THE ATOM TYPE AND ATOM SERIAL NUMBER (FLOATING
            POINT NUMBER).  
        3   PRINT THE ATOM TYPE, ATOM SERIAL NUMBER AND THE PARAMETER   
            DEFINED BY 'IPARAM' (IN CHARACTERS A4 FORMAT).  
        4   PRINT ONLY THE PARAMETER DEFINED BY 'IPARAM'.   
    
IADD    THE ADDRESS OF THE ATOM TYPE AND SERIAL NUMBER IN 'STORE' : 
    
        IADD     ATOM TYPE. 
        IADD+1   SERIAL NUMBER. 
    
IPARAM  THIS PARAMETER IS NOT USED UNLESS 'ITYPE' IS GREATER THAN 2,
        AND DEFINES THE PARAMETER TO BE PRINTED. THE VALUES OF  
        'IPARAM' ARE THOSE DEFINED UNDER THE SECTION ON 'KATOMG'
        AND THE HOLERITH CONSTANTS ARE TAKEN FROM THE COMMON
        BLOCK 'XAPK'.   
    
#   
#ZGENERATING SYMMETRY RELATED ATOMIC PARAMETERS#
#YINTRODUCTION# 
#PTHE SET OF ROUTINES DESCRIBED IN THIS CHAPTER DERIVE THE SYMMETRY 
 RELATED PARAMETERS OF AN ATOM FROM THE COORDINATES STORED IN LIST 5
 AND THE SYMMETRY INFORMATION STORED IN AN ATOM HEADER. 
 THE LOCATIONS IN AN ATOM HEADER THAT ARE USED ARE AS FOLLOWS : 
#J  
    
 4   IADD2   SET BY 'KATOMS' TO THE ADDRESS IN 'STORE' OF THE SYMMETRY  
             MATRIX IN LIST 2 GIVEN BY 'IS'.
 7   IS      THE SYMMETRY MATRIX FLAG.  
 8   L       THE NON-PRIMTIVE LATTICE TRANSLATION FLAG. 
 9   ITX     THE NUMBER OF UNIT CELLS TO TRANSLATE ALONG X. 
10   ITY     THE NUMBER OF UNIT CELLS TO TRANSLATE ALONG Y. 
11   ITZ     THE NUMBER OF UNIT CELLS TO TRANSLATE ALONG Z. 
14   CENTRE  SET BY 'KATOMS' TO 1.0 OR -1.0 DEPENDING UPON  
             THE SIGN OF 'IS'.  
    
#   
ALL THE OTHER WORDS IN THE HEADER BLOCK APART FROM THOSE ABOVE ARE IGNORED  
 BY THE ROUTINES DESCRIBED IN THIS CHAPTER. 
#PBEFORE THE SYMMETRY INFORMATION CAN BE APPLIED, THE INFORMATION FOR LIST 2
 MUST BE LOADED FROM THE DISC.  
 THE FOLLOWING SEQUENCE OF CALLS CAN BE USED :  
#J  
    
      . 
C--LOAD THE SYMMETRY INFORMATION IN LIST 2  
      CALL XFAL02   
C--GENERATE THE NON-PRIMITIVE LATTICE TRANSLATIONS  
      CALL XFNPLT   
C--GENERATE THE INVERSE SYMMETRY OPERATORS FROM THOSE ALREADY IN CORE   
      CALL XFIL02   
      . 
    
#   
'XFIL02' NEED ONLY BE CALLED WHEN 'KATOMT' IS TO BE USED.   
#YFUNCTION KATOMS(IHEAD,IATOM1,IATOM2)# 
#PTHIS FUNCTION APPLIES THE SYMMETRY INFORMATION STORED IN THE ATOM 
 HEADER AT 'IHEAD' TO THE ATOM AT 'IATOM1' AND OUTPUT A COMPLETE
 SET OF SYMMETRY RELATED PARAMETERS AT 'IATOM2' :   
#J  
    
      . 
C--GENERATED THE NECESSARY SYMMETRY RELATED SET OF COORDINATES  
      I=KATOMS(IHEAD,IATOM1,IATOM2) 
C--TEST THE REPLY   
      . 
    
WHERE : 
    
IHEAD   ADDRESS IN 'STORE' OF THE ATOM HEADER BLOCK CONTAINING  
        THE SYMMETRY INFORMATION.   
IATOM1  ADDRESS IN STORE OF THE  INPUT SET OF ATOMIC PARAMETERS.
        THE PARAMETERS MUST OCCUR IN THE ORDER DEFINED IN THE COMMON
        BLOCK 'XAPK', AND 'MD5' MUST BE SET TO THE NUMBER OF
        WORDS PER ATOM. 
IATOM2  ADDRESS IN STORE AT WHICH TO PLACE THE NEWLY FORMED ATOMIC  
        PARAMETERS. 
    
THE RETURN VALUES OF 'KATOMS' ARE : 
    
-1      ERROR IN FORMING THE GENERATED PARAMETERS. (AN ERROR
        MESSAGE WILL HAVE BEEN OUTPUT BEFORE THE FUNCTION RETURNS). 
>0      ADDRESS IN 'STORE' OF THE NEXT WORD AFTER THE GENERATED ATOM.   
        (THE INCREMENT IS FOUND IN 'MD5').  
    
#   
THIS ROUTINE TRANSFORMS BOTH THE POSITIONAL AND THERMAL PARAMETERS  
 OF THE GIVEN ATOM, AND MOVES ACROSS ANY OTHER UNCHANGING PARTS SUCH
 AS THE TYPE, SERIAL ETC.   
 DURING THE TRANSFORMATION OF THE ANISOTROPIC TEMPERATURE FACTORS, THIS 
 ROUTINE REQUIRES 27 WORDS OF WORK SPACE.   
 THIS IS TAKEN FROM 'NFL' ONWARDS, SO THAT ANY INFORMATION STORED IN THIS AREA  
 WILL BE DESTROYED BY A CALL TO THIS FUNCTION.  
 (THE FUNCTION DOES CHECK THAT SUFFICIENT CORE IS AVAILABLE  -  THIS
 MUST BE DONE BY THE CALLING ROUTINE).  
#PTHIS ROUTINE SETS WORDS 4 AND 14 OF THE ATOM HEADER BLOCK AS IT   
 PRODUCES THE NEW PARAMETERS.   
 THE VALUES OF 'IS' AND 'L' ARE CHECKED AS THEY ARE USED TO ENSURE THAT 
 THEY FALL IN THE RANGE ALLOWED BY LIST 2.  
 IF 'IS' IS NEGATIVE, A CENTRE OF SYMMETRY IS ASSUMED AT THE ORIGIN, AND
 THE SYMMETRY OPERATORS ARE APPLIED IN THE ORDER :  
#J  
    
1.   CENTRE OF SYMMETRY IF NECESSARY ('IS'<0).  
2.   MATRIX AND TRANSLATIONS DEFINED BY 'IABS(IS)'. 
3.   NON-PRIMITIVE LATTICE TRANSLATIONS GIVEN BY 'L'.   
4.   UNIT CELL TRANSLATIONS DEFINED BY 'ITX', 'ITY' AND 'ITZ'.  
    
#   
IF ANY OF THE SYMMETRY OPERATORS ARE ILLEGAL, AN ERROR MESSAGE IS   
 PRINTED WHICH INCLUDES THE ATOM TYPE AND SERIAL NUMBER OF THE  
 ATOM TO BE BE MOVED, AND THE ERROR RETURN IS USED. 
 IF 'ISTAT2' IN THE COMMON BLOCK 'XSYS' IS GREATER THAN ZERO, THIS ROUTINE  
 PRINTS THE GENERATED PARAMETERS USING THE SUBROUTINE IN THE NEXT   
 SECTION.   
#YSUBROUTINE XPRTGC(IADD)#  
#PTHIS SUBROUTINE PRINTS AT SET OF ATOMIC PARAMETERS ON ONE LINE
 OF LINE PRINTER PAPER. 
 THE ORDER OF THE ATOMIC PARAMETERS IS ASSUMED TO BE THAT DEFINED BY THE
 COMMON BLOCK 'XAPK', AND A CALL MIGHT BE : 
#J  
    
      . 
C--PRINT THE NEWLY GENERATED PARAMETERS 
      CALL XPRTGC(IADD) 
      . 
    
WHERE : 
    
IADD    THE ADDRESS IN 'STORE' OF THE ATOM WHOSE PARAMETERS ARE TO BE   
        PRINTED.
#   
#YFUNCTION KATOMT(IHEAD,IATOM1,IATOM2)# 
#PTHIS IS THE SECOND MAJOR ROUTINE IN THIS SECTION. 
 THIS ROUTINE APPLIES THE INVERSE SYMMETRY OPERATORS DEFINED IN AN  
 ATOM HEADER.   
 THE ARGUMENTS AND RETURN VALUES ARE IDENTICAL TO THOSE FOR 'KATOMS'.   
 THE SYMMETRY OPERATORS ARE APPLIED IN EXACTLY THE OPPPOSITE ORDER  
 TO THOSE FOR 'KATOMS', SO THAT 'KATOMT' WILL GENERATE THE ORIGINAL 
 SET OF PARAMETERS FOR AN ATOM AFTER 'KATOMS' HAS BEEN CALLED.  
#PLIKE 'KATOMS' THIS ROUTINE REQUIRES 27 WORDS OF STORE FROM
 'NFL' ONWARDS. 
 UNLIKE 'KATOMS', HOWEVER, 'KATOMT' DOES NOT CHECK TO ENSURE THAT THE VALUES
 OF 'IS' AND 'L' ARE ALLOWED BY LIST 2, NOR DOES IT UPDATE WORDS 4 AND  
 14 OF THE ATOM HEADER. 
 THE INVERSE OPERATORS FOR THE SYMMETRY ELEMENTS ARE LOADED BY 'XFIL02' 
 WHICH MUST BE CALLED BEFORE 'KATOMT' IS CALLED.
#YSUBROUTINES XEXANI AND XCOANI#
#PTHESE TWO SUBROUTINES ARE USED BY THE FUNCTIONS 'KATOMS' AND 'KATOMT' 
 TO EXPAND AND CONTRACT THE ANISOTROPIC TEMPERATURE FACTORS OF AN ATOM  
 TO AND FROM MATRIX FORM.   
 THESE ROUTINES HAVE THE SAME ARGUMENTS AND CALLED BY : 
#J  
    
      . 
C--EXPAND THE THERMAL PARAMETERS TO MATRIX FORM 
      CALL XEXANI(IATOM,MATRIX) 
C--ALTER THE THERMAL PARAMETERS 
      . 
      . 
C--CONVERT THE NEW MATRIX BACK TO THE 6 UNIQUE ELEMENTS FOR AN ATOM 
      CALL XCOANI(MATRIX,IHEAD) 
      . 
    
WHERE : 
    
IATOM   ADDRESS IN 'STORE' OF THE FIRST THERMAL PARAMETER OF AN ATOM.   
        THESE MUST BE IN THE ORDER U(11), U(22),U(33), U(23), U(13) 
        AND U(12).  
MATRIX  ADDRESS OF THE FIRST ELEMENT OF THE 3 BY 3 THERMAL  
        TENSOR DERIVED FROM THE THEMAL PARAMETERS OF THE ATOM.  
    
#   
'XEXANI' EXPANDS THE THERMAL PARAMETERS TO THE MATRIX FORM, WHILE   
 'XCOANI' PERFORMS THE OPPOSITE OPERATION.  
#ZPROCESSING ISOLATED ATOMIC PARAMETER KEYS#
#YINTRODUCTION# 
#PIN MANY CASES, IT IS CONVENIENT TO INDICATE A PARAMETER FOR ALL THE   
 ATOMS IN LIST 5.   
 THIS IS DONE BY GIVING ONLY THE RELEVANT KEY, AND A FUNCTION IS PROVIDED   
 TO SET UP A DUMMY ATOM HEADER BLOCK FOR SUCH A SITUATION.  
 THIS HEADER BLOCK CAN THEN BE USED IN THE NORMAL WAY, FOR EXAMPLE WITH 
 'KATOMS'.  
#YFORMAT OF AN ATOMIC PARAMETER HEADER BLOCK#   
#PTHE FORMAT OF THE HEADER BLOCK PRODUCED FROM AN ATOMIC PARAMETER KEY  
 IS RELATED TO THAT FOR AN ATOM.
 LIKE THE ATOM HEADERS, THE ATOMIC PARAMETER HEADER BLOCKS ARE  
 SET UP AT 'MQ' IN STORE, AND HAVE THE FOLLOWING FORMAT :   
#J  
    
 0   LINK    CORE ADDRESS OF THE NEXT HEADER BLOCK  
             OR -1000000.   
 1   -       NOT DEFINED.   
 2   -       NOT DEFINED.   
 3   -       NOT DEFINED.   
 4   -       NOT DEFINED.   
 5   NPAR    NUMBER OF ATOMIC PARAMETERS GIVEN. 
 6   IADD    CORE ADDRESS OF THE ATOMIC PARAMETER CHAIN RELATIVE
             TO 'MQ'.   
 7   IS      'S' STORED AS AN INTEGER (SET TO 1).   
 8   L       'L' STORED AS AN INTEGER (SET TO 1).   
 9   ITX     'TX' STORED AS AN INTEGER (SET TO 0).  
10   ITY     'TY' STORED AS AN INTEGER (SET TO 0).  
11   ITZ     'TZ' STORED AS AN INTEGER (SET TO 0).  
12   -       NOT DEFINED.   
13   -       NOT DEFINED.   
14   -       NOT DEFINED.   
15   -       NOT DEFINED.   
16   -       NOT DEFINED.   
    
#   
THE ATOMIC PARAMETER CHAIN WHICH STARTS AT THE ADDRESS GIVEN IN 
 WORD 7 IS STANDARD.
#YFUNCTION KCORCH(IN)#  
#PTHIS FUNCTION PROCESSES THE CURRENT ARGUMENT LIST TO PRODUCE A
 STANDARD ATOMIC PARAMETER HEADER.  
#J  
    
      . 
C--READ THE NEXT ATOMIC PARAMETER KEY   
      I=KCORCH(IN)  
      . 
    
WHERE : 
    
IN      A DUMMY ARGUMENT.   
    
THE RETURN VALUES OF 'KCORCH' ARE : 
    
-1      END OF CARD FOUND AT THE START. 
 0      THE CURRENT ARGUMENT IS NOT AN ATOMIC PARAMETER.
        (THIS ROUTINE PRODUCES NO ERROR MESSAGES).  
>0      ADDRESS OF THE NEXT WORD IN 'STORE' AFTER THE PARAMETER HEADER  
        BLOCK AND ITS ASSOCIATED CHAIN. 
    
#   
LIKE 'KATOMU', THIS ROUTINE CHECKS FOR THE END OF THE CARD AT THE START,
 AND LEAVES 'ME' AND 'MF' POINTING TO THE NEXT ARGUMENT 
 TO BE PROCESSED.   
 'M5A', 'N5A' AND 'L12A' ARE SET BY THIS ROUTINE TO INCLUDE ALL THE 
 ATOMS IN LIST 5 AND LIST 12.   
 (SINCE THESE VARIABLES ARE ALWAYS SET, 'L5', 'N5' AND 'L12' MUST BE
 ASSIGNED SOME VALUE BEFORE 'KCORCH' IS CALLED, EVEN IF IT IS ONLY  
 -1).   
 THE ATOMIC PARAMETER KEYS ARE TAKEN FROM THE COMMON BLOCKS 'XAPK'  
 AND 'XUIJS' DEFINED ABOVE. 
#ZPROCESSING OF OVERALL PARAMETERS# 
#YINTRODUCTION# 
#PTHE ROUTINE DESCRIBED IN THIS CHAPTER CHECKS THE CURRENT SET  
 OF ARGUMENTS DEFINED BY 'ME' AND 'MF' TO SEE IF ONE OR MORE
 OVERALL PARAMETERS HAVE BEEN GIVEN.
 THE OUTPUT FROM THIS ROUTINE DOES NOT CONSIST OF A HEADER  
 BLOCK, BUT MERELY A SET OF POINTERS TO THE OVERALL PARAMETER OR
 PARAMETERS THAT HAVE BEEN FOUND.   
#YOVERALL PARAMETER DEFINITION# 
#POVERALL PARAMETERS, APART FROM THE LAYER SCALE FACTORS AND THE
 ELEMENT SCALE FACTORS, ARE SPECIFIED  SIMPLY BY THEIR KEYS.
 THE FOLLOWING OVERALL PARAMETER KEYS MAY BE GIVEN :
#J  
    
SCALE   
OU[ISO] 
DU[ISO] 
EXTPARAM
    
#   
#PTHE LAYER SCALE FACTORS AND THE ELEMENT SCALE FACTORS MAY BE  
 GIVEN IN THREE DIFFERENT WAYS. 
#Y1.    LAYER(M)   OR   ELEMENT(M)# 
 THIS INDICATES ONLY SCALE FACTOR 'M' OF THE SPECIFIED TYPE.
 'M' MUST BE IN THE CORRECT RANGE, WHICH FOR 'N' LAYER SCALE FACTORS
 IS 0 TO 'N-1', AND FOR 'N' ELEMENT SCALE FACTORS IS
 1 TO N.
#Y2.    LAYER(P) UNTIL LAYER(Q)   OR   ELEMENT(P) .....#
 THIS INDICATES ALL THE SCALE FACTORS OF THE SPECIFIED TYPE FROM
 'P' TO 'Q'.
 'P' AND 'Q' MUST BE IN THE CORRECT RANGE, AS DEFINED FOR 'M'   
 IN THE PREVIOUS SECTION.   
#Y3.    LAYER SCALES   OR   ELEMENT SCALES# 
 THIS INDICATES ALL THE SCALE FACTORS OF THE GIVEN TYPE.
#YFUNCTION KOVPCH(IN)#  
#PTHIS FUNCTION CHECKS THE CURRENT ARGUMENTS FOR AN OVERALL PARAMETER : 
#J  
    
      . 
C--CHECK IF THE NEXT ARGUMENTS CAN BE FORMED INTO AN OVERALL PARAMETER DEFINITION   
      I=KOVPCH(IN)  
      . 
    
WHERE : 
    
IN      A DUMMY ARGUMENT.   
    
THE RETURN VALUES OF 'KOVPCH' ARE : 
    
-1      AN ERROR HAS BEEN FOUND DURING THE PROCESSING OF AN OVERALL 
        PARAMETER. A SUITABLE ERROR MESSAGE WILL HAVE BEEN OUTPUT.  
 0      END OF CARD, OR THE CURRENT ARGUMENTS CANNOT BE FORMED INTO 
        AN OVERALL PARAMETER SPECIFICATION. 
 1      INDIVIDUAL OVERALL PARAMETER FOUND. 
 2      ONE OR MORE LAYER SCALES HAS BEEN FOUND.
 3      ONE OR MORE LEMENT SCALES HAS BEEN FOUND.   
    
#   
THIS FUNCTION CHECKS FOR THE END OF THE CARD AT THE START, AND LEAVES 'ME'  
 AND 'MF' POINTING TO THE NEXT ARGUMENT TO BE PROCESSED.
 THIS ROUTINE EXPECTS LIST 5 TO HAVE BEEN LOADED, AND IT SETS   
 THE FOLLOWING VARIABLES UPON RETURN :  
#J  
    
M5A     ADDRESS OF THE FIRST PARAMETER FOUND IN LIST 5. 
N5A     NUMBER OF PARAMETERS FOUND. 
L12A    ADDRESS OF THE GROUP HEADER FOR THIS OVERALL PARAMETER. 
    
#   
THE FLAG FOR LIST 12 CAN BE IGNORED IF LIST 12 HAS NOT BEEN LOADED, ALTHOUGH
 VALUES SHOULD BE ASSIGNED TO 'L12O', 'L12LS' AND 'L12ES' BEFORE THIS   
 ROUTINE IS CALLED. 
 IF A LAYER OR AN ELEMENT SCALE FACTOR IS INDICATED, A CHECK IS MADE TO 
 SEE THAT THE SPECIFIED SCALE IS IN LIST 5. 
 IF THE SCALE FACTOR IS ABSENT, AN ERROR MESSAGE IS OUTPUT AND THE ERROR
 EXIT TAKEN.
 THE OVERALL PARAMETER KEYS ARE TAKEN FROM THE TWO FOLLOWING
 COMMON BLOCKS :
#J  
    
      COMMON/XOPK/NWKO,NKO,LKO,OVP(2,5) 
    
WHERE : 
    
NWKO    NUMBER OF WORDS PER INDIVIDUAL OVERALL PARAMETER KEY.   
NKO     NUMBER OF INDIVIDUAL OVERALL PARAMETER KEYS.
LKO     NUMBER OF WORDS BETWEEN SUCCESSIVE INDIVIDUAL OVERALL   
        PARAMETER  KEYS.
OVP     ARRAY CONTAINING THE INDIVIDUAL OVERALL PARAMETER KEYS, 
        4 CHARACTERS PER WORD IN A4 FORMAT. 
    
AND FOR THE LAYER AND ELEMENT SCALE FACTORS :   
    
      COMMON/XSCALE/NWSC,NSC,LSC,SCALE(2,3) 
    
WHERE : 
    
NWSC    NUMBER OF WORDS PER SCALE FACTOR KEY.   
NSC     NUMBER OF SCALE FACTOR KEYS.
LSC     NUMBER OF WORDS BETWEEN SUCCESSIVE SCALE FACTOR KEYS.   
SCALE   ARRAY CONTAINING THE SCALE FACTOR KEYS, 4 CHARACTERS
        PER WORD IN A4 FORMAT.  
    
#   
THE FIRST ENTRY IN 'XSCALE' IS THE WORD 'SCALE', AND THE REMAINING ONES 
 DETERMINE THE TYPE OF SCALE FACTOR.
#YSUBROUTINE XPRTOP(IN)#
#PTHIS SUBROUTINE PRINTS THE OVERALL PARAMETER GIVEN BY 'IN'.   
#J  
    
      . 
C--PRINT THE MISSING OVERALL PARAMETER  
      CALL XPRTOP(IN)   
      . 
    
WHERE : 
    
IN      THE POSITION OF THE OVERALL PARAMETER TO BE PRINTED IN THE  
        COMMON BLOCK 'XOPK'.
    
#   
THIS ROUTINE FINDS THE HOLERITH CHARACTERS TO DESCRIBE EACH PARAMETER   
 IN THE COMMON BLOCK 'XOPK', WHICH HAS THE FOLLOWING CONTENTS : 
#J  
    
1       SCALE     THE OVERALL SCALE FACTOR. 
2       DU[ISO]   THE DUMMY OVERALL ISOTROPIC TEMPERATURE FACTOR.   
3       OU[ISO]   THE OVERALL ISOTROPIC TEMPERATURE FACTOR. 
4       NLAYER    THE NUMBER OF LAYER SCALE FACTORS STORED. 
5       NELEMENT  THE NUMBER OF ELEMENT SCALE FACTORS STORED.   
6       EXTPARAM  THE EXTINCTION PARAMETER. 
    
#   
THERE IS NO PRINT ROUTINE FOR THE LAYER OR ELEMENT SCALE FACTORS.   
