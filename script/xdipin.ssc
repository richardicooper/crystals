%SCRIPT XDIPIN  %Script for quick input of DIP2000 data%
%  VARIABLE CHARACTER FILENAME SCFNAME HKLNAME ABSNAME
%  VARIABLE INTEGER INBASICS SOLVEMETHOD  
%%
%  VARIABLE CHARACTER QTITLE QLINE1 QLINE2 BUTTOK BUTTXX
%  VARIABLE LOGICAL ANSWER LCANCEL XQMERGE
%  VARIABLE CHARACTER CNULL CDLINE
%%%% Definition %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
^^WI WINDOW XDIPIN 'Input Dip 2000 data' MODAL
^^WI GRID MAIN NROWS=2 NCOLS=1
^^WI {
^^WI  @ 1,1 GRID TOP NROWS=1 NCOLS=2
^^WI  {
^^WI   @ 1,1 GRID LEFT NROWS=6 NCOLS=2
^^WI   {
^^WI    @ 2,2 STATIC T1 'Please enter the title of the hkl file'
^^WI    @ 3,2 STATIC T2 'generated by DIPIN (without the extension).'
^^WI   }
^^WI   @ 1,2 GRID RIGHT NROWS=8 NCOLS=10
^^WI   {
^^WI    @ 2,9 BUTTON BTNOK '&Ok' DISABLED=YES DEFAULT
^^WI    @ 4,9 BUTTON BTNXX '&Cancel'
^^WI    @ 6,9 BUTTON BTNRR '&Run DIPIN Now'
^^WI   }
^^WI  }
^^WI  @ 2,1 GRID BOTTOM NROWS=2 NCOLS=5
^^WI  {
^^WI   @ 1,2 EDITBOX E1 '' CHARS=50 INFORM=YES
^^WI   @ 1,4 BUTTON BROWSE '&Browse'
^^WI  }
^^WI }
^^WI SHOW
^^CR
%%%% Processing %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% LOOP
%  VERIFY BTNOK BTNXX BTNRR BROWSE E1
%  GET SILENT NOSTORE FINAL ABBREVIATED 'Option:' ' '
%  CASE VALUE
%    BLOCK              %OK%
^^??    E1 TEXT
%       GET SILENT NOSTORE KEYWORD 'Get E1 filename:'
%       IF CVALUE .NE. CNULL THEN
%         EVALUATE LOOPEND = LOOPCOUNTER
%         EVALUATE FILENAME = CVALUE
^^CO      DISPOSE XDIPIN
%       END IF
%    END BLOCK
%    BLOCK             %CANCEL%
^^CO      DISPOSE XDIPIN
%         FINISH
%    END BLOCK
%    BLOCK             %RUN DIPIN%

{S * Running DIPIN.
%      COPY '#SPAWN "CRYSDIR:DIPIN.EXE"'
{R   Done.
%    END BLOCK
%    BLOCK      %BROWSE%
^^CO SYSOPENFILE '*.dip' 'Dipin generated file (*.dip)' TITLEONLY
%      GET SILENT KEYWORD 'New filename:'
%      IF CVALUE .NE. 'CANCEL' THEN
%        TRANSFER "^^WI SET E1 TEXT " // CVALUE TO DISPLAY
^^WI       SET BTNOK DISABLED=NO
^^CR
%      END IF
%    END BLOCK
%    BLOCK      %E1%
%       GET SILENT NOSTORE KEYWORD 'Changed text' '_NOTHING'
%       IF CVALUE .NE. '_NOTHING' THEN
^^WI       SET BTNOK DISABLED=NO
^^CR
%       ELSE
^^WI       SET BTNOK DISABLED=YES
^^CR
%       END IF
%     END BLOCK
%  END CASE
% END LOOP
%%
%%
%%%% Execution %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%  BLOCK
%    COPY '#DISK'
%    COPY 'EXTEND SIZE = 10 TRIES  = 1000'
%    COPY 'END'
Files INITIAL.* will be created in your directory. They may be important.
%    COPY '#RELEASE PRINT INITIAL.LIS'
%    COPY '#RELEASE LOG INITIAL.DAT'
%  END BLOCK
%%
%  BLOCK
%      ON END TERMINATE
%      ON ERROR REPEAT
%      CLEAR
%      EVALUATE FILENAME = CVALUE
%      EVALUATE SCFNAME = FILENAME // '.SCF'
%      EVALUATE HKLNAME = FILENAME // '.DIP'
%      TRANSFER '#USE "' //  SCFNAME // '" ' TO CRYSTALS
%      BLOCK
%            ON ERROR REPEAT
%%           WE NEED BASIC LISTS FOR DATA REDUCTION
%            CLEAR
%            COPY '#SCRIPT XINBASIC'
%            IF INBASICS .NE. 1 THEN
  Basic Cell, Space Group or composition information is missing.
  This SCRIPT will be abandoned without reading the reflections.
%                  FINISH
%            END IF
%            IF LCANCEL .EQ. TRUE THEN
  Basic Cell, Space Group or composition information is missing.
  This SCRIPT will be abandoned without reading the reflections.
%                  FINISH
%            END IF
%      END BLOCK
%%
%      BLOCK
%            ON ERROR REPEAT
%            IF ( EXISTS 14 .NE. 1 ) THEN
%              VERIFY YES NO
%            GET FINAL ABBREVIATED  -
  'Do you know the asymmetric part of the unit cell?' 'YES'
%              IF ( VALUE .EQ. 1 ) THEN
%                COPY '#SCRIPT XLIST14'
%              ELSE
  You will need this information later when you do Fourier maps. Look in
  International Tables before then.
%              END IF
%            END IF
%%
%%
%          TRANSFER '#OPEN HKLI "' //  HKLNAME // '" ' TO CRYSTALS
%      END BLOCK
%  END BLOCK
%%
%%   INDICATE THAT NO FUTURE PROCESSING EXPECTED
%% Ask user if they want to merge data.
%% Logical variable XQMERGE is set by this script.
%  COPY '#SCRIPT XQMERGE'
%%
%%
%  BLOCK
%    QUEUE REWIND
%    ON ERROR RESTART
%    CLEAR
%    INSERT "READ  F'S=FSQ NCOEF = 5 TYPE = FIXED CHECK = NO"
%    QUEUE SEND
%%
%    CLEAR
%    INSERT 'INPUT H K L /FO/ SIGMA(/FO/) '
%    QUEUE SEND
%%
%    CLEAR
%    INSERT 'FORMAT (3F4.0, 2F8.0) '
%    QUEUE SEND
%%
%    CLEAR
%    INSERT 'STORE NCOEF=6'
%    QUEUE SEND
%    CLEAR
%    INSERT 'OUTPUT INDICES /FO/ SIGMA(/FO/) RATIO/JCODE CORRECTIONS SERIAL '
%    QUEUE SEND
%    CLEAR
%  END BLOCK
%  COPY '#HKLI'
%  QUEUE PROCESS
%  COPY 'END'
%  COPY '#CLOSE HKLI'
%%
%%
%  COPY '#SCRIPT XFRIEDEL'
%%
%  MESSAGE USER1 ' Error during reflection processing'
%  ON ERROR TERMINATE USER1
            * Removing systematically absent reflections
%  COPY '#SYSTEMATIC'
%  COPY 'END'
%  CLEAR
            * Sorting reflections
%  COPY '#SORT'
%  COPY 'END'
%  CLEAR
%  IF ( XQMERGE ) THEN
{S * Merging equivalent reflections
%      CLEAR
%      COPY '#MERGE'
%      COPY 'END'
%  END IF
%
{S * Final copy to DSC file
%  COPY '#LIST 6'
%  COPY 'READ TYPE = COPY'
%  COPY 'END'
%%

{I Set LISTS 4, 23, 28
%  COPY '#SCRIPT XFRESH6'

%%
 * Done. Dip data input complete.
%END SCRIPT
