%SCRIPT  DIPIN
 SCRIPT to enable input of 'DIP2000' type reflection data
 ------ -- ------ ----- ----- -- ----- ---- ---------- ----
% VARIABLE INTEGER SOLVEMETHOD
% VARIABLE INTEGER INBASICS MERGE 
%  VARIABLE CHARACTER FILENAME SCFNAME HKLNAME 

 Input reflection data from file containing h,k,l Fo, sigma (HKLI file)
 ----- ---------- ---- --------- ---------- ----- --- ----- -----------
%  CLEAR
%  ON ERROR CONTINUE
%  COPY  '#CLOSE HKLI'
%  BLOCK
%  ON END TERMINATE
%    BLOCK
%      ON ERROR REPEAT
%%
%        BLOCK
%          ON END TERMINATE
%          ON ERROR REPEAT
%          CLEAR
  You must know the name of your DIPIN files, e.g.
      XTL11ZAP.SCF, XTL11ZAP.DIP,
               Give ONLY the specific part, e.g. XTL11ZAP or [CAD4]XTL11ZAP
%          GET FINAL KEYWORD 'Enter  filename'
%          EVALUATE FILENAME = CVALUE
%          EVALUATE SCFNAME = FILENAME // '.SCF'
%          EVALUATE HKLNAME = FILENAME // '.DIP'
%          TRANSFER '#USE ' //  SCFNAME // ' ' TO CRYSTALS
%          BLOCK
%            ON ERROR REPEAT
%%           WE NEED BASIC LISTS FOR DATA REDUCTION
%            CLEAR
%            COPY '#SCRIPT INBASICS'
%            IF INBASICS .NE. 1 THEN
  Basic Cell, Space Group or composition information is missing.
  This SCRIPT will be abandoned without reading the reflections.
%                  FINISH
%            END IF
%          END BLOCK
%%
%          BLOCK
%            ON ERROR REPEAT
%            IF ( EXISTS 14 .NE. 1 ) THEN
%              VERIFY YES NO
%            GET FINAL ABBREVIATED  -
  'Do you know the asymmetric part of the unit cell?' 'YES'
%              IF ( VALUE .EQ. 1 ) THEN
%                COPY '#SCRIPT INLIST14'
%              ELSE
  You will need this information later when you do Fourier maps. Look in
  International Tables before then.
%              END IF
%            END IF
%          END BLOCK
%%
%          COPY '#LIST 4'
%          COPY 'END'
%
%%
%          TRANSFER '#OPEN HKLI ' //  HKLNAME // ' ' TO CRYSTALS
%        END BLOCK
%    END BLOCK
%    ON ERROR REPEAT
%  END BLOCK
%%
%%   INDICATE THAT NO FUTURE PROCESSING EXPECTED
%    EVALUATE MERGE = 0
%    VERIFY YES NO
%    GET NOSTORE FINAL ABBREVIATED  -
     'Will  you want to MERGE the reflections' 'NO'
%    IF VALUE .EQ. 1 THEN
%      EVALUATE MERGE = 1
%    END IF
%%
%%
%  BLOCK
%    QUEUE REWIND
%    ON ERROR RESTART
%    CLEAR
%    INSERT "READ  F'S=FSQ NCOEF = 5 TYPE = FIXED CHECK = NO"
%    QUEUE SEND
%%
%    CLEAR
%    INSERT 'INPUT H K L /FO/ SIGMA(/FO/) '
%    QUEUE SEND
%%
%    CLEAR
%    INSERT 'FORMAT (3F4.0, 2F8.0) '
%    QUEUE SEND
%%
%    CLEAR
%    INSERT 'STORE NCOEF=6'
%    QUEUE SEND
%    CLEAR
%    INSERT 'OUTPUT INDICES /FO/ SIGMA(/FO/) RATIO/JCODE CORRECTIONS SERIAL '
%    QUEUE SEND
%    CLEAR
%  END BLOCK
%  COPY '#HKLI'
%  QUEUE PROCESS
%  COPY 'END'
%  COPY '#CLOSE HKLI'
%%
%  MESSAGE USER1 ' Error during reflection processing'
%  ON ERROR TERMINATE USER1
            * Removing systematically absent reflections
%  COPY '#SYSTEMATIC'
%  COPY 'END'
%  CLEAR
            * Sorting reflections
%  COPY '#SORT'
%  COPY 'END'
%  CLEAR
%  IF MERGE .EQ. 1 THEN
            * Merging equivalent reflections
%      CLEAR
%      COPY '#MERGE'
%      COPY 'END'
%  END IF
%
            * Final copy to DSC file
%  COPY '#LIST 6'
%  COPY 'READ TYPE = COPY'
%  COPY 'END'
%  COPY '#LIST 4'
%  COPY 'END'
%%

Give the minimum I/sigma(i) to be used in refinement. It can be changed later
% COPY '#LIST 28'
% INSERT 'MINIMA RATIO='
% GET FINAL REAL  'I/sigma(I) ' '3.0'
% SEND
% COPY 'END'
%%
%    BLOCK
%      ON ERROR REPEAT
%      IF ( EXISTS 14 .NE. 1 ) THEN
%        VERIFY YES NO
%      GET FINAL ABBREVIATED  -
  'Do you know the asymmetric part of the unit cell?' 'YES'
%        IF ( VALUE .EQ. 1 ) THEN
%          COPY '#SCRIPT INLIST14'
%        ELSE
  You will need this information later when you do Fourier maps. Look in
  International Tables before then.
%        END IF
%      END IF
%    END BLOCK
%  IF ( EXISTS 23 .NE. 1 ) THEN
%    COPY '#LIST 23'
%    COPY 'END'
%  END IF
%%
%  ON ERROR TERMINATE ABANDONED
%  BLOCK
%  VERIFY YES NO
%  GET FINAL ABBREVIATED  -
     'Do you have a file with SHELX atoms in?' 'NO'
%  IF VALUE .EQ. 1 THEN
%    COPY '#SCRIPT INEMAP'
%  ELSE
%    BLOCK
%    VERIFY YES NO
%    GET FINAL ABBREVIATED  -
     'Do you want to try to solve the structure? ' 'YES'
%    IF ( VALUE .EQ. 1 ) THEN
%      COPY '#SCRIPT STRUCTUR'
%    END IF
%
%    IF SOLVEMETHOD .NE. 0 THEN
%      COPY '#SCRIPT INEMAP'
%    END IF
%    END BLOCK
%  END IF
%  END BLOCK
%%
%END SCRIPT
