%SCRIPT XGETL6
% VARIABLE CHARACTER HVAL
^^WI WINDOW PROGMETER 'Please wait'
^^WI STARTGRID  PG1 'M' NROWS=5 NCOLS=5
^^WI  PROGRESS ROW=3 COL=3 L6PROG 'Loading List 6' CHARS=50
^^WI ENDGRID
^^WI SHOW
^^CR
% VARIABLE REAL OSCALE DIFF REFS FCALC FOBS
% EVALUATE OSCALE = 1.0
% EVALUATE REFS   = 1.0
% COPY '#GENERALEDIT 5'
% COPY 'LOCATE RECORDTYPE = 102'
% COPY 'TRANSFER FROM OFFSET = 0 TO OSCALE'
% COPY 'END'
% COPY '#GENERALEDIT 30'
% COPY 'LOCATE RECORDTYPE = 101'
% COPY 'TRANSFER FROM OFFSET = 0 TO REFS'
% COPY 'END'
% BLOCK
^^WI WINDOW LIST1 'Reflections' MODAL SIZE
^^WI STARTGRID                GRID01 'MainGrid' NROWS=3 NCOLS=3
^^WI    STARTGRID   ROW=2 COL=3 GRDTR1 'N' NROWS=3 NCOLS=3
^^WI     BUTTON      ROW=1 COL=2  BUTT01 'Ok' DEFAULT COMMIT
^^WI     BUTTON      ROW=3 COL=2  BUTT02 'Cancel' CANCEL
^^WI    ENDGRID
^^WI    LISTCTRL ROW=2 COL=1  LIST01 VISLINES=10 NCOLS=8
^^WI    'H' 'K' 'L' '|Fo|' 'sigma|Fo|' '|Fo|/sigma|Fo|'
^^WI    '|Fc|'  '||Fo|-|Fc||/|Fo|'
^^WI    ADDTOLIST
% COPY '#RELEASE PUNCH SCPLST06.DAT'
% COPY '#PUNCH 6 C'
% COPY 'END'
% COPY '#RELEASE PUNCH CRFILE.PCH'
% COPY '#OPEN SCPDATA SCPLST06.DAT'
% LOOP
%  ON ERROR TERMINATE
%  EVALUATE LOOPEND = 8
%  EXTRACT NEXT
% END LOOP
Please wait, processing reflections.
%  VARIABLE INTEGER SPINNR
%  VARIABLE REAL    RSPIN
%  EVALUATE SPINNR = 0
% LOOP
% ON ERROR TERMINATE
% EVALUATE SPINNR = INTEGER ( 100.0 * REAL ( LOOPCOUNTER ) / REFS )
% CLEAR
% INSERT '^^CO SET L6PROG COMPLETE='
% STORE FORMAT /(I3)/ LENGTH 3 INTEGER SPINNR
% OUTPUT
% EXTRACT NEXT
% EXTRACT TRANSFER INPUT
% CLEAR
% INSERT '^^WI '
% GET INTEGER ' '
% IF ( VALUE .NE. - 512 ) THEN 
% GET INTEGER ' '
% GET INTEGER ' '
% GET REAL ' '
% EVALUATE FOBS = VALUE
% GET REAL ' '
% EVALUATE DIFF = FOBS / VALUE
% STORE FORMAT /(F9.3)/ LENGTH 9 REAL DIFF
% GET NOSTORE REAL ' '
% EVALUATE FCALC = VALUE * OSCALE
% STORE FORMAT /(F9.3)/ LENGTH 9 REAL FCALC
% EVALUATE DIFF = ( FOBS - FCALC ) / FOBS
% IF ( DIFF .LT. 0.0 ) THEN
% EVALUATE DIFF = 0.0 - DIFF
% END IF
% STORE FORMAT /(F9.3)/ LENGTH 9 REAL DIFF
% OUTPUT
% ELSE
% EVALUATE LOOPEND = LOOPCOUNTER
% END IF
% END LOOP
%  EXTRACT CLOSE
^^WI    NULL
^^WI ENDGRID
^^WI SHOW
^^CR
^^WI DISPOSE PROGMETER
^^CR
% END BLOCK
%
% VERIFY BUTT01 BUTT02
% GET FINAL FILL NOSTORE ABBREVIATED ' ' ' '
% CASE VALUE
%   BLOCK 
You selected Ok.
^^WI DISPOSE LIST1
^^CR
%   END BLOCK
%   BLOCK
You selected Cancel.
^^WI DISPOSE LIST1
^^CR
%   END BLOCK
% END CASE
%END SCRIPT
