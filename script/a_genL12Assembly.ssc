%SCRIPT GENL12ASSEMBLY
%%
%% Variables from calling script
%%
%  VARIABLE LOGICAL LPOS LGRP LUISOEQ LUISO LUANI LOCC
%%
%  VARIABLE CHARACTER CLINE CPARAM
%  VARIABLE INTEGER PRTNUM OPTNUM
%  VARIABLE LOGICAL LATOMSFOUND
%%
%  EVALUATE LATOMSFOUND = FALSE
%%
%  TRANSFER "{I Assembly contains groups " // CHARACTER ( PRTNUM ) // " and " // CHARACTER ( OPTNUM ) // "." TO DISPLAY
%%
%  IF PRTNUM .EQ. OPTNUM THEN
%    TRANSFER "{E Problem with part numbers. we stop here." TO DISPLAY
%    FINISH
%  END IF
%%
%  IF LPOS THEN
%    EVALUATE CPARAM = CPARAM // ", X'S"
%  END IF
%  IF LUISO THEN
%    EVALUATE CPARAM = CPARAM // ", U[ISO]"
%  ELSE IF LUANI THEN
%    EVALUATE CPARAM = CPARAM // ", U'S"
%  END IF
%% IF LOCC THEN
%%   EVALUATE CPARAM = CPARAM // ", OCC"
%% END IF
%  EVALUATE CPARAM = CPARAM // ")"
%%
%  TRANSFER "{I General refinement instructions..." TO DISPLAY
%  QUEUE REWIND
%  QUEUE COPY #LIST 12
%  QUEUE COPY BLOCK SCALE
%% TRANSFER "#LIST 12" TO DISPLAY
%% TRANSFER "BLOCK SCALE" TO DISPLAY
%%
%  IF ( LPOS ) .OR. ( LUISO ) .OR. ( LUANI ) THEN
%%
%    EVALUATE CLINE = "CONTINUE PART(" // CHARACTER ( PRTNUM ) // CPARAM
%%   TRANSFER CLINE TO DISPLAY
%    CLEAR
%    STORE CHARACTER CLINE
%    QUEUE SEND
%%
%    EVALUATE CLINE = "CONTINUE PART(" // CHARACTER ( OPTNUM ) // CPARAM
%%   TRANSFER CLINE TO DISPLAY
%    CLEAR
%    STORE CHARACTER CLINE
%    QUEUE SEND
%%
%    EVALUATE LATOMSFOUND = TRUE
%%
%  END IF
%%
%  IF LGRP THEN
%    TRANSFER "{I Group instructions..." TO DISPLAY
%%
%    EVALUATE CLINE = "GROUP PART(" // CHARACTER ( PRTNUM ) // ")"
%%   TRANSFER CLINE TO DISPLAY
%    CLEAR
%    STORE CHARACTER CLINE
%    QUEUE SEND
%%
%    EVALUATE CLINE = "GROUP PART(" // CHARACTER ( OPTNUM ) // ")"
%%   TRANSFER CLINE TO DISPLAY
%    CLEAR
%    STORE CHARACTER CLINE
%    QUEUE SEND
%%
%    EVALUATE LATOMSFOUND = TRUE
%%
%  END IF
%%
%  IF LUISOEQ THEN
%    TRANSFER "{I Common U[iso] instructions..." TO DISPLAY
%    QUEUE COPY EQUIVALENCE
%%   TRANSFER "EQUIVALENCE" TO DISPLAY
%%
%    EVALUATE CLINE = "CONTINUE PART(" // CHARACTER ( PRTNUM ) // ", U[ISO])"
%%   TRANSFER CLINE TO DISPLAY
%    CLEAR
%    STORE CHARACTER CLINE
%    QUEUE SEND
%%
%    EVALUATE CLINE = "CONTINUE PART(" // CHARACTER ( OPTNUM ) // ", U[ISO])"
%%   TRANSFER CLINE TO DISPLAY
%    CLEAR
%    STORE CHARACTER CLINE
%    QUEUE SEND
%%
%    EVALUATE LATOMSFOUND = TRUE
%%
%  END IF
%%
%  IF LOCC THEN
%    TRANSFER "{I Sof instructions..." TO DISPLAY
%    QUEUE COPY EQUIVALENCE
%%   TRANSFER "EQUIVALENCE" TO DISPLAY
%%
%    EVALUATE CLINE = "CONTINUE PART(" // CHARACTER ( PRTNUM ) // ", OCC)"
%%   TRANSFER CLINE TO DISPLAY
%    CLEAR
%    STORE CHARACTER CLINE
%    QUEUE SEND
%%
%    EVALUATE CLINE = "CONTINUE PART(" // CHARACTER ( OPTNUM ) // ", OCC)"
%%   TRANSFER CLINE TO DISPLAY
%    CLEAR
%    STORE CHARACTER CLINE
%    QUEUE SEND
%%
%    EVALUATE CLINE = "WEIGHT -1 PART(" // CHARACTER ( OPTNUM ) // ", OCC)"
%%   TRANSFER CLINE TO DISPLAY
%    CLEAR
%    STORE CHARACTER CLINE
%    QUEUE SEND
%%
%    EVALUATE LATOMSFOUND = TRUE
%%
%  END IF
%%
%  QUEUE COPY END
%%
%  IF LATOMSFOUND THEN
%    QUEUE PROCESS
%  END IF
%%
%END SCRIPT