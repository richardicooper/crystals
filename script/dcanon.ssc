%SCRIPT DCANON
%% Canonical numbering.
%% Compare two groups of atoms, and apply names from one group
%% to the other. User has to identify 4 matching atoms in each group
%  VARIABLE INTEGER OLDSER N5 NCHOSEN
%  VARIABLE CHARACTER CTEXT1 CTEXT2
%  COPY '#DISPLAY'
%  COPY 'END'
{1,11
{1,11  This SCRIPT enable you to apply atomic typing and related
{1,11  numbering to multiple occurances of a motif in a structure.
{1,11  
{1,11  It is most useful if the automatic renumbering available from
{1,11  the model window fails because of internal molecular symmetry
{1,11  
{1,11  This script allows the user to define the initial mapping of
{1,11  the fragments
{1,11  
{1,11  Since CRYSTALS becomes confused if there are two or more atoms
{1,11  of the same type with the same serial number, the best strategy
{1,11  is as follows:
{1,11  Quit this SCRIPT  
{1,11  Number the atoms sequentially from 1
{1,11  Convert all the atoms to type C
{1,11  Use the graphics window to change required element types in one
{1,11  fragment
{1,11  Restart this SCRIPT to number and type the remaining motifs.
{1,11
{1,0
%  VARIABLE LOGICAL ABORT
%  EVALUATE CTEXT1 = 'Continue or Abort?'
%  COPY '#SCRIPT DGETAB'
%  IF ABORT = TRUE THEN
%   FINISH
%  END IF
%  COPY '#GENERALEDIT 5'
%  COPY 'GETSERIAL OLDSER'
%  COPY 'TRANSHEAD FROM OFFSET=3 TO N5'
%  COPY 'END'
% COPY '#REGULARISE COMPARE'
% COPY 'METHOD 1'
% QUEUE REWIND
% EVALUATE CTEXT1 = 'TARGET'
% EVALUATE CTEXT2 = 'IDEAL'
% VARIABLE INTEGER NPAIR
% COPY '#SCRIPT DPAIR'
% IF NPAIR .LE. 3 THEN
%   EVALUATE CTEXT1 = 'Insufficient pairs of atoms selected'
%   COPY '#SCRIPT DMESSAGE'
%   COPY 'TERMINATE'
%   COPY 'END'
% END IF
% CLEAR
% INSERT 'GROUP '
% STORE FORMAT /(I2)/ LENGTH 2 INTEGER NPAIR
% SEND
%%
% QUEUE PROCESS
% EVALUATE CTEXT1 = 'Serial offset'
% VARIABLE INTEGER ININT
% EVALUATE ININT = 100
% QUEUE REWIND
% COPY '#SCRIPT DGETINT'
% CLEAR
% INSERT 'RENAME '
% STORE FORMAT /(I4)/ LENGTH 4 INTEGER ININT
% SEND
% EVALUATE CTEXT1 = 'Known atoms'
% QUEUE REWIND
% COPY '#SCRIPT DCHOOSE'
% IF NCHOSEN .LE. 0 THEN
%  COPY 'TERMINATE'
%  COPY 'END'
%  FINISH
% END IF
% COPY 'MAP'
% QUEUE PROCESS
% EVALUATE CTEXT1 = 'Unknown atoms'
% QUEUE REWIND
% COPY '#SCRIPT DCHOOSE'
% IF NCHOSEN .LE. 0 THEN
%  COPY 'TERMINATE'
%  COPY 'END'
%  FINISH
% END IF
% COPY 'ONTO'
% QUEUE PROCESS
% EVALUATE CTEXT1 = 'Continue or Abort?'
% COPY '#SCRIPT DGETAB'
% IF ABORT = TRUE THEN
%   COPY 'TERMINATE'
% END IF
% COPY 'END'
% COPY '#DISP'
% COPY 'END'
%END SCRIPT

