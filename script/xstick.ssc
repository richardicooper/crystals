%SCRIPT XSTICK
%  VARIABLE CHARACTER CELE CATM CCHK
%  VARIABLE REAL RCHK RSER 
%  VARIABLE INTEGER NINDEX ISER IREF
%  VARIABLE LOGICAL CALLED
%%
%% Get atom name
%%
%  IF CALLED .EQ. FALSE THEN
%    GET SILENT NOSTORE FINAL KEYWORD 'Atom?' 'C(1)'
%    EVALUATE CATM = CVALUE
%    VERIFY FIX XS ISO ANISO RIDE
%    GET SILENT NOSTORE FINAL ABBREVIATED 'Refmode?' 'FIX'
%    EVALUATE IREF = - VALUE + 1
%    IF ( IREF .EQ. - 4 ) THEN
%      EVALUATE IREF = - 10
%    END IF
%  END IF
%  EVALUATE CELE = FIRSTSTR ( CATM )
%  EVALUATE ISER = FIRSTINT ( CATM )
%%
%  IF ( ( CELE .NE. 'H' ) .AND. ( IREF .EQ. - 10 ) ) THEN
%    TRANSFER '{E Only H atoms may be ridden: ' // CATM TO DISPLAY
%    FINISH
%  END IF
%%
%%
%  BLOCK
%    EVALUATE NINDEX = 0
%    ON EDITERROR TERMINATE
%    IF ( CALLED .EQ. FALSE ) THEN
%       COPY '#GENERALEDIT 5'
%       COPY 'LOCATE RECORDTYPE=101'
%       COPY 'ERROR MESS=NO SIGN=NONE ACTI=CONT NAME=EDITERROR'
%    END IF
%    LOOP 
%     ON EDITERROR TERMINATE
%     COPY 'TRANSFER FROM OFFSET=0 TO CCHK'
%     COPY 'TRANSFER FROM OFFSET=1 TO RCHK'
%     IF ( ( CELE .EQ. CCHK ) .AND. ( ISER .EQ. INTEGER ( RCHK ) ) ) THEN
%      COPY 'TRANSFER TO OFFSET=15 FROM IREF'
%      IF ( CALLED .EQ. FALSE ) THEN
%        COPY 'WRITE'
%        COPY 'END'
%      END IF
%      EVALUATE LOOPEND = LOOPCOUNTER
%      EVALUATE NINDEX = LOOPCOUNTER
%     END IF
%     COPY 'NEXT'
%    END LOOP
%  END BLOCK
%  IF ( NINDEX .EQ. 0 ) THEN
%   TRANSFER '{E Atom not found. ' // CATM TO DISPLAY
%   FINISH
%  END IF
%%
%END SCRIPT
