%SCRIPT AUTO12
%% SET VERIFY false
%  VARIABLE LOGICAL HINCELL
%  VARIABLE LOGICAL SCRIPTEXT
%  VARIABLE LOGICAL EXTINCT PURGE
%  VARIABLE LOGICAL EXEREFN
%  VARIABLE INTEGER ADP
%  EVALUATE EXTINCT = FALSE
%  EVALUATE PURGE  = FALSE
%  VARIABLE CHARACTER CLAST CPARAM CPARAM2
%  VARIABLE LOGICAL XAUTO12
%  EVALUATE XAUTO12 = TRUE
%%
%%%%%%
%% The possible next steps to take.
%  VARIABLE INTEGER KTDEFA
%  VARIABLE INTEGER KSVIEW KSFOUR KSEXIT KSWEIG KSEXTN
%  VARIABLE INTEGER KSABSN KSLSQ1 KSLSQ2 KSLSQ3 KSHYDR
%%
%%
%  VARIABLE LOGICAL OPTIM HPOS
%  EVALUATE OPTIM = FALSE
%  VARIABLE INTEGER ISTAGE
%%
%  EVALUATE ISTAGE = 0
%%
%%%%%%
%% R-FACTOR THRESHOLDS FOR VARIOUS CASES
%  VARIABLE REAL R1 R2 R3 R4 RMIN
%% Fourier might be better
%  EVALUATE R1 = 40.0
%% Isotropic refinement
%  EVALUATE R2 = 20.0
%% Aniso 
%  EVALUATE R3 = 10.0
%% Tidy up
%  EVALUATE R4 = 6.0
%% 
%% 
%% R, OSCALE, RATIO are set in SCRIPT RFACTOR
%  VARIABLE REAL R OSCALE RATIO
%  VARIABLE CHARACTER CRVAL
%  VARIABLE REAL ELECTRON 
%% Make sure we have a valid LIST 12 of some sort
%% and find the last non- hydrogen atom
%  COPY '#SCRIPT CHECK5'
%  COPY '#SCRIPT CHECK12'
%%
%% Make sure that H is in list 29.
%%
%  COPY '#SCRIPT CHECK29'
%  IF ( HINCELL .EQ. FALSE ) THEN
%% Set this to true, so that the logic thinks we've already found H's.
%    EVALUATE HPOS = TRUE
%  END IF
%%
%% Try to guess what stage we are at
%% ISTAGE 1 - X'S
%% ISTAGE 2 - X'S, U[ISO]
%% ISTAGE 3 - X'S, U'S
%  EVALUATE ISTAGE = ADP + 1
%    EVALUATE KSVIEW = 1
%    EVALUATE KSFOUR = 2
%    EVALUATE KSLSQ1 = 3
%    EVALUATE KSLSQ2 = 4
%    EVALUATE KSLSQ3 = 5
%    EVALUATE KSHYDR = 6
%    EVALUATE KSEXTN = 7
%    EVALUATE KSWEIG = 8
%%
%  LOOP
 * Checking R-factor.
%    COPY '#SCRIPT RFACTOR'
%    IF RATIO .GE. 1.3 THEN
 * We need the R factor on a good scale.
 * Recomputing overall scale factor and phases.
%      COPY '#SFLS'
%      COPY 'SCALE'
%      COPY 'END'
%      COPY '#SFLS'
%      COPY 'SCALE'
%      COPY 'END'
 * Checking R-factor again.
%      COPY '#SCRIPT RFACTOR'
%    END IF
%    EVALUATE RMIN = R
%    IF RMIN .LE. R4 THEN
%      EVALUATE ISTAGE = 3
%    END IF
%%   
%    CLEAR
%    ON ERROR TERMINATE
%%
^^WI WINDOW XAUTO12 'Supervisor' SIZE MODAL
^^WI COMMIT='BOK' CANCEL='BXX'
^^WI GRID OUTER NROWS=3 NCOLS=7
^^WI {
^^WI   @ 2,2 TEXTOUT AUTO12TEXT '' NROWS=10 NCOLS=80
^^WI   @ 2,6 GRID BTNS NROWS=5 NCOLS=1
^^WI   {
^^WI     @ 1,1 BUTTON BOK '&Ok' DEFAULT COMMIT
^^WI     @ 3,1 BUTTON BXX '&Close' CANCEL
^^WI     @ 5,1 BUTTON BHELP '&Help' 
^^WI   }
^^WI   @ 2,4 LISTBOX AUTOLIST VISLINES=13 ADDTOLIST
^^WI     'View structure'
^^WI     'Fourier refinement'
^^WI     'Refine positions'
^^WI     'Refine posn and iso'
^^WI     'Refine posn and aniso'
^^WI     'Add hydrogen'
^^WI     'Check extinction'
^^WI     'Optimise weights'
^^WI     'n-Cycles'
^^WI     '6-Cycles'
^^WI     'Validate'
^^WI     'Publish'
^^WI     'Help'
^^WI     NULL
^^WI }
^^WI SHOW
^^CR
^^WI SENDTEXTTO AUTO12TEXT
^^CR
%    CLEAR
%    INSERT 'Checking R factor... '
%    STORE FORMAT /(F7.2)/ LENGTH 7 REAL R
%    INSERT '%'
%    OUTPUT
%    CLEAR
%    IF R .GT. R1 THEN
 Large R factor. 
   Recommended:   Fourier refinement.
   Other options: Refine positions only.
                  View the structure.
%      EVALUATE KTDEFA = KSFOUR
%    ELSE IF ( R .GT. R2 ) .OR. ( ISTAGE .LE. 1 ) THEN
 Medium R factor. 
   Recommended:   Refine positions and Uiso.
   Other options: View the structure
%      EVALUATE KTDEFA = KSLSQ2
%%     
%    ELSE IF ( R .GT. R3 ) .AND. ( ISTAGE .LE. 2 ) THEN
 Low R factor 
   Recommended:   Refine positions and Uaniso
   Other options: View the structure
%      EVALUATE KTDEFA = KSLSQ3
%%     
%    ELSE
%      IF ( R .GT. R3 ) THEN 
 R factor is large after aniso refinement. 
   Possible problems: Missing solvent.
                      Disorder.
                      Extinction.
   Recommended:       Try extinction correction.
   Other options:     View the structure.
%        IF KTDEFA .EQ. KSEXTN THEN
      _____________________________________________________________

      CRYSTALS cannot guide you futher with this analysis.
      Please consult a professional crystallographer
      _____________________________________________________________
%           COPY '#PAUSE 5'
^^WI        DISPOSE XAUTO12
^^CR
%           FINISH
%        END IF
%        EVALUATE KTDEFA = KSEXTN
%      ELSE
 Very low R factor - Begin to tidy up
%        IF HPOS .EQ. FALSE THEN
%% Default to finding hydrogen
%          EVALUATE KTDEFA = KSHYDR
    Recommended:   Locate or place all hydrogen atoms.
    Other options: Refine positions and Uaniso.
                   View the structure.
%        ELSE
%          IF EXTINCT .EQ. FALSE THEN
%% If H are all found, default to checking extinction.
%            EVALUATE KTDEFA = KSEXTN
    Recommended:   Check for extinction.
    Other options: Refine positions and Uaniso.
                   View the structure.
                   Locate or place all hydrogen atoms.
%          ELSE
%            IF ( OPTIM .EQ. FALSE  ) .AND. ( R .LE. R4 ) THEN
%% If H are found, extinction is checked and low R, default to weights
%              EVALUATE KTDEFA = KSWEIG
    Recommended:   Optimise least squares weights.
    Other options: Refine positions and Uaniso.
                   View the structure.
                   Locate or place all hydrogen atoms.
                   Check for extinction.
%            ELSE
%              EVALUATE KTDEFA = KSLSQ3
    Recommended:   Refine positions and Uaniso.
    Other options: View the structure.
                   Locate or place all hydrogen atoms.
                   Check for extinction.
                   Optimise least squares weights.
%            END IF  % HPOS TRUE, EXTINCT TRUE, OPTIM FALSE
%          END IF  % HPOS TRUE, EXTINCT FALSE
%        END IF  % HPOS is false
%      END IF  % V.low r factor
%    END IF
%%% 
%    CLEAR
%    INSERT '^^WI SET AUTOLIST SELECTION='
%    STORE FORMAT /(I2)/ LENGTH 2 INTEGER KTDEFA
%    OUTPUT
^^CR
%    CLEAR
%    EVALUATE EXEREFN = FALSE
%    VERIFY BOK BXX BHELP
%    GET FINAL SILENT NOSTORE ABBREVIATED 'Continue?' ' '
%    CASE VALUE
%      BLOCK  %BOK%
^^?? AUTOLIST SELECTED
%         GET SILENT NOSTORE INTEGER 'Choice number'
^^WI DISPOSE XAUTO12
^^CR
%         CASE VALUE
%           BLOCK % KSVIEW 1
%             COPY '#SCRIPT PLOT'
%           END BLOCK
%           BLOCK % KSFOUR 2
%             COPY '#SCRIPT AFOUR'
%             EVALUATE ISTAGE = 1
%           END BLOCK
%           BLOCK % KSLSQ1 3
%             EVALUATE ADP = 0
%             EVALUATE CPARAM = " X'S "
%             EVALUATE EXEREFN = TRUE
%           END BLOCK
%           BLOCK % KSLSQ2 4
%             COPY '#EDIT'
%             COPY 'MONITOR OFF'
%%            Just in case we get here from aniso
%             COPY 'UEQUIV FIRST UNTIL LAST'
%             COPY 'MONITOR MEDIUM'
%             COPY 'END'
%             EVALUATE ADP = 1
%             EVALUATE CPARAM = " X'S, U[ISO] "
%             EVALUATE ISTAGE = 2
%             EVALUATE EXEREFN = TRUE
%           END BLOCK
%           BLOCK % KSLSQ3 5
%             EVALUATE ADP = 3
%             EVALUATE CPARAM = " X'S, U'S "
%             EVALUATE ISTAGE = 3
%             EVALUATE EXEREFN = TRUE
%           END BLOCK
%           BLOCK % KSHYDR 6
%             COPY '#SCRIPT XFINDH'
%%% This script drops back to control don't put
%%% anything here!
%             COPY '#SCRIPT CHECK5'
%             COPY '#SCRIPT CHECK12'
%             VERIFY YES NO
%             GET NOSTORE FINAL ABBREVIATED -
'Have all H atoms been located?' 'YES'
Remember - the data may not be good enough to reveal all H atoms
%             IF VALUE .EQ. 1 THEN
%               EVALUATE HPOS = TRUE
%             END IF
%             COPY '#SFLS'
%             COPY 'CALC'
%             COPY 'END'
%%%%%%%%
%           END BLOCK
%           BLOCK % KSEXTN 7
 You will be shown an analysis of residuals.
%             EVALUATE EXTINCT = TRUE
%             COPY '#ANALYSE'
%             COPY 'END'
                 <--->    <--->
                 Col 3    Col 4
 If the entries near the bottom of column 3 are generally lower than
 those in column 4, you need to refine an extinction parameter.
%             EVALUATE CPARAM = " X'S, U'S "
%             VERIFY YES NO
%             GET NOSTORE FINAL ABBREVIATED -
 'Do you want to refine an extinction parameter?' 'YES'
%             IF VALUE .EQ. 1 THEN
%               EVALUATE CPARAM2 =  ' EXTPARAM'
%             END IF
%             EVALUATE EXEREFN = TRUE
%           END BLOCK
%           BLOCK % KSWEIG 8
%             COPY '#SCRIPT XWEIGHTS'
%             EVALUATE OPTIM = TRUE
%           END BLOCK
%           BLOCK % n-CYCLES 9
%             COPY '#SCRIPT NCYCLES'
%           END BLOCK
%           BLOCK % 6-CYCLES 10
%             COPY '#SCRIPT SIXCYCLE'
%           END BLOCK
%           BLOCK % VALIDATE 11
%             COPY '#SCRIPT ACTA'
%           END BLOCK
%           BLOCK % PUBLISH 12
%             COPY '#SCRIPT TIDYUP'
%             COPY '#SCRIPT XPUBLISH'
%             FINISH
%           END BLOCK
%           BLOCK % HELP 13
----------------------------
^^WI WINDOW HELP12 'Helper' SIZE MODAL
^^WI COMMIT='BOK' CANCEL='BXX'
^^WI GRID OUTER NROWS=3 NCOLS=5
^^WI {
^^WI   @ 2,2 TEXTOUT HELPTEXT '' NROWS=10 NCOLS=80
^^WI   @ 2,4 GRID HBTNS NROWS=1 NCOLS=1
^^WI   {
^^WI     @ 1,1 BUTTON HBOK '&Ok' DEFAULT COMMIT
^^WI   }
^^WI }
^^WI SHOW
^^CR
^^WI SENDTEXTTO HELPTEXT
^^CR
View structure
      This activates the display module, CAMERON
Fourier refinement
      By the method of Lipson & Cochran
Refinement
      WARNING. IF YOU HAVE CARFULLY BUILT A REFINEMENT LIST,
      LIST 12, THESE AUTOMATIC PROCEDURES WILL DESTROY IT!
Refine positions
      Refine x,y,z of all non-H atoms
Refine posn and iso
      Refine x,y,z,Uiso of all non-H atoms
Refine posn and aniso
      Refine x,y,z,Uaniso of all non-H atoms
Add hydrogen
      Produce an editable model containing observed (from
      difference map) and computed H positions
Check extinction
      Produce an analysis of variance listing which may reveal
      the necessity for an extinction correction
Optimise weights
      Towards the end of refinement, once all parameters have been
      partially refined, optimise the LS weights
n-Cycles
      Do up-to n cycles of refinement. CRYSTALS will stop refinement
      once convergence slows down, or if divergence occurs.
6-Cycles
      Do six cycles, even if everything converges or blows up. Usually 
      the last operation before 'validation'
Validate
      Check that the structure meets the Acta Cryst requirements.
Publish
      Produce cif and tabular listsings.
%              CLEAR
%              EVALUATE EXEREFN = FALSE
%              VERIFY HBOK HBXX
%              GET FINAL SILENT NOSTORE ABBREVIATED 'Continue?' ' '
%              CASE VALUE
%                BLOCK  %BOK%
^^WI              DISPOSE HELP12
^^CR
%                END BLOCK
%              END CASE
%           END BLOCK %%13
%         END CASE
%      END BLOCK
%      BLOCK  %BXX%
^^WI     DISPOSE XAUTO12
^^CR
%        FINISH
%      END BLOCK
%      BLOCK  %BHELP%
%       COPY '#SCRIPT XHELP1'
VIEW STRUCTURE
      This activates the display module, CAMERON
FOURIER REFINEMENT
      By the method of Lipson & Cochran
REFINE POSITIONS
      Refine x,y,z of all non-H atoms
Refine posn and iso
      Refine x,y,z,Uiso of all non-H atoms
REFINE POSN AND ANISO
      Refine x,y,z,Uaniso of all non-H atoms
ADD HYDROGEN
      Produce an editable model containing observed (from
      difference map) and computed H positions
CHECK EXTINCTION
      Produce an analysis of variance listing which may reveal
      the necessity for an extinction correction
OPTIMISE WEIGHTS
      Towards the end of refinement, once all parameters have been
      partially refined, optimise the LS weights
N-CYCLES
      Do up-to n cycles of refinement. CRYSTALS will stop refinement
      once convergence slows down, or if divergence occurs.
6-CYCLES
      Do six cycles, even if everything converges or blows up. Usually 
      the last operation before 'validation'
VALIDATE
      Check that the structure meets the Acta Cryst requirements.
PUBLISH
      Produce cif and tabular listsings.

REFINEMENT
      WARNING. IF YOU HAVE CARFULLY BUILT A REFINEMENT LIST,
      LIST 12, THESE AUTOMATIC PROCEDURES WILL DESTROY IT!
%       COPY '#SCRIPT XHELP2'
^^WI     DISPOSE XAUTO12
^^CR
%      END BLOCK
%    END CASE
%    IF ( EXEREFN .EQ. TRUE ) THEN
%      COPY '#SCRIPT CHECK12'
%      COPY '#SUM LIST 12'
%      COPY 'END'
%%
%      IF ( EXTINCT .EQ. TRUE ) .AND. ( PURGE .EQ. FALSE ) THEN
%        IF EXISTS 11 .EQ. 1 THEN
%          COPY '#DISK'
%          COPY 'DELETE 11'
%          COPY 'END'
%        END IF
%%
%        COPY '#PURGE'
%        COPY 'END'
%        EVALUATE PURGE = TRUE
%      END IF
%%
%      COPY '#LIST 22'
%      COPY 'END'
%      COPY '#SCRIPT XREFINE'
%      COPY '#SCRIPT RFACTOR'
 * Test for near convergence of the R factor...
%      CLEAR
%      INSERT '    Old R factor = '
%      STORE FORMAT /(F7.2)/ LENGTH 7 REAL RMIN
%      INSERT '%. New R factor = '
%      STORE FORMAT /(F7.2)/ LENGTH 7 REAL R
%      OUTPUT
%      CLEAR
%%
%      IF R .GE. RMIN * 0.99 THEN
   The refinement has probably converged.
%      END IF
%%
%      EVALUATE RMIN = R
%    END IF % ERROR%
%%
%  END LOOP
%%
%END SCRIPT
