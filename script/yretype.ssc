%SCRIPT ZRETYPE
%   VARIABLE INTEGER STARTFROM NEXTFREE ISERIAL
%   VARIABLE LOGICAL CALLED ISFREE
%   VARIABLE CHARACTER CATOM CTYPE
%%
%% Get details from script (if not called from yretypes):
%%
%   IF CALLED .EQ. FALSE THEN
%       GET SILENT NOSTORE TEXT 'Atom?' ' '
%       EVALUATE CATOM = CVALUE
%       GET SILENT NOSTORE TEXT 'New type?' ' '
%       EVALUATE CTYPE = CVALUE
%   END IF
%%
%% Check if serial will cause a clash.
%%
%   EVALUATE ISERIAL = FIRSTINT ( CATOM )
%   EVALUATE ISFREE  = FALSE
%   IF ISERIAL .GT. STARTFROM THEN
%     COPY '#SCRIPT ISFREE'
%   END IF
%%
%% If clash, just get an available serial number:
%%
%   IF ( ISFREE ) THEN
%       EVALUATE NEXTFREE = ISERIAL
%       EVALUATE STARTFROM = NEXTFREE
%   ELSE
%       COPY '#SCRIPT NEXTFREE'
%       EVALUATE STARTFROM = NEXTFREE
%   END IF
%%
%% NEXTFREE now holds the new serial for our atom so lets rename it
%%
%   IF ( CALLED .EQ. FALSE ) THEN
%      COPY '#EDIT'
%   END IF
%   CLEAR
%   INSERT 'RENAME '
%   STORE CHARACTER CATOM
%   STORE CHARACTER CTYPE
%   INSERT '('
%   STORE FORMAT /(I4)/ LENGTH 4 INTEGER NEXTFREE
%   INSERT ')'
%   IF ( CALLED ) THEN
%     QUEUE SEND
%   ELSE
%     SEND
%     COPY 'END'
%   END IF
%END SCRIPT
