%SCRIPT XKCCDIN  %Script for quick input of KCCD data%
%  VARIABLE INTEGER INBASICS SOLVEMETHOD
%  VARIABLE LOGICAL LFILE IFILE
%%
%  VARIABLE CHARACTER QTITLE QLINE1 QLINE2 BUTTOK BUTTXX
%  VARIABLE LOGICAL ANSWER LCANCEL XQMERGE
%  VARIABLE CHARACTER CNULL CDLINE
%%
%  EVALUATE LFILE = FILEEXISTS ( 'kccd.ins' )
%  EVALUATE IFILE = FILEEXISTS ( 'import.cif' )
%%
%%%% Definition %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
^^WI WINDOW XKCCDIN 'Input KCCD data' MODAL
^^WI COMMIT='BTNOK' CANCEL='BTNXX'
^^WI GRID MAIN NROWS=2 NCOLS=1
^^WI {
^^WI   @ 1,1 GRID LEFT NROWS=4 NCOLS=3
^^WI   {
% IF LFILE THEN
^^WI    @ 2,2 STATIC T1 'Click OK to read in data'
^^WI    @ 3,2 STATIC T2 'from the file kccd.ins.'
% ELSE IF IFILE THEN
^^WI    @ 2,2 STATIC T1 'No KCCDIN output files detected.'
^^WI    @ 3,2 STATIC T2 'Click Run KCCDIN now to continue.'
% ELSE
^^WI    @ 2,2 STATIC T1 'No KappaCCD import.cif file detected.'
^^WI    @ 3,2 STATIC T2 'Click Cancel, place the file in this'
^^WI    @ 4,2 STATIC T3 'folder, then try again.'
% END IF
^^WI   }
^^WI   @ 2,1 GRID RIGHT NROWS=3 NCOLS=7
^^WI   {
^^WI    @ 2,2 BUTTON BTNOK '&Ok' DEFAULT COMMIT
% IF .NOT. LFILE THEN
^^WI         DISABLED=YES
% END IF
^^WI    @ 2,4 BUTTON BTNXX '&Cancel' CANCEL
^^WI    @ 2,6 BUTTON BTNRR
% IF LFILE THEN
^^WI '&Run KCCDin again'
% ELSE
^^WI '&Run KCCDin now'
% END IF
% IF .NOT. IFILE THEN
^^WI     DISABLED=YES
% END IF
^^WI  }
^^WI }
^^WI SHOW
^^CR
^^CO FOCUS BTNOK
%%
%%%% Processing %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%
% LOOP
%  VERIFY BTNOK BTNXX BTNRR
%  GET SILENT NOSTORE FINAL ABBREVIATED 'Option:' ' '
%  CASE VALUE
%    BLOCK              %OK%
%         EVALUATE LOOPEND = LOOPCOUNTER
^^CO      DISPOSE XKCCDIN
%    END BLOCK
%    BLOCK             %CANCEL%
^^CO      DISPOSE XKCCDIN
%         FINISH
%    END BLOCK
%    BLOCK             %RUN KCCDIN%
{S * Running KCCDIN.
^^WI   WINDOW BLOCKK 'Waiting' MODAL CANCEL='^^CO DISPOSE BLOCKK'
^^WI   GRID MAIN NROWS=4 NCOLS=3 { @ 2,2 STATIC T1 'Starting KCCDIN.'
^^WI   @ 3,2 STATIC T1 'Complete or close KCCDIN to continue.' } SHOW
^^CR
%      COPY '#SPAWN + "CRYSDIR:KCCDIN.BAT"'
^^CO   DISPOSE BLOCKK
^^CO   SET BTNOK DISABLED=NO
^^CO   SET BTNRR TEXT = 'Run KCCDin again'
^^CO   SET T1 TEXT 'Click OK to read in data'
^^CO   SET T2 TEXT 'from the file kccd.ins.'
{R   Done.
%    END BLOCK
%  END CASE
% END LOOP
%%
%%
%%%% Execution %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%
%  BLOCK
%    COPY '#DISK'
%    COPY 'EXTEND SIZE = 10 TRIES  = 1000'
%    COPY 'END'
Files INITIAL.* will be created in your directory. They may be important.
%    COPY '#RELEASE PRINT INITIAL.LIS'
%    COPY '#RELEASE LOG INITIAL.DAT'
%  END BLOCK
%%
%  BLOCK
%      ON END TERMINATE
%      ON ERROR TERMINATE
%      CLEAR
%      TRANSFER '#USE kccd.ins' TO CRYSTALS
%      BLOCK
%            ON ERROR REPEAT
%%           WE NEED BASIC LISTS FOR DATA REDUCTION
%            CLEAR
%            COPY '#SCRIPT XINBASIC'
%            IF INBASICS .NE. 1 THEN
{E  Basic Cell, Space Group or composition information is missing.
{E  This SCRIPT will be abandoned without reading the reflections.
%                  FINISH
%            END IF
%            IF LCANCEL .EQ. TRUE THEN
{E  Basic Cell, Space Group or composition information is missing.
{E  This SCRIPT will be abandoned without reading the reflections.
%                  FINISH
%            END IF
%      END BLOCK
%%
%      BLOCK
%            ON ERROR REPEAT
%            IF ( EXISTS 14 .NE. 1 ) THEN
%              VERIFY YES NO
%            GET FINAL ABBREVIATED  -
  'Do you know the asymmetric part of the unit cell?' 'YES'
%              IF ( VALUE .EQ. 1 ) THEN
%                COPY '#SCRIPT XLIST14'
%              ELSE
{R  You will need this information later when you do Fourier maps. Look in
{R  International Tables before then.
%              END IF
%            END IF
%%
%          COPY '#LIST 4'
%          COPY 'END'
%%
%          TRANSFER '#OPEN HKLI kccd.hkl' TO CRYSTALS
%      END BLOCK
%  END BLOCK
%%
%%   INDICATE THAT NO FUTURE PROCESSING EXPECTED
%% Ask user if they want to merge data.
%% Logical variable XQMERGE is set by this script.
%  COPY '#SCRIPT XQMERGE'
%%
%%
%  BLOCK
%    QUEUE REWIND
%    ON ERROR RESTART
%    CLEAR
%    INSERT "READ  F'S=FSQ NCOEF = 5 TYPE = FIXED CHECK = NO"
%    QUEUE SEND
%%
%    CLEAR
%    INSERT 'INPUT H K L /FO/ SIGMA(/FO/) '
%    QUEUE SEND
%%
%    CLEAR
%    INSERT 'FORMAT (3F4.0, 2F8.0) '
%    QUEUE SEND
%%
%    CLEAR
%    INSERT 'STORE NCOEF=6'
%    QUEUE SEND
%    CLEAR
%    INSERT 'OUTPUT INDICES /FO/ SIGMA(/FO/) RATIO/JCODE CORRECTIONS SERIAL '
%    QUEUE SEND
%    CLEAR
%  END BLOCK
%  COPY '#HKLI'
%  QUEUE PROCESS
%  COPY 'END'
%  COPY '#CLOSE HKLI'
%%
%  MESSAGE USER1 ' Error during reflection processing'
%  ON ERROR TERMINATE USER1
%%
%% Call space group determining code
%%
%%  COPY '#SCRIPT SG'
%%
%  COPY '#SCRIPT XFRIEDEL'
%%
{S * Removing systematically absent reflections
%  COPY '#SYSTEMATIC'
%  COPY 'END'
%  CLEAR
{S * Sorting reflections
%  COPY '#SORT'
%  COPY 'END'
%  CLEAR
%  IF ( XQMERGE ) THEN
{S * Merging equivalent reflections
%      CLEAR
%      COPY '#MERGE'
%      COPY 'END'
%  END IF
%
{S * Final copy to DSC file
%  COPY '#LIST 6'
%  COPY 'READ TYPE = COPY'
%  COPY 'END'
%  COPY '#LIST 4'
%  COPY 'END'
%%

{I Give the minimum I/sigma(i) and [sin(theta)/lambda]sq to be 
{I used in refinement. They can be changed at any time later
{I using the menu item "X-ray Data" -> "Filter Reflections".

{R Recommended settings for F refinement:
{R   Fo/sigma(Fo)              is at least 3.0    eliminates noise
{R   [Sin theta / lambda] ** 2 is at least 0.01   eliminates beam stop

% COPY '#SCRIPT XLIST28'
%%
%  IF ( EXISTS 23 .NE. 1 ) THEN
%    COPY '#LIST 23'
%    COPY 'END'
%  END IF
%%
%%
{R * Done. Kccd data input complete.
%END SCRIPT
