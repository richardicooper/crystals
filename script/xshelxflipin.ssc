%SCRIPT XSHELXFLIPIN
%%
%% Read in a the cell, symm and atoms from a shelx file.
%%
{R Script version by R. Cooper. Based on the fortran program SXTOCA by
{R R.O. Gould, The University of Edinburgh, March 1994.
{R Slightly modified for use with Superflip
%%
%%
% VARIABLE CHARACTER CFILE CENTRO CLATYP CUNIT CSFAC CTEM
% VARIABLE CHARACTER SPACEHOOK INSTITLE HKLTITLE SPACEREAD
% VARIABLE INTEGER ILATT NSYMS SCOUNT SXF LEND
% VARIABLE LOGICAL SFILERR LCANCEL LCRY SXGETALL LQS SPACETEXT
% VARIABLE REAL SUA SUB SUC SUAL SUBE SUGA
% VARIABLE REAL SXX SXY SXZ SXO SXU11 SXU22 WAVE CELLZ
% VARIABLE REAL SXU33 SXU23 SXU13 SXU12
% VARIABLE REAL SXOCC CRYOCC SPECOCC
% VARIABLE INTEGER ATOMCOUNT
%%
% EVALUATE SXGETALL = FALSE
%%
%% variables used by the question box below
% VARIABLE CHARACTER QTITLE BUTTOK BUTTXX QLINE1 QLINE2
% VARIABLE LOGICAL ANSWER
%%
% EVALUATE LCRY = FALSE
%%
%%
%%
%%
%%
% EVALUATE CFILE = 'SFLIP.INS'
% TRANSFER '#OPEN SCPD "' // CFILE // '"' TO CRYSTALS
%%
%%
{I Scanning SUPERFLIP file for information. This may take some time...
%           EXTRACT REWIND
{I Looking for TITL instruction.                                                
%         EVALUATE SFILERR = TRUE                                               
%         LOOP                                                                  
%           ON ERROR TERMINATE                                                  
%           ON END TERMINATE                                                    
%           EXTRACT NEXT                                                        
%           CLEAR                                                               
%%           EXTRACT TRANSFER COMMAND                                           
%%           EXECUTE SEND                                                       
%           EXTRACT TRANSFER INPUT                                              
%           CLEAR
%           GET NOSTORE NOPROMPT KEYWORD NULLSTRING                             
%           IF CVALUE .EQ. 'TITL' THEN                                          
%              EVALUATE SFILERR = FALSE                                         
%              EVALUATE LOOPEND = LOOPCOUNTER                                   
{R TITL card found .                                                            
%              CLEAR                                                            
%              INSERT '#TITLE '                                                 
%              GET NOPROMPT NOREMOVE TEXT ' ' 'Default Title'                   
%              SEND                                                             
%              COPY 'END'                                                       
%              CLEAR                                                            
%              EVALUATE SPACETEXT = FALSE                                       
%              EVALUATE SPACEREAD = ' '                                         
%              LOOP                                                             
%                GET NOSTORE NOPROMPT KEYWORD ' ' '_NOMORE_'                    
%                IF CVALUE .EQ. '_NOMORE_' THEN                                 
%                  EVALUATE LOOPEND = LOOPCOUNTER                               
%                ELSE IF SPACETEXT THEN                                         
%                  EVALUATE SPACEREAD = SPACEREAD // CVALUE // ' '              
%                END IF                                                         
%                IF ( UPPERCASE CVALUE ) .EQ. 'IN' THEN                         
%                  EVALUATE SPACEREAD = ' '                                     
%                  EVALUATE SPACETEXT = TRUE                                    
%                END IF
%              END LOOP                                                         
%           END IF
%         END LOOP                                                              
%         IF SFILERR .EQ. TRUE THEN                                             
{E *** No "TITL" card found in SHELX file. Never mind.                          
%         ELSE                                                                  
{R TITL card processed.                                                         
%         END IF                                                                
%% TRANSFER 'Space group read from TITL card: ' // SPACEREAD TO DISPLAY         
%%                                                                              
%%{I Now check the spacegroup...                                                
%%                                                                              
%          EVALUATE SPACEHOOK = 'Space group needed for SHELX file input'       
%          COPY '#SCRIPT XSPACE'                                                
%          IF LCANCEL .EQ. TRUE THEN                                            
{E Shelx files do not contain the space group symbol, therefore                 
{E it must be entered separately.                                               
%              FINISH                                                           
%          END IF                                                               
%%                                                                              
%          EXTRACT REWIND                                                       
%%                                                                              
%%                                                                              
%% SFAC and UNIT cards skipped for SUPERFLIP & EDMA                                                                              
%%                                                                              
%%                                                                              
%%                                                                              
%% Now, experience shows that the SCPDATA file is closed and                    
%% used for something else during the #COMPOSITION command.                     
%% We must reopen it before continuing.                                         
%%                                                                              
%           TRANSFER '#OPEN SCPDATA "' // CFILE // '"' TO CRYSTALS              
%         EXTRACT REWIND                                                        
%%                                                                              
%%                                                                              
%% Finally, find the atoms and peaks.                                           
%% Assume all lines not beginning with a recognised SHELX keyword               
%% are atom records. This causes failure for files with reflections             
%% in, though I'm sure someone could fix this by making it stop                 
%% at an HKLF instruction.                                                      
%%                                                                              
%        COPY '#SCRIPT ZSHELXIN'                                                
{R Shelx file processed.                                                        
%        COPY '#CLOSE SCPDATA'                                                  
%        IF ( ATOMCOUNT .EQ. 0 ) THEN                                           
{I No atoms found                                                               
%        ELSE                                                                   
%          BLOCK                                                                
%            IF LQS .EQ. TRUE THEN                                              
%              EVALUATE QTITLE = 'Change Q atoms?'                              
%              EVALUATE QLINE1 = 'Do you want to change all Q'                  
%              EVALUATE QLINE2 = 'atoms to Carbon?'                             
%              EVALUATE BUTTOK = '&Yes'
%              EVALUATE BUTTXX = '&No'                                          
%              COPY '#SCRIPT XQUESTIO'
%              IF ANSWER .EQ. TRUE THEN                                         
%               COPY '#EDIT'                                                    
%               COPY 'TYPECHANGE TYPE EQ Q C'                                   
%               COPY 'END'                                                      
%              END IF                                                           
%            END IF                                                             
%%                                                                              
%% Change SHELX occupancies (cryst) to CRYSTALS occupancies (chem)              
%%                                                                              
%            BLOCK                                                              
%%                                                                              
%% Put crystallographic occupancy into 'SPARE' (offset 13)                      
%%                                                                              
%             COPY '#SPEC TEST PARAMETER .01'                                   
%             COPY 'END'                                                        
%%                                                                              
%             ON EDITERROR TERMINATE                                            
%             COPY '#GENERALEDIT 5'                                             
%             COPY 'LOCATE RECORDTYPE=101'                                      
%             COPY 'ERROR MESS=NO SIGN=NONE ACTI=CONT NAME=EDITERROR'           
%             LOOP                                                              
%              ON EDITERROR TERMINATE                                           
%              COPY 'TRANSFER FROM OFFSET=2 TO SXOCC'                           
%              COPY 'TRANSFER FROM OFFSET=13 TO SPECOCC'                        
%%                                                                              
%% Divide shelx occ by SPARE to give chemical occupancy.                        
%%                                                                              
%              IF ( SPECOCC .LE. 0.0 ) THEN                                     
%                EVALUATE SPECOCC = 1.0                                         
%              END IF                                                           
%              EVALUATE CRYOCC = SXOCC / SPECOCC                                
%              COPY 'TRANSFER TO OFFSET=2 FROM CRYOCC'                          
%              COPY 'NEXT'                                                      
%             END LOOP                                                          
%%
%% End of list 5 - EditError jumps out of loop.                                 
%%
%             COPY 'WRITE'                                                      
%             COPY 'END'                                                        
%            END BLOCK                                                          
%          END BLOCK                                                            
%%                                                                              
%%                                                                              
%          BLOCK                                                                
%% Only renumber if importing solution (i.e. Qs).                               
%            IF LQS .EQ. TRUE THEN                                              
%              COPY '#SCRIPT XRENUMB'                                           
%            END IF                                                             
%          END BLOCK                                                            
%%                                                                              
%          BLOCK                                                                
%             COPY '#DISTANCES'                                                 
%             COPY 'END'                                                        
%          END BLOCK                                                            
%%                                                                              
%% SET Solution type (only if atoms were passed in!)                            
%%                                                                              
%          COPY '#GENERALEDIT 30'                                               
%          COPY 'LOCATE RECORDTYPE=106'                                         
%          COPY 'CHANGE OFFSET=12 MODE=INTEGER INTEGER=1'                       
%          COPY 'WRITE'                                                         
%          COPY 'END'                                                           
%        END IF                                                                 
%%                                                                              
%        FINISH                                                                 
%END SCRIPT
