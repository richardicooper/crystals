%SCRIPT SGIN
% VARIABLE INTEGER NRES NREG NTEST NGLEN NSG CURSG CURCLA CURCON
% VARIABLE REAL SCORE
% VARIABLE INTEGER CLAOFF SGOFF CTEST CREG
% VARIABLE INTEGER CCONDH CCONDK CCONDL CCONDN
% VARIABLE INTEGER CCL11 CCL12 CCL13 CCL21 CCL22 CCL23 CCL31 CCL32 CCL33
%%
%% Check for output file
%%
% IF .NOT. FILEEXISTS 'sg.dat' THEN
{E No output file found. SpaceGroup determination program must have failed.
{I File a bug report!
%  FINISH
% END IF
%%
%% Open the output file.
%%
% COPY '#CLOSE SCPDATA'
% COPY '#OPEN SCPDATA sg.dat'
%%
%%
%% Create window.
%%
^^WI WINDOW SGIN 'Space group results' MODAL COMMIT='SG_BXX' CANCEL='SG_BXX'
^^WI SIZE LARGE KEEP POSITION=CENTRED '_MAINTEXTOUTPUT'
^^WI GRID SG1 NROWS=5 NCOLS=5
^^WI {
^^WI   @ 2,2 GRID SG2 NROWS=2 NCOLS=3
^^WI   {
^^WI     @ 1,1 STATIC SGT1 'Total number of reflections: '
^^WI     @ 2,1 STATIC SGT2 'Average intensity of reflections: '
^^WI     @ 1,3 STATIC ALLNREF '0000000'
^^WI     @ 2,3 STATIC ALLAVI '0.00000'
^^WI   }
^^WI   @ 4,2 GRID SG3 NROWS=1 NCOLS=3
^^WI   {
^^WI     @ 1,1 LISTCTRL SGRES VISLINES=15 NCOLS=2
^^WI           'Space group' 'Score' INFORM=YES ADDTOLIST
%% Scan file to get SGs, also remember offsets of data.
%         COPY '#SCRIPT SGIN1'
^^WI           NULL
^^WI     @ 1,3 GRID SG4 NROWS=3 NCOLS=1
^^WI     {
^^WI       @ 2,1 PLOTWINDOW _SPGA NROWS=20 NCOLS=64
^^WI       @ 3,1 GRID SG5 NROWS=1 NCOLS=4
^^WI       {
^^WI         @ 1,1 STRETCH SGS HORIZONTAL
^^WI         @ 1,2 BUTTON SG_BOK 'Apply space group' DEFAULT COMMIT
^^WI         @ 1,4 BUTTON SG_BXX 'Cancel' CANCEL
^^WI       }
^^WI       @ 1,1 GRID SG6 NROWS=1 NCOLS=5 OUTLINE='Details'
^^WI       {
^^WI         @ 1,1 GRID SG7 NROWS=2 NCOLS=1
^^WI         {
^^WI           @ 1,1 STATIC SG3 'Reflection Classes'
^^WI           @ 2,1 LISTBOX SGCLASS VISLINES=7 INFORM=YES
^^WI         }
^^WI         @ 1,3 GRID SG8 NROWS=2 NCOLS=1
^^WI         {
^^WI           @ 1,1 STATIC SG4 'Reflection Conditions'
^^WI           @ 2,1 LISTBOX SGCOND VISLINES=7 INFORM=YES
^^WI         }
^^WI         @ 1,5 GRID SG10 NROWS=8 NCOLS=5
^^WI         {
^^WI             @ 1,1 STATIC SG43 'Condition'
^^WI             @ 3,1 STATIC SG43 'Number'
^^WI             @ 4,1 STATIC SG44 '<I>'
^^WI             @ 6,1 STATIC SG45 'I>3u(I)'
^^WI             @ 7,1 STATIC SG47 'Score 1:'
^^WI             @ 8,1 STATIC SG48 'Score 2:'
^^WI             @ 1,3 STATIC SG6 'TRUE'
^^WI             @ 1,5 STATIC SG6 'FALSE'
^^WI             @ 2,3 STATIC SG6 '-----'
^^WI             @ 2,5 STATIC SG6 '-----'
^^WI             @ 3,3 STATIC SGNT '0'
^^WI             @ 3,5 STATIC SGNF '0'
^^WI             @ 4,3 STATIC SGAT '0.00000'
^^WI             @ 4,5 STATIC SGAF '0.00000'
^^WI             @ 6,3 STATIC SGGT '0'
^^WI             @ 6,5 STATIC SG46 '%'
^^WI             @ 7,3 STATIC SGS1 '0'
^^WI             @ 8,3 STATIC SGS2 '0'
^^WI         }
^^WI       }
^^WI     }
^^WI   }
^^WI }
%%
%% Set current selection to 1, update class and condition lists.
%%
%%
^^WI SHOW
^^CR
^^CO SET SGRES SELECTION=1
%%
%%
% EXTRACT REWIND
% LOOP
%   VERIFY SG_BXX SGRES SGCLASS SGCOND SG_BOK
%   GET SILENT NOSTORE ABBREVIATED ' ' ' '
%   CASE VALUE
%    BLOCK               %SGBXX
^^CO   DISPOSE SGIN
%      COPY '#CLOSE SCPDATA'
%      FINISH
%    END BLOCK
%    BLOCK               %SGRES
%      VERIFY SELECTED UNSELECTED
%      GET SILENT NOSTORE FINAL ABBREVIATED ' ' ' '
%      IF VALUE .EQ. 2 THEN
%        GET SILENT NOSTORE INTEGER ' ' '1'
%      ELSE
%        GET SILENT NOSTORE INTEGER ' ' '1'
%        EVALUATE CURSG = VALUE
%        COPY '#SCRIPT SGIN3'
%      END IF
%    END BLOCK
%    BLOCK               %SGCLASS
%      GET SILENT NOSTORE INTEGER ' ' '1'
%      EVALUATE CURCLA = VALUE
%      COPY '#SCRIPT SGIN4'
%    END BLOCK
%    BLOCK               %SGCOND
%      GET SILENT NOSTORE INTEGER ' ' '1'
%      EVALUATE CURCON = VALUE
%      COPY '#SCRIPT SGIN5'
%    END BLOCK
%    BLOCK               %SGBOK
%      CLEAR
%      INSERT '^^?? SGRES LISTITEM '
%      STORE INTEGER CURSG
%      INSERT ' 1'
%      OUTPUT
%      COPY '#SPACEGROUP'
%      CLEAR
%      INSERT 'SYMBOL '
%      GET SILENT TEXT ' ' 'Error'
%      TRANSFER CVALUE TO DISPLAY
%      SEND
%      COPY 'END'
^^CO   DISPOSE SGIN
%      COPY '#CLOSE SCPDATA'
%      FINISH
%    END BLOCK
%   END CASE
% END LOOP
%END SCRIPT
