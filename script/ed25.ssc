%SCRIPT ED25
%%
%% Allows twin laws to be added to L25, if ROTAX
%% proposes a twin law it can be passed in, ready
%% to be added when the user presses Apply.
%% It is intended to eventually create some tools for looking
%% at overlap, checking that twin law isn't in SG's Laue symmetry etc.
%%
%% Set up variables:
%%
% VARIABLE LOGICAL IS25 MATCHG TWINNED
% VARIABLE INTEGER N25 NEL CURMAT LOOPCOUNTER N25I ITMP
%% The element scales from L5:
% VARIABLE REAL    EL1 EL2 EL3 EL4 EL5 EL6 EL7 EL8 EL9 RVAL
%% Whether the user has changed the twin law:
% VARIABLE LOGICAL CH1 CH2 CH3 CH4 CH5 CH6 CH7 CH8 CH9
%% Matrix operations
% VARIABLE REAL MATRIX:M11 MATRIX:M12 MATRIX:M13
% VARIABLE REAL MATRIX:M21 MATRIX:M22 MATRIX:M23
% VARIABLE REAL MATRIX:M31 MATRIX:M32 MATRIX:M33
% VARIABLE REAL MATRIX:A11 MATRIX:A12 MATRIX:A13
% VARIABLE REAL MATRIX:A21 MATRIX:A22 MATRIX:A23
% VARIABLE REAL MATRIX:A31 MATRIX:A32 MATRIX:A33
%% The variables needed by XQUESTIO
% VARIABLE CHARACTER QTITLE QLINE1 QLINE2 BUTTOK BUTTXX
% VARIABLE LOGICAL   ANSWER
%%
%% Get some initial information:
%%
% EVALUATE CURMAT = 1
% EVALUATE MATCHG = TRUE
% EVALUATE IS25 =  ( ( EXISTS 25 ) .NE. 0 )
% IF ( IS25 ) THEN
%   COPY '#GENERALEDIT 25'
%   COPY 'TRANSHEAD FROM OFFSET=3 TO N25'
%   COPY 'END'
% ELSE
%   COPY '#LIST 25'
%   COPY 'READ NELEM = 1'
%   COPY 'MATRIX 1 0 0 0 1 0 0 0 1'
%   COPY 'END'
%   EVALUATE N25 = 1
% END IF
%%
% VARIABLE INTEGER ITMP
% IF ( ( EXISTS 13 ) .EQ. 1 ) THEN
%   COPY '#GENERALEDIT 13'
%   COPY 'LOCATE RECORDTYPE=101'
%   COPY 'TRANSFER FROM OFFSET=1 TO ITMP'
%   EVALUATE TWINNED = FALSE
%   IF ( ITMP .GE. 0 ) THEN
%     EVALUATE TWINNED = TRUE
%   END IF
%   COPY 'END'
% END IF
%%
% IF ( ( EXISTS 5 ) .NE. 0 ) THEN
%   COPY '#GENERALEDIT 5'
%   COPY 'TRANSHEAD FROM OFFSET=22 TO NEL'
%   COPY 'LOCATE RECORDTYPE=105'
%   COPY 'ERROR MESS=NO SIGN=NONE ACTI=CONT NAME=EDITERROR'
%% There is only one record for twin element scales
%   COPY 'TOP'
%   LOOP NEL TIMES
%     CASE LOOPCOUNTER
%       COPY 'TRANSFER FROM OFFSET = 0 TO EL1'  
%       COPY 'TRANSFER FROM OFFSET = 1 TO EL2'
%       COPY 'TRANSFER FROM OFFSET = 2 TO EL3'
%       COPY 'TRANSFER FROM OFFSET = 3 TO EL4'
%       COPY 'TRANSFER FROM OFFSET = 4 TO EL5'
%       COPY 'TRANSFER FROM OFFSET = 5 TO EL6'
%       COPY 'TRANSFER FROM OFFSET = 6 TO EL7'
%       COPY 'TRANSFER FROM OFFSET = 7 TO EL8'
%       COPY 'TRANSFER FROM OFFSET = 8 TO EL9'
%     END CASE
%   END LOOP
%   COPY 'END'
% END IF
%%
%% Create main twin laws window:
%%
^^WI WINDOW ED25 'Proposed Twin Laws' MODAL
^^WI POSITION=CENTRED '_MAIN'
^^WI GRID MN NROWS=5 NCOLS=3
^^WI {
^^WI   @ 2,2 GRID G NROWS=1 NCOLS=3
^^WI   {
^^WI     @ 1,1 GRID G NROWS=3 NCOLS=1
^^WI     {
^^WI       @ 1,1 LISTBOX TLAWS VISLINES=9 INFORM=YES
^^WI              ADDTOLIST
% LOOP N25 TIMES
%   CLEAR
%   STORE CHARACTER COMPRESS ( "^^WI 'Twin law " // -
 CHARACTER LOOPCOUNTER // "'" )
%   OUTPUT
% END LOOP
^^WI              'NULL'
^^WI       @ 3,1 BUTTON ADD25 'A&dd twin law'
^^WI     }
^^WI     @ 1,3 GRID GB NROWS=3 NCOLS=1 OUTLINE='Details for this twin law:'
^^WI     {
^^WI       @ 1,1 GRID GBB NROWS=5 NCOLS=5
^^WI       {
%% First time I've tried this: the editboxes have spaces in their
%% names so when they are changed I can handle them all in one switch -
%% just detecting the 'M' and then reading the number.
^^WI           @ 1,1 EDITBOX 'M25 1' '1.000' CHARS=9 REAL INFORM=YES
^^WI           @ 1,3 EDITBOX 'M25 2' '0.000' CHARS=9 REAL INFORM=YES
^^WI           @ 1,5 EDITBOX 'M25 3' '0.000' CHARS=9 REAL INFORM=YES
^^WI           @ 3,1 EDITBOX 'M25 4' '0.000' CHARS=9 REAL INFORM=YES
^^WI           @ 3,3 EDITBOX 'M25 5' '1.000' CHARS=9 REAL INFORM=YES
^^WI           @ 3,5 EDITBOX 'M25 6' '0.000' CHARS=9 REAL INFORM=YES
^^WI           @ 5,1 EDITBOX 'M25 7' '0.000' CHARS=9 REAL INFORM=YES
^^WI           @ 5,3 EDITBOX 'M25 8' '0.000' CHARS=9 REAL INFORM=YES
^^WI           @ 5,5 EDITBOX 'M25 9' '1.000' CHARS=9 REAL INFORM=YES
^^WI       }                   
^^WI       @ 3,1 GRID GBC NROWS=1 NCOLS=5 {
^^WI           @ 1,1 STATIC RT_T4 'Volume fraction'
^^WI           @ 1,3 EDITBOX VOLF '1.0' CHARS=9 REAL INFORM=YES
^^WI           @ 1,5 BUTTON REM25 '&Remove twin law'
^^WI       }
^^WI     }
^^WI   }
^^WI   @ 4,2 GRID B NROWS=2 NCOLS=11
^^WI   {
^^WI     @ 1,1 STATIC T_T4 'Overlap tolerance'
^^WI     @ 1,3 EDITBOX TOL25 '0.005' CHARS=9 REAL
^^WI     @ 1,5 STATIC T_T4 'Angstrom**-2'
^^WI     @ 1,6 STRETCH T_STR2 HORIZONTAL
^^WI     @ 1,7 BUTTON BOK25 '&Apply twin law' DEFAULT COMMIT
^^WI     @ 1,9 BUTTON BXX25 '&Cancel' CANCEL
^^WI   }
^^WI }
^^WI SHOW
^^CR
%% From now on we are editing list 25. There is a limit of 9999 TRANSFER
%% directives per GENEDIT, we may be able to fix this in future.
% COPY '#GENERALEDIT 25'
% COPY 'LOCATE RECORDTYPE=101'
% COPY 'ERROR MESS=NO SIGN=NONE ACTI=CONT NAME=EDITERROR'
% LOOP
%  IF ( MATCHG ) THEN
%% current matrix changed - dig out details and change
%   EVALUATE MATCHG = FALSE
^^?? TLAWS SELECTED
%   GET NOSTORE SILENT INTEGER ' ' ' '
%   EVALUATE CURMAT = VALUE
%   COPY 'TOP'
%   LOOP ( CURMAT - 1 ) TIMES
%     COPY 'NEXT'
%   END LOOP
%   LOOP 9 TIMES
%     CLEAR
%     INSERT 'TRANSFER FROM OFFSET='
%     STORE INTEGER LOOPCOUNTER - 1
%     INSERT ' TO RVAL'
%     SEND
%     CLEAR
%     INSERT '^^CO SET '
%     STORE CHARACTER COMPRESS ( ' "M25 ' // CHARACTER LOOPCOUNTER // '" ' )
%     INSERT ' TEXT '
%     STORE REAL RVAL
%     OUTPUT
%   END LOOP
%   CASE CURMAT
%     TRANSFER '^^CO SET VOLF TEXT ' // CHARACTER EL1 TO DISPLAY
%     TRANSFER '^^CO SET VOLF TEXT ' // CHARACTER EL2 TO DISPLAY
%     TRANSFER '^^CO SET VOLF TEXT ' // CHARACTER EL3 TO DISPLAY
%     TRANSFER '^^CO SET VOLF TEXT ' // CHARACTER EL4 TO DISPLAY
%     TRANSFER '^^CO SET VOLF TEXT ' // CHARACTER EL5 TO DISPLAY
%     TRANSFER '^^CO SET VOLF TEXT ' // CHARACTER EL6 TO DISPLAY
%     TRANSFER '^^CO SET VOLF TEXT ' // CHARACTER EL7 TO DISPLAY
%     TRANSFER '^^CO SET VOLF TEXT ' // CHARACTER EL8 TO DISPLAY
%     TRANSFER '^^CO SET VOLF TEXT ' // CHARACTER EL9 TO DISPLAY
%   END CASE
% END IF
%   VERIFY BXX25 M25 TLAWS ADD25 REM25 VOLF BOK25
%   GET SILENT NOSTORE ABBREVIATED ' ' ' '
%   CASE VALUE
%     BLOCK       %BXX25 - close window
%% Don't write L25, just close genedit.
%       COPY 'END'
^^CO    DISPOSE ED25
%       FINISH
%     END BLOCK
%     BLOCK       %M25 - something changed in current matrix
%       CLEAR
%       INSERT 'TRANSFER TO OFFSET='
%       GET SILENT NOSTORE INTEGER ' ' '1'
%       STORE INTEGER VALUE - 1
%       INSERT ' FROM RVAL'
%       GET SILENT NOSTORE REAL ' ' '0.0'
%       EVALUATE RVAL = VALUE
%       SEND
%     END BLOCK
%     BLOCK       %TLAWS - indicate matrix changed
%       GET NOSTORE SILENT INTEGER ' ' ' '
%       EVALUATE MATCHG = TRUE
%     END BLOCK
%     BLOCK       %ADD25 - add a new element to L25 & L25I
%        COPY 'TOP'
%        LOOP N25 - 1 TIMES
%          COPY 'NEXT'
%        END LOOP
%        COPY 'INSERT'
%        EVALUATE RVAL = 1.0
%        COPY 'TRANSFER TO OFFSET=0 FROM RVAL'
%        COPY 'TRANSFER TO OFFSET=4 FROM RVAL'
%        COPY 'TRANSFER TO OFFSET=8 FROM RVAL'
%        EVALUATE RVAL = 0.0
%        COPY 'TRANSFER TO OFFSET=1 FROM RVAL'
%        COPY 'TRANSFER TO OFFSET=2 FROM RVAL'
%        COPY 'TRANSFER TO OFFSET=3 FROM RVAL'
%        COPY 'TRANSFER TO OFFSET=5 FROM RVAL'
%        COPY 'TRANSFER TO OFFSET=6 FROM RVAL'
%        COPY 'TRANSFER TO OFFSET=7 FROM RVAL'
%        EVALUATE N25 = N25 + 1
%        CLEAR
%        INSERT '^^CO SET TLAWS ADDTOLIST '
%        STORE CHARACTER COMPRESS ( "'Twin law " // CHARACTER N25 // "'" )
%        OUTPUT
%        CLEAR
%        INSERT '^^CO SET TLAWS SELECTION='
%        STORE INTEGER N25
%        OUTPUT
%        EVALUATE CURMAT = N25
%     END BLOCK
%     BLOCK       %REM25 - remove element from L25 & L25I
%        COPY 'TOP'
%        LOOP N25 TIMES
%          IF LOOPCOUNTER .GT. CURMAT THEN
%            CASE LOOPCOUNTER - 1
%              EVALUATE EL1 = EL2
%              EVALUATE EL2 = EL3
%              EVALUATE EL3 = EL4
%              EVALUATE EL4 = EL5
%              EVALUATE EL5 = EL6
%              EVALUATE EL6 = EL7
%              EVALUATE EL7 = EL8
%              EVALUATE EL8 = EL9
%            END CASE
%          END IF
%        END LOOP
%        LOOP CURMAT - 1 TIMES
%          COPY 'NEXT'
%        END LOOP
%        COPY 'DELETE'
%        EVALUATE RVAL = 1.0
%        COPY 'TRANSFER TO OFFSET=0 FROM RVAL'
%        COPY 'TRANSFER TO OFFSET=4 FROM RVAL'
%        COPY 'TRANSFER TO OFFSET=8 FROM RVAL'
%        EVALUATE N25 = N25 - 1
^^WI     SET TLAWS REMOVE 0 ADDTOLIST
%        LOOP N25 TIMES
%          CLEAR
%     STORE CHARACTER COMPRESS ( "^^WI 'Twin law " // -
            CHARACTER LOOPCOUNTER // "'" )
%          OUTPUT
%        END LOOP
^^CR
%     END BLOCK
%     BLOCK       %VOLF - update vol fraction for current matrix.
%       GET SILENT NOSTORE REAL ' ' '0.0'
%       EVALUATE RVAL = VALUE
%       CASE CURMAT
%         EVALUATE EL1 = RVAL
%         EVALUATE EL2 = RVAL
%         EVALUATE EL3 = RVAL
%         EVALUATE EL4 = RVAL
%         EVALUATE EL5 = RVAL
%         EVALUATE EL6 = RVAL
%         EVALUATE EL7 = RVAL
%         EVALUATE EL8 = RVAL
%         EVALUATE EL9 = RVAL
%       END CASE
%     END BLOCK
%     BLOCK       %BOK25 - gosh, lots to do. Don't forget inverse matrices.
%%
%% For each matrix in L25, put the inverse matrix in L25I
%%
%% 1) Remove ALL inverse matrices.
%       COPY 'TRANSHEAD FROM OFFSET=7 TO N25I'
%       COPY 'LOCATE RECORDTYPE=102'
%       COPY 'TOP'
%       LOOP N25I TIMES
%         COPY 'DELETE'
%       END LOOP
%%
%% Fetch each matrix, invert and store in L25I.
%%
%       LOOP N25 TIMES
%         COPY 'LOCATE RECORDTYPE=101'
%         LOOP ( LOOPCOUNTER - 1 ) TIMES
%            COPY 'NEXT'
%         END LOOP
%         COPY 'TRANSFER FROM OFFSET=0 TO MATRIX:A11'
%         COPY 'TRANSFER FROM OFFSET=1 TO MATRIX:A12'
%         COPY 'TRANSFER FROM OFFSET=2 TO MATRIX:A13'
%         COPY 'TRANSFER FROM OFFSET=3 TO MATRIX:A21'
%         COPY 'TRANSFER FROM OFFSET=4 TO MATRIX:A22'
%         COPY 'TRANSFER FROM OFFSET=5 TO MATRIX:A23'
%         COPY 'TRANSFER FROM OFFSET=6 TO MATRIX:A31'
%         COPY 'TRANSFER FROM OFFSET=7 TO MATRIX:A32'
%         COPY 'TRANSFER FROM OFFSET=8 TO MATRIX:A33'
%         COPY 'WRITE'
%         COPY 'END'
%         COPY '#MATRIX'
%         COPY 'SCR2A'
%         COPY 'INV'
%         COPY 'END'
%         COPY '#GENERALEDIT 25'
%         COPY 'LOCATE RECORDTYPE=102'
%         COPY 'ERROR MESS=NO SIGN=NONE ACTI=CONT NAME=EDITERROR'
%         LOOP ( LOOPCOUNTER - 1 ) TIMES
%            COPY 'NEXT'
%         END LOOP
%         COPY 'INSERT'
%         COPY 'TRANSFER TO OFFSET=0 FROM MATRIX:M11'
%         COPY 'TRANSFER TO OFFSET=1 FROM MATRIX:M12'
%         COPY 'TRANSFER TO OFFSET=2 FROM MATRIX:M13'
%         COPY 'TRANSFER TO OFFSET=3 FROM MATRIX:M21'
%         COPY 'TRANSFER TO OFFSET=4 FROM MATRIX:M22'
%         COPY 'TRANSFER TO OFFSET=5 FROM MATRIX:M23'
%         COPY 'TRANSFER TO OFFSET=6 FROM MATRIX:M31'
%         COPY 'TRANSFER TO OFFSET=7 FROM MATRIX:M32'
%         COPY 'TRANSFER TO OFFSET=8 FROM MATRIX:M33'
%       END LOOP
%       COPY 'WRITE'
%       COPY 'END'
%%
%% Update L5 ELEMENT card.
%%
% IF ( ( EXISTS 5 ) .NE. 0 ) THEN
%   COPY '#GENERALEDIT 5'
%   COPY 'ERROR MESS=NO SIGN=NONE ACTI=CONT NAME=EDITERROR'
%   COPY 'LOCATE RECORDTYPE=105'
%% Insert new record.
%   COPY 'TRANSHEAD TO OFFSET=22 FROM N25'
%   COPY 'INSERT'
%   IF NEL .GT. 0 THEN
%% Remove old record
%     COPY 'DELETE'
%   END IF
%   COPY 'TRANSHEAD TO OFFSET=22 FROM N25'
%   COPY 'TOP'
%   LOOP N25 TIMES
%     CASE LOOPCOUNTER
%       COPY 'TRANSFER TO OFFSET = 0 FRO EL1'  
%       COPY 'TRANSFER TO OFFSET = 1 FRO EL2'
%       COPY 'TRANSFER TO OFFSET = 2 FRO EL3'
%       COPY 'TRANSFER TO OFFSET = 3 FRO EL4'
%       COPY 'TRANSFER TO OFFSET = 4 FRO EL5'
%       COPY 'TRANSFER TO OFFSET = 5 FRO EL6'
%       COPY 'TRANSFER TO OFFSET = 6 FRO EL7'
%       COPY 'TRANSFER TO OFFSET = 7 FRO EL8'
%       COPY 'TRANSFER TO OFFSET = 8 FRO EL9'
%     END CASE
%   END LOOP
%   COPY 'WRITE'
%   COPY 'END'
% END IF
%%
% IF ( TWINNED ) THEN
%%  The reflection list may already be twinned format.
%%  Need to revert using PRETWIN6.DAT, if it doesn't exist, it is
%%  too risky to continue.
%   IF FILEEXISTS 'pretwin6.dat' .EQ. TRUE THEN
{I * Temporarily restoring orignal (untwinned) hkl data.
%     COPY '#USE pretwin6.dat'
%   ELSE
{E There is a problem:
{I  It appears that you are trying to add/change a twin law in a model that
{I  already contains two or more twin components. (reason: the TWINNED
{I  flag is set in LIST 13).

{I  The usual way of handling this is to read in your original data (hkl)
{I  and create a new twinned hkl list from scratch using the twin laws
{I  provided.

{I  In this case the file that should contain a backup of your original
{I  hkl data (pretwin6.dat) is missing. (This may be because you added
{I  the existing twin laws manually).

{R  The easiest solution is to import your original reflection data (X-ray
{R  data menu), and then run this script again.
%   END IF
% ELSE
%%  The reflection list is not already twinned format.
%%  Write a pretwin6.dat for later recovery.
{S * Backing-up the existing observations to 'pretwin6.dat'
%   COPY '#RELEASE PUNCH pretwin6.dat'
%           COPY '#PUNCH 6 C'
%           COPY 'END'
% END IF
{S * Converting the reflection list to twinned (FOT) format.
%           COPY '#LIST 6'
%           COPY 'READ TYPE=TWIN'
%           CLEAR
%           INSERT 'MATRIX TWINTOL='
^^?? TOL25 TEXT
%           GET SILENT REAL ' ' '0.0'
%           SEND
%           COPY 'END'
%           EVALUATE QTITLE = 'View List 6?'
%           EVALUATE QLINE1 = 'Do you want to look at the reflection'
%           EVALUATE QLINE2 = 'file to verify the ELEMENT assignments?'
%           EVALUATE BUTTOK = '&Yes'
%           EVALUATE BUTTXX = '&No'
%           COPY '#SCRIPT XQUESTIO'
%           IF ANSWER .EQ. TRUE THEN
%              COPY '#SCRIPT VULIST6' 
%           END IF
%           FINISH
^^CO    DISPOSE ED25
%       FINISH
%     END BLOCK
%   END CASE
% END LOOP
% GET NOSTORE TEXT ' ' ' '
%END SCRIPT
                                  
