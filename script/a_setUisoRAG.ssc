%SCRIPT SETUISORAG
%%
%  VARIABLE CHARACTER ATOM
%  VARIABLE INTEGER IOPTION
%%
%  VARIABLE CHARACTER MODE CELE CCHK CLINE
%% VARIABLE CHARACTER CTITLE CPOSITION CTEXT1 CTEXT2 CTEXT3
%%
%  VARIABLE INTEGER IPAR1 IPAR2 ISER
%  VARIABLE REAL RPKH RCHK RU11
%%
%  VARIABLE INTEGER IATOMCOUNT
%  VARIABLE REAL MEANUISO
%%
%% VARIABLE INTEGER IRESIDUE IASSEMBLY IPART INEWVAL IPAR
%% VARIABLE LOGICAL ISFREER ISFREEA ISFREEP LDOCHANGE
%  VARIABLE LOGICAL LSETMEAN
%%
%% We need to change the names as otherwise they are not local anymore and other scripts
%% may experience problems. I have addes S for subroutine. MN
%%
%  VARIABLE INTEGER IPRTS IHYBS IPEGS IPEPS
%%
%% The parameters IOPTION and ATOM are provided by the calling script.
%% Meanings of IOPTION: 1 = RESIDUE, 2 = ASSEMBLY, 3 = GROUP, always LSETMEAN = FALSE
%% Meanings of IOPTION: 4 = RESIDUE, 5 = ASSEMBLY, 6 = GROUP, always LSETMEAN = TRUE
%%
%  EVALUATE MODE = "none"
%  CASE IOPTION
%    EVALUATE MODE = "residue"
%    EVALUATE MODE = "assembly"
%    EVALUATE MODE = "group"
%    EVALUATE MODE = "residue"
%    EVALUATE MODE = "assembly"
%    EVALUATE MODE = "group"
%  END CASE
%  CASE IOPTION
%    EVALUATE LSETMEAN = FALSE
%    EVALUATE LSETMEAN = FALSE
%    EVALUATE LSETMEAN = FALSE
%    EVALUATE LSETMEAN = TRUE
%    EVALUATE LSETMEAN = TRUE
%    EVALUATE LSETMEAN = TRUE
%  END CASE
%%
%  EVALUATE IATOMCOUNT = 0
%  EVALUATE MEANUISO = 0.0
%%
%  EVALUATE CELE = FIRSTSTR ( ATOM )
%  EVALUATE ISER = FIRSTINT ( ATOM )
%%
%% TRANSFER '{I Atom type: ' // CELE // ', serial: ' // CHARACTER ( ISER ) TO DISPLAY
%%
%  BLOCK
%    ON EDITERROR TERMINATE
%    COPY '#GENERALEDIT 5'
%    COPY 'LOCATE RECORDTYPE=101'
%    COPY 'ERROR MESS=NO SIGN=NONE ACTI=CONT NAME=EDITERROR'
%    LOOP
%     ON EDITERROR TERMINATE
%     COPY 'TRANSFER FROM OFFSET=0 TO CCHK'
%     COPY 'TRANSFER FROM OFFSET=1 TO RCHK'
%     IF ( ( CELE .EQ. CCHK ) .AND. ( ISER .EQ. INTEGER ( RCHK ) ) ) THEN
%      COPY 'TRANSFER FROM OFFSET=14 TO IPRTS'
%      COPY 'TRANSFER FROM OFFSET=16 TO IHYBS'
%      COPY 'END'
%      EVALUATE LOOPEND = LOOPCOUNTER
%      EVALUATE IPEGS = IPRTS / 1000
%      EVALUATE IPEPS = IPRTS - ( IPEGS * 1000 )
%%
%      EVALUATE IPAR1 = 0
%      CASE IOPTION
%       EVALUATE IPAR1 = IHYBS
%       EVALUATE IPAR1 = IPEGS
%       EVALUATE IPAR1 = IPEPS
%       EVALUATE IPAR1 = IHYBS
%       EVALUATE IPAR1 = IPEGS
%       EVALUATE IPAR1 = IPEPS
%      END CASE
%%
%     END IF
%     COPY 'NEXT'
%    END LOOP
%  END BLOCK
%%
%  TRANSFER '{I The ' // MODE // ' we want to make isotropic has the number ' // CHARACTER ( IPAR1 ) // '.' TO DISPLAY
%%
%% EVALUATE IPAR = IPAR1
%%
%  QUEUE REWIND
%  QUEUE COPY #EDIT
%  QUEUE COPY MONITOR OFF
%%
%  BLOCK
%    ON EDITERROR TERMINATE
%    COPY '#GENERALEDIT 5'
%    COPY 'LOCATE RECORDTYPE=101'
%    COPY 'ERROR MESS=NO SIGN=NONE ACTI=CONT NAME=EDITERROR'
%    LOOP
%      ON EDITERROR TERMINATE
%      COPY 'TRANSFER FROM OFFSET=0 TO CCHK'
%      COPY 'TRANSFER FROM OFFSET=1 TO RCHK'
%      COPY 'TRANSFER FROM OFFSET=14 TO IPRTS'
%      COPY 'TRANSFER FROM OFFSET=16 TO IHYBS'
%      EVALUATE IPEGS = IPRTS / 1000
%      EVALUATE IPEPS = IPRTS - ( IPEGS * 1000 )
%%
%      EVALUATE IPAR2 = 0
%      CASE IOPTION
%        EVALUATE IPAR2 = IHYBS
%        EVALUATE IPAR2 = IPEGS
%        EVALUATE IPAR2 = IPEPS
%        EVALUATE IPAR2 = IHYBS
%        EVALUATE IPAR2 = IPEGS
%        EVALUATE IPAR2 = IPEPS
%      END CASE
%%
%      IF IPAR1 .EQ. IPAR2 THEN
%        EVALUATE CELE = FIRSTSTR ( CCHK )
%        EVALUATE ISER = INTEGER ( RCHK )
%        EVALUATE CLINE = "UEQUIV " // CELE // "(" // CHARACTER ( ISER ) // ")"
%        CLEAR
%        STORE CHARACTER CLINE
%        QUEUE SEND
%        EVALUATE IATOMCOUNT = IATOMCOUNT + 1
%      END IF
%      COPY 'NEXT'
%    END LOOP
%    COPY 'END'
%  END BLOCK
%%
%  QUEUE COPY END
%%
%  IF IATOMCOUNT .EQ. 0 THEN
%    TRANSFER "{I No atoms were changed." TO DISPLAY
%%   EVALUATE MEANUISO = 0.05
%    FINISH
%  END IF
%%
%  QUEUE PROCESS
%%
%  IF LSETMEAN THEN
%%
%    BLOCK
%      ON EDITERROR TERMINATE
%      COPY '#GENERALEDIT 5'
%      COPY 'LOCATE RECORDTYPE=101'
%      COPY 'ERROR MESS=NO SIGN=NONE ACTI=CONT NAME=EDITERROR'
%      LOOP
%        ON EDITERROR TERMINATE
%        COPY 'TRANSFER FROM OFFSET=0 TO CCHK'
%        COPY 'TRANSFER FROM OFFSET=1 TO RCHK'
%        COPY 'TRANSFER FROM OFFSET=14 TO IPRTS'
%        COPY 'TRANSFER FROM OFFSET=16 TO IHYBS'
%        EVALUATE IPEGS = IPRTS / 1000
%        EVALUATE IPEPS = IPRTS - ( IPEGS * 1000 )
%%
%        EVALUATE IPAR2 = 0
%        CASE IOPTION
%          EVALUATE IPAR2 = IHYBS
%          EVALUATE IPAR2 = IPEGS
%          EVALUATE IPAR2 = IPEPS
%          EVALUATE IPAR2 = IHYBS
%          EVALUATE IPAR2 = IPEGS
%          EVALUATE IPAR2 = IPEPS
%        END CASE
%%
%        IF IPAR1 .EQ. IPAR2 THEN
%          COPY 'TRANSFER FROM OFFSET=7 TO RU11'
%% Store Uiso in accumulator
%          EVALUATE MEANUISO = MEANUISO + RU11
%        END IF
%        COPY 'NEXT'
%      END LOOP
%      COPY 'END'
%    END BLOCK
%%
%    EVALUATE MEANUISO = MEANUISO / REAL ( IATOMCOUNT )
%%
%    QUEUE REWIND
%    QUEUE COPY #EDIT
%    QUEUE COPY MONITOR OFF
%    BLOCK
%      ON EDITERROR TERMINATE
%      COPY '#GENERALEDIT 5'
%      COPY 'LOCATE RECORDTYPE=101'
%      COPY 'ERROR MESS=NO SIGN=NONE ACTI=CONT NAME=EDITERROR'
%      LOOP
%        ON EDITERROR TERMINATE
%        COPY 'TRANSFER FROM OFFSET=0 TO CCHK'
%        COPY 'TRANSFER FROM OFFSET=1 TO RCHK'
%        COPY 'TRANSFER FROM OFFSET=14 TO IPRTS'
%        COPY 'TRANSFER FROM OFFSET=16 TO IHYBS'
%        EVALUATE IPEGS = IPRTS / 1000
%        EVALUATE IPEPS = IPRTS - ( IPEGS * 1000 )
%%
%        EVALUATE IPAR2 = 0
%        CASE IOPTION
%          EVALUATE IPAR2 = IHYBS
%          EVALUATE IPAR2 = IPEGS
%          EVALUATE IPAR2 = IPEPS
%          EVALUATE IPAR2 = IHYBS
%          EVALUATE IPAR2 = IPEGS
%          EVALUATE IPAR2 = IPEPS
%        END CASE
%%
%        IF IPAR1 .EQ. IPAR2 THEN
%          EVALUATE CELE = FIRSTSTR ( CCHK )
%          EVALUATE ISER = INTEGER ( RCHK )
%          EVALUATE CLINE = "CHANGE " // CELE // "(" // CHARACTER ( ISER ) // ", U[ISO]) " // CHARACTER ( MEANUISO )
%          CLEAR
%          STORE CHARACTER CLINE
%          QUEUE SEND
%        END IF
%        COPY 'NEXT'
%      END LOOP
%      COPY 'END'
%    END BLOCK
%%
%    QUEUE COPY END
%%
%    QUEUE PROCESS
%%
%    IF IATOMCOUNT .EQ. 1 THEN
%      TRANSFER "{I " // CHARACTER ( IATOMCOUNT ) // " atom has been made isotropic." TO DISPLAY
%    ELSE
%      TRANSFER "{I The U[iso] values of " // CHARACTER ( IATOMCOUNT ) // " atoms have been set to the common mean." TO DISPLAY
%    END IF
%%
%  ELSE
%%
%    IF IATOMCOUNT .EQ. 1 THEN
%      TRANSFER "{I " // CHARACTER ( IATOMCOUNT ) // " atom has been made isotropic." TO DISPLAY
%    ELSE
%      TRANSFER "{I " // CHARACTER ( IATOMCOUNT ) // " atoms were made isotropic." TO DISPLAY
%    END IF
%%
%  END IF
%%
%END SCRIPT