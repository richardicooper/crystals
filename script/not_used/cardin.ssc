%SCRIPT INCARDIF
%% Input of Cardiff EPSRC service F**2 data in (3F4.0,2F8.0) format
%  VARIABLE INTEGER REDUCT 

 ------------------------------------------------------------------------
 
  A data reduction script for Cardiff /Fo/**2 (3F4.0, 2F8.0) format data
 
  If your data is in another format you must quit this script by typing 
  'DIRECT' at the next available prompt and then type '#SCRIPT INITIAL' 

 ----------------------------------------------------------------------pm

%%
%  COPY '#LIST 28'
%  COPY 'END'
%%
%  IF ( EXISTS 1 + EXISTS 2 + EXISTS 3 + EXISTS 13 + EXISTS 23 -
   + EXISTS 29 .NE. 6 ) THEN
%    COPY '#SCRIPT INBASICS'
%    CLEAR
%  END IF
%% Get the hkl data filename
%  COPY  '#CLOSE HKLI'
%    BLOCK
%      ON ERROR REPEAT
%      CLEAR
%      INSERT '#OPEN HKLI'
%      GET FINAL FILENAME -
      
      'Filename of file containing reflections' 'S92.HKL'
%       SEND
%    END BLOCK
%%
%  EVALUATE REDUCT = 0
%    VERIFY YES NO
%    GET NOSTORE FINAL ABBREVIATED  -
     'Will  you want to SORT or MERGE the reflections' 'YES'
%    IF VALUE .EQ. 1 THEN
%      EVALUATE REDUCT = 1
%    END IF
%%
%  BLOCK
%    QUEUE REWIND
%    ON ERROR RESTART
%    CLEAR
%    INSERT "READ  F'S=NO NCOEF = 5 TYPE = FIXED CHECK = NO"
%    QUEUE SEND
%    CLEAR
%%
%    INSERT 'INPUT H K L /FO/ SIGMA(/FO/) '
%    QUEUE SEND
%%
%    CLEAR
%    INSERT 'FORMAT (3F4.0, 2F8.0)'
%    QUEUE SEND
%%
%    IF REDUCT .EQ. 1 THEN
%      CLEAR
%      INSERT 'STORE NCOEF=6'
%      QUEUE SEND
%      CLEAR      
%      INSERT 'OUTPUT INDICES /FO/ SIGMA(/FO/) RATIO/JCODE CORRECTIONS SERIAL '
%      QUEUE SEND
%    ELSE
%      CLEAR
%      INSERT 'STORE NCOEF=6'
%      QUEUE SEND
%      CLEAR 
%      INSERT 'OUTPUT INDICES /FO/ WEIGHT /FC/ PHASE RATIO/JCODE'
%      QUEUE SEND
%      CLEAR
%    END IF
%  END BLOCK
%%
%  IF ( REDUCT .EQ. 1 ) THEN
%    COPY '#HKLI'
%  ELSE
%    COPY '#LIST 6'
%  END IF
%  QUEUE PROCESS
%  COPY 'END'
%  COPY '#CLOSE HKLI'
%%
%  MESSAGE USER1 ' Error during reflection processing'
%  IF REDUCT = 1 THEN
%    ON ERROR TERMINATE USER1
%            
            
            * Removing systematically absent reflections

%    COPY '#SYSTEMATIC'
%    COPY 'END'
%    CLEAR
    
    If you wish to merge equivalent or multiple observations, 
    the reflection data must first be sorted.

%    VERIFY YES NO
%      GET NOSTORE FINAL ABBREVIATED  -
  'Do you wish to sort reflections?'  'YES'
%    IF VALUE .EQ. 1 THEN
            
          * Sorting reflections

%      COPY '#SORT'
%      COPY 'END'
%    END IF
%    CLEAR

 -------------------------------------------------------------------
 It is possible to merge reflections such that rogue /Fo/ values
 are down-weighted. So if one /Fo/ value differs considerably from
 the mean value it's significance is scaled down.  This approach  
 ought to lead to a lower merging R value.  To try out this option
 answer 'YES' to the next question concerning merging with weights.
 Otherwise just answer 'NO' to this question and then you can merge
 with unit weights as before - or not merge at all
 -------------------------------------------------------------------

%    VERIFY YES NO
%      GET NOSTORE FINAL ABBREVIATED  -
  
  'Do you wish to merge reflections with weights applied ?'  
%  IF VALUE .EQ. 1 THEN
%
          
          * Weighted merging of equivalent reflections
%      CLEAR
%      COPY '#MERGE'
%% with weighted merging scheme 
%      COPY 'WEIGHT SCHEME = 2 NPARAM = 6'
%      COPY 'PARAM 0.5 3.0 1.0 2.0 0.01 0.00001'
%      COPY 'END'
%  ELSE
%%

%    VERIFY YES NO
%      GET NOSTORE FINAL ABBREVIATED  -
  'Do you wish to merge reflections with unit weights?'  'YES'
%  IF VALUE .EQ. 1 THEN
%

          * Merging equivalent reflections
%      CLEAR
%      COPY '#MERGE'
%      COPY 'END'
%    END IF
%  END IF
%
%    IF REDUCT .EQ. 1 THEN

            * Final copy to DSC file
%      COPY '#LIST 6'
%      COPY 'READ TYPE = COPY'
%      COPY 'END'
%    END IF
%  END IF
%%

   We shall now save the processed /Fo/ data (List 6) as LIST6.DAT
   You can read this in at any later date without having to go through
   data reduction all over again (type '#USE LIST6.DAT')

%  COPY '#RELEASE PUNCH LIST6.DAT'
%  COPY '#PUNCH 6'
%  COPY 'END'
%  COPY '#RELEASE PUNCH crfile.pch'

%  COPY '#LIST 4'
%  COPY 'END'
%  COPY '#SCRIPT INLIST28'    

  Here is a summary of all of your current lists -

%  COPY '#PAUSE 1'
%  COPY '#SUMMARY EVERYTHING'
%  COPY 'END'
%  COPY '#RELEASE PRINTER crfile.lis'
%  COPY '#RELEASE LOG CRFILE.LOG'
%%
   
   The output from data reduction has been saved as initial.lis 
   The condensed instruction set  has been saved as INITIAL.DAT

%  COPY '#PAUSE 3'
%%
%  BLOCK
%     VERIFY YES NO
%     GET FINAL ABBREVIATED -
      'Do you want to try to solve the structure ? ' 'YES'
%     IF ( VALUE .EQ. 1 ) THEN
%       COPY '#SCRIPT STRUCTUR'
%     END IF
%  END BLOCK
%%
%END SCRIPT
