%SCRIPT XFLIPIN                                                                 
%%                                                                              
%% Read in a the cell, symm and atoms from a shelx file.                        
%%                                                                              
{R Script version by R. Cooper. Based on the fortran program SXTOCA by          
{R R.O. Gould, The University of Edinburgh, March 1994.                         
{R Slightly modified for use with Superflip                                     
%%                                                                              
%%                                                                              
% VARIABLE CHARACTER CFILE CENTRO CLATYP CUNIT CSFAC CTEM                       
% VARIABLE CHARACTER SPACEHOOK INSTITLE HKLTITLE SPACEREAD                      
% VARIABLE INTEGER ILATT NSYMS SCOUNT SXF LEND                                  
% VARIABLE LOGICAL SFILERR LCANCEL LCRY SXGETALL LQS SPACETEXT                  
% VARIABLE REAL SUA SUB SUC SUAL SUBE SUGA                                      
% VARIABLE REAL SXX SXY SXZ SXO SXU11 SXU22 WAVE CELLZ                          
% VARIABLE REAL SXU33 SXU23 SXU13 SXU12                                         
% VARIABLE REAL SXOCC CRYOCC SPECOCC                                            
% VARIABLE INTEGER ATOMCOUNT                                                    
%%                                                                              
% EVALUATE SXGETALL = FALSE                                                     
%%                                                                              
%% variables used by the question box below                                     
% VARIABLE CHARACTER QTITLE BUTTOK BUTTXX QLINE1 QLINE2                         
% VARIABLE LOGICAL ANSWER                                                       
%%                                                                              
% EVALUATE LCRY = FALSE                                                         
%%                                                                              
%%                                                                              
%%                                                                              
%%                                                                              
%%                                                                              
% EVALUATE CFILE = 'SFLIP.INS'                                                  
% TRANSFER '#OPEN SCPD "' // CFILE // '"' TO CRYSTALS                           
%%                                                                              
%%                                                                              
{I Scanning SUPERFLIP file for information. This may take some time...          
%           EXTRACT REWIND                                                      
{I Looking for TITL instruction.                                                
%         EVALUATE SFILERR = TRUE                                               
%         LOOP                                                                  
%           ON ERROR TERMINATE                                                  
%           ON END TERMINATE                                                    
%           EXTRACT NEXT                                                        
%           CLEAR                                                               
%%           EXTRACT TRANSFER COMMAND                                           
%%           EXECUTE SEND                                                       
%           EXTRACT TRANSFER INPUT                                              
%           CLEAR                                                               
%           GET NOSTORE NOPROMPT KEYWORD NULLSTRING                             
%           IF CVALUE .EQ. 'TITL' THEN                                          
%              EVALUATE SFILERR = FALSE                                         
%              EVALUATE LOOPEND = LOOPCOUNTER                                   
{R TITL card found .                                                            
%              CLEAR                                                            
%              INSERT '#TITLE '                                                 
%              GET NOPROMPT NOREMOVE TEXT ' ' 'Default Title'                   
%              SEND                                                             
%              COPY 'END'                                                       
%              CLEAR                                                            
%              EVALUATE SPACETEXT = FALSE                                       
%              EVALUATE SPACEREAD = ' '                                         
%              LOOP                                                             
%                GET NOSTORE NOPROMPT KEYWORD ' ' '_NOMORE_'                    
%                IF CVALUE .EQ. '_NOMORE_' THEN                                 
%                  EVALUATE LOOPEND = LOOPCOUNTER                               
%                ELSE IF SPACETEXT THEN                                         
%                  EVALUATE SPACEREAD = SPACEREAD // CVALUE // ' '              
%                END IF                                                         
%                IF ( UPPERCASE CVALUE ) .EQ. 'IN' THEN                         
%                  EVALUATE SPACEREAD = ' '                                     
%                  EVALUATE SPACETEXT = TRUE                                    
%                END IF                                                         
%              END LOOP                                                         
%           END IF                                                              
%         END LOOP                                                              
%         IF SFILERR .EQ. TRUE THEN                                             
{E *** No "TITL" card found in SHELX file. Never mind.                          
%         ELSE                                                                  
{R TITL card processed.                                                         
%         END IF                                                                
%%                                                                              
% TRANSFER 'Space group read from TITL card: ' // SPACEREAD TO DISPLAY         
% EVALUATE QTITLE = 'Importing space group'                                     
% EVALUATE QLINE1 = 'Superflip may return a space group'                        
% EVALUATE QLINE2 = 'Would you like to input the new space group?'              
% EVALUATE BUTTOK = 'Yes'                                                       
% EVALUATE BUTTXX = 'no'                                                        
% COPY '#SCRIPT XQUESTIO'                                                       
% IF ANSWER .EQ. TRUE THEN                                                      
%%                                                                              
%%{I Now check the spacegroup...                                                
%%                                                                              
%          EVALUATE SPACEHOOK = 'Space group needed for SHELX file input'       
%          COPY '#SCRIPT XSPACE'                                                
%          IF LCANCEL .EQ. TRUE THEN                                            
{E Shelx files do not contain the space group symbol, therefore                 
{E it must be entered separately.                                               
%              FINISH                                                           
%          END IF                                                               
%          EXTRACT REWIND                                                       
% END IF                                                                        
%%                                                                              
%%                                                                              
%% SFAC and UNIT cards can be skipped for SUPERFLIP & EDMA                             
%% Find the SFAC and UNIT cards which give respectively, a                      
%% list of the elements and a list of how many of each element                  
%% is in the unit cell.                                                         
%%                                                                              
%%                                                                              
{I Looking for cell contents.                                                   
%%                                                                              
%%                                                                              
%% STEP1: Store the SFAC and UNIT cards in CSFAC and CUNIT.                     
%%                                                                              
%%                                                                              
%         EVALUATE SFILERR = TRUE                                               
%         EVALUATE LEND = 0                                                     
%         LOOP                                                                  
%           ON ERROR TERMINATE                                                  
%           ON END TERMINATE                                                    
%           EXTRACT NEXT                                                        
%           CLEAR                                                               
%%           EXTRACT TRANSFER COMMAND                                           
%%           EXECUTE SEND                                                       
%           EXTRACT TRANSFER INPUT                                              
%           CLEAR                                                               
%           GET NOSTORE NOPROMPT KEYWORD NULLSTRING                             
%           IF CVALUE .EQ. 'SFAC' THEN                                          
{R SFAC card found.                                                             
%% First token is always an element.                                            
%             GET NOSTORE KEYWORD ' ' ' '                                       
%             EVALUATE CSFAC = CSFAC // ' ' // CVALUE                           
%% Second token may be a number or an element or nothing.                       
%             GET NOSTORE NOREMOVE KEYWORD ' ' '0'                              
%             IF CVALUE STARTSWITH '0' .OR. CVALUE STARTSWITH '1' .OR. -        
                  CVALUE STARTSWITH '2' .OR. CVALUE STARTSWITH '3' .OR. -       
                  CVALUE STARTSWITH '4' THEN                                    
%% This is an old-fashioned card with actual sfac details on. Carry on looping. 
%                 EVALUATE LEND = LEND + 1                                      
              ELSE IF CVALUE STARTSWITH '5' .OR. CVALUE STARTSWITH '6' .OR. -   
                  CVALUE STARTSWITH '7' .OR. CVALUE STARTSWITH '8' .OR. -       
                  CVALUE STARTSWITH '9' THEN                                    
%% This is an old-fashioned card with actual sfac details on. Carry on looping. 
%                 EVALUATE LEND = LEND + 1                                      
%             ELSE                                                              
%% This is a new fangled card with all the elements on one line.                
%                 EVALUATE LEND = LEND + 1                                      
%                 GET NOSTORE TEXT ' ' ' '                                      
%                 EVALUATE CSFAC = CSFAC // ' ' // CVALUE                       
%              END IF                                                           
%           END IF                                                              
%           IF CVALUE .EQ. 'UNIT' THEN                                          
{R UNIT card found.                                                             
%              GET NOSTORE TEXT ' ' ' '                                         
%              EVALUATE CUNIT = CVALUE                                          
%              EVALUATE LEND = LEND + 1000                                      
%           END IF                                                              
%           IF LEND .GT. 1000 THEN                                              
%             EVALUATE LOOPEND = LOOPCOUNTER                                    
%           END IF                                                              
%         END LOOP                                                              
%         IF LEND .LT. 1001 THEN                                                
{E *** No valid "SFAC and UNIT" card pair found in SHELX file.                  
{E     You must enter your own LIST3 and LIST29.                                
%         ELSE                                                                  
%%                                                                              
%%                                                                              
%% Extract SFAC and UNIT info to a COMPOSITION card.                            
%%                                                                              
%%                                                                              
%   TRANSFER 'CSFAC starts as ' // CSFAC TO DISPLAY                          
%   TRANSFER 'CUNIT starts as ' // CUNIT TO DISPLAY                          
%%                                                                              
%% This routine uses the new TRANSFER TO INPUT code to copy                     
%% a character string to the users input buffer, the string                     
%% can then be picked apart one keyword at a time. This bit                     
%% of code copies CSFAC to the input, gets a keyword (ie. 'C'),                 
%% gets the rest of the text and puts it back into CSFAC. It                    
%% then does the same for CUNIT, and loops until the character                  
%% strings are exhausted.                                                       
%%                                                                              
% EVALUATE QTITLE = 'Importing Formula'                                         
% EVALUATE QLINE1 = 'Superflip may return a structural formula'                 
% EVALUATE QLINE2 = 'Would you like to input the new formula?'                  
% EVALUATE BUTTOK = 'Yes'                                                       
% EVALUATE BUTTXX = 'no'                                                        
% COPY '#SCRIPT XQUESTIO'                                                       
% IF ANSWER .EQ. TRUE THEN                                                      
%%                                                                              
%           COPY '#COMPOSIT'                                                    
%           CLEAR                                                               
%           INSERT 'CONTE '                                                     
%%                                                                              
%           LOOP                                                                
%%                                                                              
%             TRANSFER CSFAC TO INPUT                                           
%             GET KEYWORD 'SFAC1' ' '                                           
%             EVALUATE CTEM = CVALUE                                            
%%%%%     TRANSFER 'CSFAC, READ: ' // CVALUE TO DISPLAY                         
%%                                                                              
%             GET NOSTORE NOPROMPT TEXT 'Rest of line' ' '                      
%             EVALUATE CSFAC = CVALUE                                           
%%                                                                              
%             IF CSFAC .EQ. ' ' THEN                                            
%               EVALUATE LOOPEND = LOOPCOUNTER                                  
%             END IF                                                            
%%                                                                              
%% There seems to be a bug in the script processor, whereby if                  
%% we read the last thing on a line with a GET KEYWORD, you can                 
%% then read it again with a GET TEXT. This works around it, by                 
%% spotting that the same thing has been read twice:                            
%%                                                                              
%             IF CSFAC .EQ. CTEM THEN                                           
%               EVALUATE LOOPEND = LOOPCOUNTER                                  
%             END IF                                                            
%%                                                                              
%             IF CTEM .EQ. ' ' THEN                                             
%               EVALUATE LOOPEND = LOOPCOUNTER                                  
%             ELSE                                                              
%%%% TRANSFER 'CSFAC is now ' // CSFAC TO DISPLAY                               
%%                                                                              
%               TRANSFER CUNIT TO INPUT                                         
%               GET NOPROMPT KEYWORD ' '                                        
%               EVALUATE CTEM = CVALUE                                          
%%%% TRANSFER 'CUNIT, READ: ' // CVALUE TO DISPLAY                              
%%                                                                              
%               GET NOSTORE NOPROMPT TEXT 'Rest of line' ' '                    
%               EVALUATE CUNIT = CVALUE                                         
%%                                                                              
%               IF CUNIT .EQ. ' ' THEN                                          
%                 EVALUATE LOOPEND = LOOPCOUNTER                                
%               END IF                                                          
%%                                                                              
%               IF CTEM .EQ. ' ' THEN                                           
%                 EVALUATE LOOPEND = LOOPCOUNTER                                
%               ELSE                                                            
%%%% TRANSFER 'CUNIT is now ' // CUNIT TO DISPLAY                               
%               END IF                                                          
%             END IF                                                            
%           END LOOP                                                            
%           SEND                                                                
%           OUTPUT                                                              
%           COPY 'SCATT CRYSDIR:script/scatt.dat'                               
%           COPY 'PROPERTIES CRYSDIR:script/propwin.dat'                        
%           COPY 'END'                                                          
%%                                                                              
%% Now, experience shows that the SCPDATA file is closed and                    
%% used for something else during the #COMPOSITION command.                     
%% We must reopen it before continuing.                                         
%%                                                                              
%           TRANSFER '#OPEN SCPDATA "' // CFILE // '"' TO CRYSTALS              
%         END IF                                                                
%         EXTRACT REWIND                                                        
%%                                                                              
% END IF                                                                        
%%                                                                              
%%                                                                              
%%                                                                              
%% Now, experience shows that the SCPDATA file is closed and                    
%% used for something else during the #COMPOSITION command.                     
%% We must reopen it before continuing.                                         
%%                                                                              
%           TRANSFER '#OPEN SCPDATA "' // CFILE // '"' TO CRYSTALS              
%         EXTRACT REWIND                                                        
%%                                                                              
%%                                                                              
%% Finally, find the atoms and peaks.                                           
%% Assume all lines not beginning with a recognised SHELX keyword               
%% are atom records. This causes failure for files with reflections             
%% in, though I'm sure someone could fix this by making it stop                 
%% at an HKLF instruction.                                                      
%%                                                                              
%        COPY '#SCRIPT ZSHELXIN'                                                
{R Shelx file processed.                                                        
%        COPY '#CLOSE SCPDATA'                                                  
%        IF ( ATOMCOUNT .EQ. 0 ) THEN                                           
{I No atoms found                                                               
%        ELSE                                                                   
%          BLOCK                                                                
%            IF LQS .EQ. TRUE THEN                                              
%              EVALUATE QTITLE = 'Change Q atoms?'                              
%              EVALUATE QLINE1 = 'Do you want to change all Q'                  
%              EVALUATE QLINE2 = 'atoms to Carbon?'                             
%              EVALUATE BUTTOK = '&Yes'                                         
%              EVALUATE BUTTXX = '&No'                                          
%              COPY '#SCRIPT XQUESTIO'                                          
%              IF ANSWER .EQ. TRUE THEN                                         
%               COPY '#EDIT'                                                    
%               COPY 'TYPECHANGE TYPE EQ Q C'                                   
%               COPY 'END'                                                      
%              END IF                                                           
%            END IF                                                             
%%                                                                              
%% Change SHELX occupancies (cryst) to CRYSTALS occupancies (chem)              
%%                                                                              
%            BLOCK                                                              
%%                                                                              
%% Put crystallographic occupancy into 'SPARE' (offset 13)                      
%%                                                                              
%             COPY '#SPEC TEST PARAMETER .01'                                   
%             COPY 'END'                                                        
%%                                                                              
%             ON EDITERROR TERMINATE                                            
%             COPY '#GENERALEDIT 5'                                             
%             COPY 'LOCATE RECORDTYPE=101'                                      
%             COPY 'ERROR MESS=NO SIGN=NONE ACTI=CONT NAME=EDITERROR'           
%             LOOP                                                              
%              ON EDITERROR TERMINATE                                           
%              COPY 'TRANSFER FROM OFFSET=2 TO SXOCC'                           
%              COPY 'TRANSFER FROM OFFSET=13 TO SPECOCC'                        
%%                                                                              
%% Divide shelx occ by SPARE to give chemical occupancy.                        
%%                                                                              
%              IF ( SPECOCC .LE. 0.0 ) THEN                                     
%                EVALUATE SPECOCC = 1.0                                         
%              END IF                                                           
%              EVALUATE CRYOCC = SXOCC / SPECOCC                                
%              COPY 'TRANSFER TO OFFSET=2 FROM CRYOCC'                          
%              COPY 'NEXT'                                                      
%             END LOOP                                                          
%%                                                                              
%% End of list 5 - EditError jumps out of loop.                                 
%%                                                                              
%             COPY 'WRITE'                                                      
%             COPY 'END'                                                        
%            END BLOCK                                                          
%          END BLOCK                                                            
%%                                                                              
%%                                                                              
%          BLOCK                                                                
%% Only renumber if importing solution (i.e. Qs).                               
%            IF LQS .EQ. TRUE THEN                                              
%              COPY '#SCRIPT XRENUMB'                                           
%            END IF                                                             
%          END BLOCK                                                            
%%                                                                              
%          BLOCK                                                                
%             COPY '#DISTANCES'                                                 
%             COPY 'END'                                                        
%          END BLOCK                                                            
%%                                                                              
%          COPY '#SCRIPT AVERAGE'                                               
%%                                                                              
%% SET Solution type (only if atoms were passed in!)                            
%          COPY '#GENERALEDIT 30'                                               
%          COPY 'LOCATE RECORDTYPE=106'                                         
%          COPY 'CHANGE OFFSET=12 MODE=INTEGER INTEGER=1'                       
%          COPY 'WRITE'                                                         
%          COPY 'END'                                                           
%        END IF                                                                 
% EVALUATE QTITLE = 'Tangent Recycling'                                         
% EVALUATE QLINE1 = 'Superflip structure can be passed to SIR92'                 
% EVALUATE QLINE2 = 'Would you like tangent formula recycling?'                  
% EVALUATE BUTTOK = 'Yes'                                                       
% EVALUATE BUTTXX = 'no'                                                        
% COPY '#SCRIPT XQUESTIO'                                                       
% IF ANSWER .EQ. TRUE THEN                                                      
%      copy '#FOREIGN SIR92 SPECIAL'
%      COPY 'END'
%      COPY '#SPAWN + "CRYSDIR:SIR92.EXE" sir92.ini sir92.lis'                  

%       EVALUATE QTITLE = 'Tangent Recycling'                                         
%       EVALUATE QLINE1 = 'Superflip structure processed by SIR92'                 
%       EVALUATE QLINE2 = 'Would you like to input the new structure?'                  
%       EVALUATE BUTTOK = 'Yes'                                                       
%       EVALUATE BUTTXX = 'no'                                                        
%       COPY '#SCRIPT XQUESTIO'                                                       
%       IF ANSWER .EQ. TRUE THEN                                                      
%            copy '#script xsir92in'
%       END IF
% end if
%%                                                                              
%        FINISH                                                                 
%END SCRIPT                                                                     
