%SCRIPT XREGU2a
%%
%% Subscript for augmenting structures with ideal shapes.
%%
% VARIABLE INTEGER REGTYPE LOOPAGAIN IDEALTYPE IDEALSHAPE
% VARIABLE INTEGER NPARA NVERT
% VARIABLE REAL IDEALX IDEALY IDEALZ
% EVALUATE LOOPAGAIN = 0
%%
^^WI WINDOW XREGU 'Regularise' COMMIT='NEXT' CANCEL='CANCEL'
^^WI GRID GRIDM NROWS=5 NCOLS=3
^^WI {
^^WI  @ 4,2 GRID GRIDB NROWS=1 NCOLS=6
^^WI  {
^^WI   @ 1,2 BUTTON BACK '<Back'
^^WI   @ 1,3 BUTTON NEXT 'Next>' DISABLED=YES
^^WI   @ 1,5 BUTTON FINISH 'Finish' DISABLED=YES
^^WI  }
^^WI  @ 2,2 GRID GRIDC NROWS=3 NCOLS=1
^^WI  {
^^WI   @ 1,1 GRID GRIDA NROWS=3 NCOLS=1
^^WI   {
^^WI    @ 1,1 STATIC S1 'Click on any atoms that already exist at'
^^WI    @ 2,1 STATIC S2 'vertices of the shape. Click Dummy Atom for'
^^WI    @ 3,1 STATIC S2 'vertices where you want new atoms inserted.'
^^WI   }
^^WI   @ 3,1 GRID GRIDD NROWS=1 NCOLS=3
^^WI   {
^^WI    @ 1,1 GRID GRIDE NROWS=16 NCOLS=5
^^WI    {
^^WI     @ 1,5 STATIC T1 '< Click atom to go here'
^^WI     @ 3,5 STATIC T2 ''
^^WI     @ 5,5 STATIC T3 ''
^^WI     @ 7,5 STATIC T4 ''
^^WI     @ 1,3 EDITBOX E1 '' CHARS=6
^^WI     @ 3,3 EDITBOX E2 '' CHARS=6 
^^WI     @ 5,3 EDITBOX E3 '' CHARS=6 
^^WI     @ 7,3 EDITBOX E4 '' CHARS=6
% IF IDEALSHAPE .EQ. 1 THEN
^^WI     @ 1,1 STATIC V1 'x,0,0'
^^WI     @ 3,1 STATIC V2 '0,y,0'
^^WI     @ 5,1 STATIC V3 '-x,0,0'
^^WI     @ 7,1 STATIC V4 '-y,0,0'
% EVALUATE NVERT = 4
% EVALUATE NPARA = 2
% END IF
% IF IDEALSHAPE .EQ. 2 THEN
^^WI     @ 1,1 STATIC V1 '1st vertex'
^^WI     @ 3,1 STATIC V2 '2nd vertex'
^^WI     @ 5,1 STATIC V3 '3rd vertex'
^^WI     @ 7,1 STATIC V4 '4th vertex'
^^WI     @ 9,1 STATIC V5 '5th vertex'
^^WI     @ 9,3 EDITBOX E5 '' CHARS=6
^^WI     @ 9,5 STATIC T5 ''
% EVALUATE NVERT = 5
% EVALUATE NPARA = 1
% END IF
% IF IDEALSHAPE .EQ. 3 THEN
^^WI     @ 1,1 STATIC V1 '1st vertex'
^^WI     @ 3,1 STATIC V2 '2nd vertex'
^^WI     @ 5,1 STATIC V3 '3rd vertex'
^^WI     @ 7,1 STATIC V4 '4th vertex'
^^WI     @ 9,1 STATIC V5 '5th vertex'
^^WI     @ 9,3 EDITBOX E5 '' CHARS=6
^^WI     @ 9,5 STATIC T5 ''
^^WI     @ 11,1 STATIC V6 '6th vertex'
^^WI     @ 11,3 EDITBOX E6 '' CHARS=6
^^WI     @ 11,5 STATIC T6 ''
% EVALUATE NVERT = 6
% EVALUATE NPARA = 1
% END IF
% IF IDEALSHAPE .EQ. 4 THEN
^^WI     @ 1,1 STATIC V1 '1st vertex'
^^WI     @ 3,1 STATIC V2 '2nd vertex'
^^WI     @ 5,1 STATIC V3 '3rd vertex'
^^WI     @ 7,1 STATIC V4 '4th vertex'
^^WI     @ 9,1 STATIC V5 '5th vertex'
^^WI     @ 9,3 EDITBOX E5 '' CHARS=6
^^WI     @ 9,5 STATIC T5 ''
^^WI     @ 11,1 STATIC V6 '6th vertex'
^^WI     @ 11,3 EDITBOX E6 '' CHARS=6
^^WI     @ 11,5 STATIC T6 ''
% EVALUATE NVERT = 6
% EVALUATE NPARA = 0
% END IF
% IF IDEALSHAPE .EQ. 5 THEN
^^WI     @ 1,1 STATIC V1 'centroid'
^^WI     @ 3,1 STATIC V2 '1st apex'
^^WI     @ 5,1 STATIC V3 '2nd apex'
^^WI     @ 7,1 STATIC V4 '3rd apex'
^^WI     @ 9,1 STATIC V5 '4th apex'
^^WI     @ 9,3 EDITBOX E5 '' CHARS=6
^^WI     @ 9,5 STATIC T5 ''
% EVALUATE NVERT = 5
% EVALUATE NPARA = 1
% END IF
% IF IDEALSHAPE .EQ. 6 THEN
^^WI     @ 1,1 STATIC V1 'centroid'
^^WI     @ 3,1 STATIC V2 '-x,0,0'
^^WI     @ 5,1 STATIC V3 '0,y,0'
^^WI     @ 7,1 STATIC V4 'x,0,0'
^^WI     @ 9,1 STATIC V5 '0,-y,0'
^^WI     @ 9,3 EDITBOX E5 '' CHARS=6
^^WI     @ 9,5 STATIC T5 ''
^^WI     @ 11,1 STATIC V6 '0,0,z'
^^WI     @ 11,3 EDITBOX E6 '' CHARS=6
^^WI     @ 11,5 STATIC T6 ''
^^WI     @ 13,1 STATIC V7 '0,0,-z'
^^WI     @ 13,3 EDITBOX E7 '' CHARS=6
^^WI     @ 13,5 STATIC T7 ''
% EVALUATE NVERT = 7
% EVALUATE NPARA = 3
% END IF
% IF IDEALSHAPE .EQ. 7 THEN
^^WI     @ 1,1 STATIC V1 'centroid'
^^WI     @ 3,1 STATIC V2 'x,0,0'
^^WI     @ 5,1 STATIC V3 '0,y,0'
^^WI     @ 7,1 STATIC V4 '-x,0,0'
^^WI     @ 9,1 STATIC V5 '0,-y,0'
^^WI     @ 9,3 EDITBOX E5 '' CHARS=6
^^WI     @ 9,5 STATIC T5 ''
^^WI     @ 11,1 STATIC V6 '0,0,z'
^^WI     @ 11,3 EDITBOX E6 '' CHARS=6
^^WI     @ 11,5 STATIC T6 ''
% EVALUATE NVERT = 6
% EVALUATE NPARA = 3
% END IF
% IF IDEALSHAPE .EQ. 8 THEN
^^WI     @ 1,1 STATIC V1 'centroid'
^^WI     @ 3,1 STATIC V2 '1st equatorial'
^^WI     @ 5,1 STATIC V3 '2nd equatorial'
^^WI     @ 7,1 STATIC V4 '3rd equatorial'
^^WI     @ 9,1 STATIC V5 '1st axial'
^^WI     @ 9,3 EDITBOX E5 '' CHARS=6
^^WI     @ 9,5 STATIC T5 ''
^^WI     @ 11,1 STATIC V6 '2nd axial'
^^WI     @ 11,3 EDITBOX E6 '' CHARS=6
^^WI     @ 11,5 STATIC T6 ''
% EVALUATE NVERT = 6
% EVALUATE NPARA = 2
% END IF
^^WI    }
^^WI    @ 1,3 GRID GRIDF NROWS=7 NCOLS=1
^^WI    {
^^WI     @ 1,1 BUTTON DUMM 'Dummy atom'
^^WI     @ 5,1 BUTTON UNDO 'Undo' DISABLED=YES
^^WI    }
^^WI   }
^^WI  }
^^WI }
^^WI SHOW
^^CR
%  VARIABLE INTEGER POSN OPOSN 
%  EVALUATE POSN = 1
%  EVALUATE OPOSN = 2
^^CO SET MODEL01 MOUSEACTION=HEADERATOM
%  LOOP
%   VERIFY FINISH BACK CANCEL DUMM UNDO ATOM
%   GET NOSTORE SILENT FINAL ABBREVIATED ' ' ' '
%   CASE VALUE
%     BLOCK       %FINISH%
%       EVALUATE LOOPEND = LOOPCOUNTER
%  COPY '#REGULARISE AUGMENT'
%  COPY 'METHOD 1'
%  CLEAR
%  INSERT 'GROUP '
%  STORE FORMAT /(I2)/ LENGTH 2 INTEGER NVERT
%  SEND
%  COPY 'TARGET '
%  LOOP NVERT TIMES
%    CLEAR
%    INSERT '^^?? E'
%    STORE FORMAT /(I1)/ LENGTH 1 INTEGER LOOPCOUNTER
%    INSERT ' TEXT'
%    OUTPUT
%    CLEAR
%    INSERT 'CONT '
%    GET SILENT TEXT ' ' ' '
%    SEND
%  END LOOP
%  CLEAR
%  CASE IDEALSHAPE
%    INSERT 'SQUARE '
%    INSERT 'CP-RING '
%    INSERT 'HEXAGON '
%    INSERT 'PHENYL '
%    INSERT 'TETRAHEDRON '
%    INSERT 'OCTAHEDRON '
%    INSERT 'SQP '
%    INSERT 'TBP '
%  END CASE
%  IF NPARA .GE. 1 THEN
%    STORE FORMAT /(F10.6)/ LENGTH 11 REAL IDEALX
%  END IF
%  IF NPARA .GE. 2 THEN
%    STORE FORMAT /(F10.6)/ LENGTH 11 REAL IDEALY
%  END IF
%  IF NPARA .GE. 3 THEN
%    STORE FORMAT /(F10.6)/ LENGTH 11 REAL IDEALZ
%  END IF
%  SEND
%  COPY 'END'
^^CO    DISPOSE XREGU
%     END BLOCK
%     BLOCK       %BACK%
%       EVALUATE LOOPAGAIN = 1
^^CO    DISPOSE XREGU
%       FINISH
%     END BLOCK
%     BLOCK       %CANCEL%
^^CO    DISPOSE XREGU
%       FINISH
%     END BLOCK
%     BLOCK       %DUMM - dummy atom%
%%
%%      Put together this command: ^^CO SET En TEXT Q(n)
%%
%       CLEAR
%       INSERT "^^CO SET E"
%       STORE FORMAT /(I1)/ LENGTH 1 INTEGER POSN
%       INSERT " TEXT 'Q("
%       STORE FORMAT /(I1)/ LENGTH 1 INTEGER POSN
%       INSERT ")'"
%       OUTPUT
%       EVALUATE OPOSN = POSN
%       EVALUATE POSN = POSN + 1
%     END BLOCK
%     BLOCK       %UNDO - back one
%       EVALUATE OPOSN = POSN
%       EVALUATE POSN = POSN - 1
%       IF POSN .LT. 1 THEN
%          EVALUATE POSN = 1
%       END IF
%%
%%      Put together this command: ^^CO SET En TEXT ' '
%%
%       CLEAR
%       INSERT "^^CO SET E"
%       STORE FORMAT /(I1)/ LENGTH 1 INTEGER POSN
%       INSERT " TEXT ' '"
%       OUTPUT
%     END BLOCK
%     BLOCK       %ATOM - fill in atom name
%        GET SILENT TEXT ' ' ' '
%        CLEAR
%        INSERT '^^CO SET E'
%        STORE FORMAT /(I1)/ LENGTH 1 INTEGER POSN
%        TRANSFER " TEXT '" // CVALUE // "'" TO BUFFER
%        OUTPUT
%        EVALUATE OPOSN = POSN
%        EVALUATE POSN = POSN + 1
%     END BLOCK
%   END CASE
%%
%% Check for completion
%%
%   IF POSN .EQ. 1 THEN
^^CO   SET UNDO  DISABLED=YES
%   ELSE
^^CO   SET UNDO  DISABLED=NO
%   END IF
%%
%% Update "Click Next Atom" prompt
%%
%   IF OPOSN .LE. NVERT THEN
%      CLEAR
%      INSERT "^^CO SET T"
%      STORE FORMAT /(I1)/ LENGTH 1 INTEGER OPOSN
%      INSERT " TEXT ''"
%      OUTPUT
%   END IF
%   IF POSN .LE. NVERT THEN
%      CLEAR
%      INSERT "^^CO SET T"
%      STORE FORMAT /(I1)/ LENGTH 1 INTEGER POSN
%      INSERT " TEXT '< Click atom to go here'"
%      OUTPUT
^^CO   SET FINISH DISABLED=YES
^^CO   SET DUMM DISABLED=NO
%   ELSE
%      EVALUATE POSN = NVERT + 1
%      CLEAR
%      INSERT "^^CO SET T"
%      STORE FORMAT /(I1)/ LENGTH 1 INTEGER ( POSN - 1 )
%      INSERT " TEXT ' Click Finish'"
%      OUTPUT
^^CO   SET FINISH DISABLED=NO
^^CO   SET DUMM DISABLED=YES
%   END IF
%  END LOOP
%END SCRIPT
