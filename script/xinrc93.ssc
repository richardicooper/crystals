%SCRIPT INRC93  %Script for quick input of CAD4 data%
%  VARIABLE CHARACTER FILENAME SCFNAME HKLNAME ABSNAME
%  VARIABLE INTEGER INBASICS SOLVEMETHOD
%% AUTOMATIC INPUT OF CAD4 DATA
%% -------   ----- -- ---- ----
%%
%%  VARIABLE CHARACTER QTITLE QLINE1 QLINE2 BUTTOK BUTTXX
%%  VARIABLE LOGICAL ANSWER
%  VARIABLE CHARACTER CNULL CDLINE
%%  EVALUATE QTITLE = 'RC93 Input'
%%  EVALUATE QLINE1 = 'You will need to know the crystals space group symbol.'
%%  EVALUATE QLINE2 = 'You MUST have .HKL and .SCF files. Can you continue?'
%%  EVALUATE BUTTOK = '&Yes'
%%  EVALUATE BUTTXX = '&No'
%%  COPY '#SCRIPT XQUESTIO'
%%
%%  BLOCK
%%    ON ERROR REPEAT
%%    IF ( ANSWER .EQ. FALSE ) THEN
%%       FINISH
%%    END IF
%%  END BLOCK
%%
%%%% Definition %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
^^WI WINDOW XINRC93 'Input RC93 data' MODAL
^^WI GRID MAIN NROWS=2 NCOLS=1
^^WI {
^^WI  @ 1,1 GRID TOP NROWS=1 NCOLS=2
^^WI  {
^^WI   @ 1,1 GRID LEFT NROWS=6 NCOLS=2
^^WI   {
^^WI    @ 2,2 STATIC T1 'Please enter the title of the hkl file'
^^WI    @ 3,2 STATIC T2 'generated by RC93 (without the extension).'
^^WI   }
^^WI   @ 1,2 GRID RIGHT NROWS=8 NCOLS=10
^^WI   {
^^WI    @ 2,9 BUTTON BTNOK '&Ok' DISABLED=YES DEFAULT
^^WI    @ 4,9 BUTTON BTNXX '&Cancel'
^^WI   }
^^WI  }
^^WI  @ 2,1 GRID BOTTOM NROWS=2 NCOLS=5
^^WI  {
^^WI   @ 1,2 EDITBOX E1 '' CHARS=50 INFORM=YES
^^WI   @ 1,4 BUTTON BROWSE '&Browse'
^^WI  }
^^WI }
^^WI SHOW
^^CR
%%%% Processing %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% LOOP
%  VERIFY BTNOK BTNXX BROWSE E1
%  GET SILENT NOSTORE FINAL ABBREVIATED 'Option:' ' '
%  CASE VALUE
%    BLOCK              %OK%
^^??    E1 TEXT
%       GET SILENT NOSTORE KEYWORD 'Get E1 filename:'
%       IF CVALUE .NE. CNULL THEN
%         EVALUATE LOOPEND = LOOPCOUNTER
%         EVALUATE FILENAME = CVALUE
^^WI      DISPOSE XINRC93
^^CR
%       END IF
%    END BLOCK
%    BLOCK             %CANCEL%
^^WI      DISPOSE XINRC93
^^CR
%         FINISH
%    END BLOCK
%    BLOCK      %BROWSE%
^^WI SYSOPENFILE '*.hkl' 'RC93 generated file (*.hkl)' TITLEONLY
^^CR
%      GET SILENT KEYWORD 'New filename:'
%      IF CVALUE .NE. 'CANCEL' THEN
%        TRANSFER "^^WI SET E1 TEXT " // CVALUE TO DISPLAY
^^WI       SET BTNOK DISABLED=NO
^^CR
%      END IF
%    END BLOCK
%    BLOCK      %E1%
%       GET SILENT NOSTORE KEYWORD 'Changed text' '_NOTHING'
%       IF CVALUE .NE. '_NOTHING' THEN
^^WI       SET BTNOK DISABLED=NO
^^CR
%       ELSE
^^WI       SET BTNOK DISABLED=YES
^^CR
%       END IF
%     END BLOCK
%  END CASE
% END LOOP
%%%% Execution %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%  BLOCK
%    COPY '#DISK'
%    COPY 'EXTEND SIZE = 10 TRIES  = 1000'
%    COPY 'END'
Files INITIAL.* will be created in your directory. They may be important.
%    COPY '#RELEASE PRINT INITIAL.LIS'
%    COPY '#RELEASE LOG INITIAL.DAT'
%  END BLOCK
%%
%  BLOCK
%    ON END TERMINATE
%    ON ERROR REPEAT
%    CLEAR
  You must know the name of your files, e.g.
      XTL11ZAP.SCF, XTL11ZAP.HKL,
               Give ONLY the specific part, e.g. XTL11ZAP or [CAD4]XTL11ZAP
%    EVALUATE SCFNAME = FILENAME // '.SCF'
%    EVALUATE HKLNAME = FILENAME // '.HKL'
%    EVALUATE ABSNAME = FILENAME // '.ABS'
%    TRANSFER '#USE ' //  SCFNAME // ' ' TO CRYSTALS
%    TRANSFER '#OPEN HKLI ' //  HKLNAME // ' ' TO CRYSTALS
%    TRANSFER '#USE ' //  ABSNAME // ' ' TO CRYSTALS
%    BLOCK
%      ON ERROR REPEAT
%%     CHECK THAT THE BASIC DATA IS READ IN OK
 -------------------------------------------------------------------------
       NB RC93 creates both LIST30 and LIST31 automatically.
        DO NOT MODIFY THEM or this information will be lost
 -------------------------------------------------------------------------
%      COPY '#SCRIPT INBASICS'
%      IF INBASICS .NE. 1 THEN
%        FINISH
%      END IF
%    END BLOCK
%%
%    BLOCK
%      ON ERROR REPEAT
%      IF ( EXISTS 14 .NE. 1 ) THEN
%        VERIFY YES NO
%      GET FINAL ABBREVIATED  -
  'Do you know the asymmetric part of the unit cell?' 'YES'
%        IF ( VALUE .EQ. 1 ) THEN
%          COPY '#SCRIPT INLIST14'
%        ELSE
  You will need this information later when you do Fourier maps. Look in
  International Tables before then.
%        END IF
%      END IF
%    END BLOCK
%%
%    COPY '#LIST 4'
%    COPY 'END'
%
%%
%  END BLOCK
%%
            * Applying Lp corection
%COPY '#LP'
%COPY 'END'
            * Checking systematic absences
%COPY '#SYSTEMATIC'
%COPY 'END'
            * Sorting data
%COPY '#SORT'
%COPY 'END'
            * Merging equivalent reflections
%    COPY '#MERGE'
%    COPY 'WEIGHT SCHEME=2 NPARAM=6'
%    COPY 'PARAM 0.5 3.0 1.0 2.0 0.01 0.00001'
%    COPY 'REFLECTIONS NJCODE = 3'
%    COPY 'JCODE 3 VALUE = 0.0'
%    COPY 'JCODE 4 VALUE = 0.0'
%    COPY 'JCODE 8 VALUE = 0.0'
%    COPY 'END'
%    COPY '#LIST 28'
%    COPY 'MINIMA RATIO = 3'
%    COPY 'END'
%    COPY '#LIST 6'
%    COPY 'READ TYPE = COPY'
%    COPY 'END'
%    COPY '#PUNCH 6'
%    COPY 'END'
%    COPY '#LIST 4'
%    COPY 'END'
%    COPY '#WEIGHT'
%    COPY 'END'
%    COPY '#RELEASE PRINT'
%%
%%
%  ON ERROR REPEAT
%  EVALUATE QTITLE = 'RC93 Input Complete'
%  EVALUATE QLINE1 = 'Do you want to try to solve the structure?'
%  EVALUATE QLINE2 = ' '
%  EVALUATE BUTTOK = '&Yes'
%  EVALUATE BUTTXX = '&Not yet'
%  COPY '#SCRIPT XQUESTIO'
%  BLOCK
%    ON ERROR REPEAT
%    IF ( ANSWER .EQ. TRUE ) THEN
            * Solve the structure
%           COPY '#SCRIPT XSTRUCTU'
%    END IF
%
%    IF SOLVEMETHOD .NE. 0 THEN
%      COPY '#SCRIPT MODEL'
%    END IF
%  END BLOCK
%END SCRIPT
