%SCRIPT YDIST
%%
%% RETURN VALUES:
%%     BDIST - Distance between CATOM1 and CATOM2
%%     BDISTS - Distance squared.
%%
%% INPUT:
%%     CATOM1 -  e.g. C(7) or c7 or c 7
%%     CATOM2 -  e.g. o(2) or O2 or o 2
%%
% VARIABLE REAL BDIST BDISTS
% VARIABLE CHARACTER CATOM1 CATOM2
%%
% VARIABLE CHARACTER CAT1N CAT2N
% VARIABLE INTEGER IAT1S IAT2S
%%
% VARIABLE CHARACTER CLTYPE
% VARIABLE REAL SERIAL
% VARIABLE REAL AT1X AT1Y AT1Z AT2X AT2Y AT2Z
% VARIABLE REAL OM1 OM2 OM3 OM4 OM5 OM6 OM7 OM8 OM9
% VARIABLE LOGICAL FOUNDONE FOUNDTWO
%%
% EVALUATE CAT1N = UPPERCASE FIRSTSTR ( CATOM1 )
% EVALUATE CAT2N = UPPERCASE FIRSTSTR ( CATOM2 )
% EVALUATE IAT1S = FIRSTINT ( CATOM1 )
% EVALUATE IAT2S = FIRSTINT ( CATOM2 )
% EVALUATE FOUNDONE = FALSE
% EVALUATE FOUNDTWO = FALSE
%%
%  COPY '#GENERALEDIT 5'
%  COPY 'LOCATE RECORDTYPE=101'
%  COPY 'ERROR MESS=NO SIGN=NONE ACTI=CONT NAME=EDITERROR'
%  LOOP
%     ON EDITERROR TERMINATE
%     COPY 'TRANSFER FROM OFFSET=0 TO CLTYPE'
%     IF CAT1N .EQ. CLTYPE THEN
%        COPY 'TRANSFER FROM OFFSET=1 TO SERIAL'
%        IF IAT1S .EQ. INTEGER ( SERIAL ) THEN
%           COPY 'TRANSFER FROM OFFSET=4 TO AT1X'
%           COPY 'TRANSFER FROM OFFSET=5 TO AT1Y'
%           COPY 'TRANSFER FROM OFFSET=6 TO AT1Z'
%           EVALUATE FOUNDONE = TRUE
%        END IF
%     END IF
%     IF CAT2N .EQ. CLTYPE THEN
%        COPY 'TRANSFER FROM OFFSET=1 TO SERIAL'
%        IF IAT2S .EQ. INTEGER ( SERIAL ) THEN
%           COPY 'TRANSFER FROM OFFSET=4 TO AT2X'
%           COPY 'TRANSFER FROM OFFSET=5 TO AT2Y'
%           COPY 'TRANSFER FROM OFFSET=6 TO AT2Z'
%           EVALUATE FOUNDTWO = TRUE
%        END IF
%     END IF
%     IF FOUNDONE .AND. FOUNDTWO  THEN
%        EVALUATE LOOPEND = LOOPCOUNTER
%     END IF
%     COPY 'NEXT'
%  END LOOP
%  COPY 'END'
%%
%% Subtract the vectors.
%%
%  EVALUATE AT1X = AT1X - AT2X
%  EVALUATE AT1Y = AT1Y - AT2Y
%  EVALUATE AT1Z = AT1Z - AT2Z
%%
%% Get orthogonalisation matrix
%%
%  COPY '#GENERALEDIT 1'
%  COPY 'LOCATE RECORDTYPE=105'
%  COPY 'ERROR MESS=NO SIGN=NONE ACTI=CONT NAME=EDITERROR'
%  COPY 'TRANSFER FROM OFFSET=0 TO OM1'
%  COPY 'TRANSFER FROM OFFSET=1 TO OM2'
%  COPY 'TRANSFER FROM OFFSET=2 TO OM3'
%  COPY 'TRANSFER FROM OFFSET=3 TO OM4'
%  COPY 'TRANSFER FROM OFFSET=4 TO OM5'
%  COPY 'TRANSFER FROM OFFSET=5 TO OM6'
%  COPY 'TRANSFER FROM OFFSET=6 TO OM7'
%  COPY 'TRANSFER FROM OFFSET=7 TO OM8'
%  COPY 'TRANSFER FROM OFFSET=8 TO OM9'
%  COPY 'END'
%%
%% Multiply the difference vector by the ortho matrix...
%%
%  EVALUATE AT2X = AT1X * OM1 + AT1Y * OM2 + AT1Z * OM3
%  EVALUATE AT2Y = AT1X * OM4 + AT1Y * OM5 + AT1Z * OM6
%  EVALUATE AT2Z = AT1X * OM7 + AT1Y * OM8 + AT1Z * OM9
%%
%% Compute the distance.
%%
%  EVALUATE BDISTS = AT2X * AT2X + AT2Y * AT2Y + AT2Z * AT2Z
%  EVALUATE BDIST = SQRT ( BDISTS )
%
%  CLEAR
%  INSERT 'Distance : '
%  STORE FORMAT /(F8.5)/ LENGTH 9 REAL BDIST
%  OUTPUT
%END SCRIPT
