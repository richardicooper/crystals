%SCRIPT MATCHCMP
%%
%% Quick script to 'get it working'
%   VARIABLE CHARACTER KEYBREAK
%   VARIABLE CHARACTER CATM CELE CCHK
%   VARIABLE INTEGER ISER IFRAG NAT
%   VARIABLE REAL RCHK
%% Re-assign fragment numbers.
%   COPY '#EDIT'
%   COPY 'INSERT RESIDUE'
%   COPY 'END'
%%
%   QUEUE REWIND
%   QUEUE COPY #MATCH
%%
%   QUEUE COPY MAP
%%
%   LOOP
%    ON END TERMINATE
%    CLEAR
%    INSERT 'CONTINUE '
%    GET SILENT TEXT 'Atom?' ' '
%    QUEUE SEND
%   END LOOP
%%
^^WI WINDOW XMATCH 'Map ... Onto... ' COMMIT='CANCEL' CANCEL='CANCEL'
^^WI POSITION CENTRED _MAINTEXTOUTPUT
^^WI GRID GRIDM NROWS=7 NCOLS=5
^^WI {
^^WI   @ 4,2 STATIC T2 'Click an atom in the residue'
^^WI   @ 5,2 STATIC T3 'to compare with the first.'
^^WI   @ 6,2 GRID G NROWS=2 NCOLS=2
^^WI   {
^^WI     @ 2,1 STRETCH S HORIZONTAL
^^WI     @ 2,2 BUTTON CANCEL 'Cancel' CANCEL DEFAULT COMMIT
^^WI   }
^^WI }
^^WI SHOW
^^CR
^^CO SET MODEL01 MOUSEACTION=HEADERATOM
%   VERIFY CANCEL ATOM
%   GET NOSTORE SILENT FINAL ABBREVIATED ' ' ' '
%   IF VALUE .EQ. 2 THEN
%       EVALUATE IFRAG = - 1
%       GET NOSTORE SILENT TEXT ' ' ' '
%       EVALUATE CATM = CVALUE
%       EVALUATE CELE = FIRSTSTR ( CATM )
%       EVALUATE ISER = FIRSTINT ( CATM ) 
%       COPY '#GENERALEDIT 5'
%       COPY 'LOCATE RECORDTYPE=101'
%       COPY 'ERROR MESS=NO SIGN=NONE ACTI=CONT NAME=EDITERROR'
%       LOOP 
%        ON EDITERROR TERMINATE
%        COPY 'TRANSFER FROM OFFSET=0 TO CCHK'
%        COPY 'TRANSFER FROM OFFSET=1 TO RCHK'
%        IF ( ( CELE .EQ. CCHK ) .AND. ( ISER .EQ. INTEGER ( RCHK ) ) ) THEN
%         COPY 'TRANSFER FROM OFFSET=16 TO IFRAG'
%         COPY 'END'
%         EVALUATE LOOPEND = LOOPCOUNTER
%        END IF
%        COPY 'NEXT'
%       END LOOP
%       IF ( IFRAG .LT. 0 ) THEN
{E Cannot find the atom you clicked on. Sounds like an error.
%       ELSE
%         QUEUE PROCESS
%         TRANSFER 'ONTO RESI(' // CHARACTER ( IFRAG ) // ')' TO CRYSTALS
%         COPY 'END'
%         COPY '#OPEN SCPDATA regular.dat'
%         COPY '#RELE PUNCH new16bit.pch'
%         EXTRACT REWIND
%         EXTRACT NEXT
%         EXTRACT TRANSFER INPUT
%         GET SILENT NOSTORE KEYWORD ' ' ' '
%         GET SILENT NOSTORE INTEGER 'Ngroup1' '-1'
%         EVALUATE NAT = VALUE
%         TRANSFER 'SAME ' TO PUNCH
%         LOOP NAT TIMES
%           EXTRACT NEXT
%           EXTRACT TRANSFER INPUT
%           GET SILENT NOSTORE TEXT ' ' ' '
%           TRANSFER 'CONT ' // CVALUE TO PUNCH
%         END LOOP
%         EXTRACT NEXT
%         TRANSFER 'CONT AND ' TO PUNCH
%         LOOP NAT TIMES
%           EXTRACT NEXT
%           EXTRACT TRANSFER INPUT
%           GET SILENT NOSTORE TEXT ' ' ' '
%           TRANSFER 'CONT ' // CVALUE TO PUNCH
%         END LOOP
%         EXTRACT CLOSE
%         COPY '#RELE PUNCH bfile.pch'
%         EVALUATE KEYBREAK = 'SAME'
%         COPY '#SCRIPT ZADDLI16'
%%
 * Done. Vibrational restraints added.
%       END IF
%   END IF
^^CO DISPOSE XMATCH
%END SCRIPT
