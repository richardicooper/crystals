%SCRIPT XPARA
%  VARIABLE CHARACTER CELE CATM CCHK
%  VARIABLE REAL RCHK RSER ROCC RFLG RATX RATY RATZ
%  VARIABLE REAL RU11 RU22 RU33 RU23 RU13 RU12 RPKH
%  VARIABLE INTEGER IPRT IPEG IPEP IHYB IREF
%  VARIABLE LOGICAL LPEE LPES LPEO LPEX LPEY LPEZ
%  VARIABLE LOGICAL LPEU11 LPEU22 LPEU33 LPEU23 LPEU13 LPEU12 LPED
%  VARIABLE LOGICAL XPRENEW LPEG LPEP LSTICK HATOM
%  VARIABLE INTEGER NINDEX ISER IRSWIT
%%
%% Get atom name
%%
%  GET NOSTORE FINAL KEYWORD 'Atom?' 'C(1)'
%  EVALUATE CATM = CVALUE
%  EVALUATE CELE = FIRSTSTR ( CATM )
%  EVALUATE ISER = FIRSTINT ( CATM ) 
%  EVALUATE HATOM = FALSE
%  IF ( ( CELE .EQ. 'H' ) .or. ( CELE .EQ. 'D' ) ) THEN                   
%    EVALUATE HATOM = TRUE
%  END IF
%%
^^WI WINDOW XPARA 
%%% TRANSFER "^^WI 'Atom " // CATM // "'" TO DISPLAY
^^WI MODAL
^^WI GRID M NROWS=3 NCOLS=5 {
^^WI  @ 2,2 GRID B NROWS=2 NCOLS=1 COMMAND='EDIT' {
^^WI   @ 1,1 GRID B NROWS=11 NCOLS=11 {
^^WI     @ 1,1   STATIC XPTE Element
^^WI     @ 1,3   EDITBOX XPEE ' '           INFORM=YES
^^WI     @ 1,5   STATIC XPTS Serial
^^WI     @ 1,7   EDITBOX XPES ' '   INTEGER INFORM=YES
^^WI     @ 1,9   STATIC XPTO Occupancy
^^WI     @ 1,11  EDITBOX XPEO ' '   REAL    INFORM=YES
^^WI     @ 3,1   STATIC XPTX X
^^WI     @ 3,3   EDITBOX XPEX ' '   REAL    INFORM=YES
^^WI     @ 3,5   STATIC XPTY Y
^^WI     @ 3,7   EDITBOX XPEY ' '   REAL    INFORM=YES
^^WI     @ 3,9   STATIC XPTZ Z
^^WI     @ 3,11  EDITBOX XPEZ ' '   REAL    INFORM=YES
^^WI     @ 5,1   STATIC XPTU11 U11
^^WI     @ 5,3   EDITBOX XPEU11 ' ' REAL    INFORM=YES
^^WI     @ 5,5   STATIC XPTU22 U22
^^WI     @ 5,7   EDITBOX XPEU22 ' ' REAL    INFORM=YES
^^WI     @ 5,9   STATIC XPTU33 U33
^^WI     @ 5,11  EDITBOX XPEU33 ' ' REAL    INFORM=YES
^^WI     @ 7,1   STATIC XPTU23 U23
^^WI     @ 7,3   EDITBOX XPEU23 ' ' REAL    INFORM=YES
^^WI     @ 7,5   STATIC XPTU13 U13
^^WI     @ 7,7   EDITBOX XPEU13 ' ' REAL    INFORM=YES
^^WI     @ 7,9   STATIC XPTU12 U12
^^WI     @ 7,11  EDITBOX XPEU12 ' ' REAL    INFORM=YES
^^WI     @ 9,1   STATIC XPTD 'Spare'
^^WI     @ 9,3   EDITBOX XPED ' '   REAL    INFORM=YES
^^WI     @ 9,5   STATIC XPTG 'Assembly'
^^WI     @ 9,7   EDITBOX XPEG ' '   INTEGER    INFORM=YES
^^WI     @ 9,9   STATIC XPTP 'Group'
^^WI     @ 9,11  EDITBOX XPEP ' '   INTEGER    INFORM=YES
^^WI     @ 10,7  STATIC XEPEG '(0-999)'
^^WI     @ 10,11  STATIC XEPEG '(0-999)'
^^WI   }
^^WI   @ 2,1 GRID B NROWS=1 NCOLS=3 {
^^WI     @ 1,1  STATIC XEPEG 'Refinement mode'
^^WI     @ 1,3  DROPDOWN XSTICK INFORM=YES ADDTOLIST
^^WI     'default'
^^WI     'fix'
^^WI     'Xs'
^^WI     'Xs, Uiso'
% IF HATOM THEN
^^WI     'Ride'
% ELSE
^^WI     'Xs, Uijs'
% END IF
^^WI     NULL
^^WI   }
^^WI  }
^^WI  @ 2,4 GRID C NROWS=9 NCOLS=1 {
^^WI     @ 3,1 BUTTON BOK 'Cancel' DEFAULT COMMIT CANCEL
^^WI     @ 9,1 BUTTON BXD 'Delete'
^^WI     @ 1,1 BUTTON BAP 'Apply changes' DISABLED=YES
^^WI  }
^^WI }
^^WI SHOW
^^CR
%%
%%
%  BLOCK
%    EVALUATE NINDEX = 0
%    ON EDITERROR TERMINATE
%    COPY '#GENERALEDIT 5'
%    COPY 'LOCATE RECORDTYPE=101'
%    COPY 'ERROR MESS=NO SIGN=NONE ACTI=CONT NAME=EDITERROR'
%    LOOP 
%     ON EDITERROR TERMINATE
%     COPY 'TRANSFER FROM OFFSET=0 TO CCHK'
%     COPY 'TRANSFER FROM OFFSET=1 TO RCHK'
%     IF ( ( CELE .EQ. CCHK ) .AND. ( ISER .EQ. INTEGER ( RCHK ) ) ) THEN
%      COPY 'TRANSFER FROM OFFSET=2 TO ROCC'
%      COPY 'TRANSFER FROM OFFSET=3 TO RFLG'
%      COPY 'TRANSFER FROM OFFSET=4 TO RATX'
%      COPY 'TRANSFER FROM OFFSET=5 TO RATY'
%      COPY 'TRANSFER FROM OFFSET=6 TO RATZ'
%      COPY 'TRANSFER FROM OFFSET=7 TO RU11'
%      COPY 'TRANSFER FROM OFFSET=8 TO RU22'
%      COPY 'TRANSFER FROM OFFSET=9 TO RU33'
%      COPY 'TRANSFER FROM OFFSET=10 TO RU23'
%      COPY 'TRANSFER FROM OFFSET=11 TO RU13'
%      COPY 'TRANSFER FROM OFFSET=12 TO RU12'
%      COPY 'TRANSFER FROM OFFSET=13 TO RPKH'
%      COPY 'TRANSFER FROM OFFSET=14 TO IPRT'
%      COPY 'TRANSFER FROM OFFSET=15 TO IREF'
%      COPY 'TRANSFER FROM OFFSET=16 TO IHYB'
%      COPY 'TRANSFER FROM OFFSET=17 TO RNEW'
%      COPY 'END'
%      EVALUATE LOOPEND = LOOPCOUNTER
%      EVALUATE NINDEX = LOOPCOUNTER
%     END IF
%     COPY 'NEXT'
%    END LOOP
%  END BLOCK
%
%  EVALUATE IPEG = ( IPRT IDECMASK 111000 ) / 1000
%  EVALUATE IPEP = IPRT IDECMASK 000111
%  IF IPRT .LT. 0 THEN
%    EVALUATE IPEP = - IPEP
%  END IF
%
%  IF ( NINDEX .EQ. 0 ) THEN
%   TRANSFER '{E Atom not found. ' // CATM TO DISPLAY
^^CO DISPOSE XPARA
%   FINISH
%  END IF
%%
%  CLEAR
%  INSERT "^^CO SET XPEE TEXT "
%  TRANSFER CELE TO BUFFER
%  OUTPUT
%  CLEAR
%  INSERT "^^CO SET XPES TEXT '"
%  STORE FORMAT /(I6)/ LENGTH 6 INTEGER ISER
%  INSERT "'"
%  OUTPUT
%  CLEAR
%  INSERT "^^CO SET XPEO TEXT '"
%  STORE FORMAT /(F8.5)/ LENGTH 8 REAL ROCC
%  INSERT "'"
%  OUTPUT
%  CLEAR
%  INSERT "^^CO SET XPEX TEXT '"
%  STORE FORMAT /(F8.5)/ LENGTH 8 REAL RATX
%  INSERT "'"
%  OUTPUT
%  CLEAR
%  INSERT "^^CO SET XPEY TEXT '"
%  STORE FORMAT /(F8.5)/ LENGTH 8 REAL RATY
%  INSERT "'"
%  OUTPUT
%  CLEAR
%  INSERT "^^CO SET XPEZ TEXT '"
%  STORE FORMAT /(F8.5)/ LENGTH 8 REAL RATZ
%  INSERT "'"
%  OUTPUT
%  CLEAR
%  INSERT "^^CO SET XPEU11 TEXT '"
%  STORE FORMAT /(F8.5)/ LENGTH 8 REAL RU11
%  INSERT "'"
%  OUTPUT
%  IF RFLG .GT. 0.1 THEN
%% Iso
^^CO  SET XPTU11 TEXT 'Uiso'
^^CO  SET XPEU22 TEXT '' DISABLED=YES
^^CO  SET XPEU33 TEXT '' DISABLED=YES
^^CO  SET XPEU23 TEXT '' DISABLED=YES
^^CO  SET XPEU13 TEXT '' DISABLED=YES
^^CO  SET XPEU12 TEXT '' DISABLED=YES
%  ELSE
%% Aniso
^^CO  SET XPTU11 TEXT 'U11'
^^CO  SET XPEU22 DISABLED=NO TEXT=''
^^CO  SET XPEU33 DISABLED=NO TEXT=''
^^CO  SET XPEU23 DISABLED=NO TEXT=''
^^CO  SET XPEU13 DISABLED=NO TEXT=''
^^CO  SET XPEU12 DISABLED=NO TEXT=''
%     CLEAR
%     INSERT "^^CO SET XPEU22 TEXT '"
%     STORE FORMAT /(F8.5)/ LENGTH 8 REAL RU22
%     INSERT "'"
%     OUTPUT
%     CLEAR
%     INSERT "^^CO SET XPEU33 TEXT '"
%     STORE FORMAT /(F8.5)/ LENGTH 8 REAL RU33
%     INSERT "'"
%     OUTPUT
%     CLEAR
%     INSERT "^^CO SET XPEU23 TEXT '"
%     STORE FORMAT /(F8.5)/ LENGTH 8 REAL RU23
%     INSERT "'"
%     OUTPUT
%     CLEAR
%     INSERT "^^CO SET XPEU13 TEXT '"
%     STORE FORMAT /(F8.5)/ LENGTH 8 REAL RU13
%     INSERT "'"
%     OUTPUT
%     CLEAR
%     INSERT "^^CO SET XPEU12 TEXT '"
%     STORE FORMAT /(F8.5)/ LENGTH 8 REAL RU12
%     INSERT "'"
%     OUTPUT
%  END IF
%  CLEAR
%  INSERT "^^CO SET XPED TEXT '"
%  STORE FORMAT /(F8.5)/ LENGTH 8 REAL RPKH
%  INSERT "'"
%  OUTPUT
%  CLEAR
%  INSERT "^^CO SET XPEG TEXT '"
%  STORE FORMAT /(I4)/ LENGTH 4 INTEGER IPEG
%  INSERT "'"
%  OUTPUT
%  CLEAR
%  INSERT "^^CO SET XPEP TEXT '"
%  STORE FORMAT /(I4)/ LENGTH 4 INTEGER IPEP
%  INSERT "'"
%  OUTPUT
%
%  IF ( IREF IAND 128 ) .NE. 0 THEN
%% Sticky flag is set:
%   EVALUATE IRSWIT = IREF IAND 127
%% Default is 'default', then:
%   IF ( IRSWIT .EQ. 4 ) THEN
%%Fix
^^CO SET XSTICK SELECTION=2
%   ELSE IF ( IRSWIT .EQ. 1 ) THEN
%% Xs
^^CO SET XSTICK SELECTION=3
%   ELSE IF ( IRSWIT .EQ. 2 ) THEN
%% Xs, Uiso
^^CO SET XSTICK SELECTION=4
%   ELSE IF ( IRSWIT .EQ. 3 ) THEN
%% Xs, Uijs
%    IF .NOT. HATOM THEN
^^CO SET XSTICK SELECTION=5
%    END IF
%   ELSE IF ( IRSWIT .EQ. 10 ) THEN
%% Ride
%    IF HATOM THEN
^^CO SET XSTICK SELECTION=5
%    END IF
%   END IF
%  END IF
^^CO FOCUS XPES
%  EVALUATE LPEE = FALSE
%  EVALUATE LPES = FALSE
%  EVALUATE LPEO = FALSE
%  EVALUATE LPEX = FALSE
%  EVALUATE LPEY = FALSE
%  EVALUATE LPEZ = FALSE
%  EVALUATE LPEU11 = FALSE
%  EVALUATE LPEU22 = FALSE
%  EVALUATE LPEU33 = FALSE
%  EVALUATE LPEU23 = FALSE
%  EVALUATE LPEU13 = FALSE
%  EVALUATE LPEU12 = FALSE
%  EVALUATE LPED = FALSE
%  EVALUATE LPEG = FALSE
%  EVALUATE LPEP = FALSE
%  EVALUATE LSTICK = FALSE
%%
%%
%%
%%
%%
%  LOOP
%   VERIFY BOK EDIT BAP BXD
%   GET SILENT FINAL NOSTORE ABBREVIATED ' ' ' '
%   CASE VALUE
%    BLOCK        % BOK - CLOSE window
^^CO   DISPOSE XPARA
%      FINISH
%    END BLOCK
%    BLOCK        % EDIT - values changed
%% Retrieve edit name
%      VERIFY XPEE   XPES   XPEO   XPEX   XPEY XPEZ XPEU11 XPEU22  -
                XPEU33 XPEU23 XPEU13 XPEU12 XPED XPEG XPEP XSTICK
%      GET SILENT NOSTORE FINAL ABBREVIATED 'Edit item?' ' '
%      CASE VALUE
%        EVALUATE LPEE = TRUE
%        EVALUATE LPES = TRUE
%        EVALUATE LPEO = TRUE
%        EVALUATE LPEX = TRUE
%        EVALUATE LPEY = TRUE
%        EVALUATE LPEZ = TRUE
%        EVALUATE LPEU11 = TRUE
%        EVALUATE LPEU22 = TRUE
%        EVALUATE LPEU33 = TRUE
%        EVALUATE LPEU23 = TRUE
%        EVALUATE LPEU13 = TRUE
%        EVALUATE LPEU12 = TRUE
%        EVALUATE LPED = TRUE
%        EVALUATE LPEG = TRUE
%        EVALUATE LPEP = TRUE
%        EVALUATE LSTICK = TRUE
%      END CASE
%      GET SILENT NOSTORE TEXT 'Edited text?' 'XX'
%      IF CVALUE .EQ. 'XX' THEN
^^CO     SET BAP DISABLED=YES
%      ELSE
^^CO     SET BAP DISABLED=NO DEFAULT
%      END IF
%    END BLOCK
%    BLOCK         %BAP - apply changes
%% Find current atom
%        BLOCK
%         ON EDITERROR TERMINATE
%         COPY '#GENERALEDIT 5'
%         COPY 'LOCATE RECORDTYPE=101'
%         COPY 'ERROR MESS=NO SIGN=NONE ACTI=CONT NAME=EDITERROR'
%         LOOP NINDEX - 1 TIMES
%            COPY 'NEXT'
%         END LOOP
%        END BLOCK
%        IF LPEE THEN
^^??       XPEE TEXT
%          GET SILENT NOSTORE KEYWORD ' ' ' '
%          EVALUATE CELE = UPPERCASE CVALUE
%          COPY 'TRANSFER TO OFFSET=0 FROM CELE'
 * Updated element type.
%        END IF
%        IF LSTICK THEN
^^??       XSTICK SELECTED
%          EVALUATE IREF = 0
%          GET SILENT NOSTORE INTEGER ' ' ' '
%          CASE VALUE 
%            EVALUATE IREF = 0
%            EVALUATE IREF = 132
%            EVALUATE IREF = 129
%            EVALUATE IREF = 130
%            BLOCK  % aniso or ride
%              EVALUATE IREF = 131
%              IF HATOM THEN
%                EVALUATE IREF = 138
%              END IF
%            END BLOCK
%          END CASE
%          COPY 'TRANSFER TO OFFSET=15 FROM IREF'
 * Updated refinement mode flag.
%        END IF
%        IF LPES THEN
^^??       XPES TEXT
%          GET SILENT NOSTORE REAL ' ' ' '
%          EVALUATE RSER = VALUE
%          COPY 'TRANSFER TO OFFSET=1 FROM RSER'
 * Updated serial number.
%        END IF
%        IF LPEO THEN
^^??       XPEO TEXT
%          GET SILENT NOSTORE REAL ' ' ' '
%          EVALUATE RSER = VALUE
%          COPY 'TRANSFER TO OFFSET=2 FROM RSER'
 * Updated occupancy.
%        END IF
%        IF LPEX THEN
^^??       XPEX TEXT
%          GET SILENT NOSTORE REAL ' ' ' '
%          EVALUATE RSER = VALUE
%          COPY 'TRANSFER TO OFFSET=4 FROM RSER'
 * Updated x co-ordinate.
%        END IF
%        IF LPEY THEN
^^??       XPEY TEXT
%          GET SILENT NOSTORE REAL ' ' ' '
%          EVALUATE RSER = VALUE
%          COPY 'TRANSFER TO OFFSET=5 FROM RSER'
 * Updated y co-ordinate.
%        END IF
%        IF LPEZ THEN
^^??       XPEZ TEXT
%          GET SILENT NOSTORE REAL ' ' ' '
%          EVALUATE RSER = VALUE
%          COPY 'TRANSFER TO OFFSET=6 FROM RSER'
 * Updated z co-ordinate.
%        END IF
%        IF LPEU11 THEN
^^??       XPEU11 TEXT
%          GET SILENT NOSTORE REAL ' ' ' '
%          EVALUATE RSER = VALUE
%          COPY 'TRANSFER TO OFFSET=7 FROM RSER'
 * Updated Uiso / U11 parameter.
%        END IF
%        IF LPEU22 THEN
^^??       XPEU22 TEXT
%          GET SILENT NOSTORE REAL ' ' ' '
%          EVALUATE RSER = VALUE
%          COPY 'TRANSFER TO OFFSET=8 FROM RSER'
 * Updated U22 parameter.
%        END IF
%        IF LPEU33 THEN
^^??       XPEU33 TEXT
%          GET SILENT NOSTORE REAL ' ' ' '
%          EVALUATE RSER = VALUE
%          COPY 'TRANSFER TO OFFSET=9 FROM RSER'
 * Updated U33 parameter.
%        END IF
%        IF LPEU23 THEN
^^??       XPEU23 TEXT
%          GET SILENT NOSTORE REAL ' ' ' '
%          EVALUATE RSER = VALUE
%          COPY 'TRANSFER TO OFFSET=10 FROM RSER'
 * Updated U23 parameter.
%        END IF
%        IF LPEU13 THEN
^^??       XPEU13 TEXT
%          GET SILENT NOSTORE REAL ' ' ' '
%          EVALUATE RSER = VALUE
%          COPY 'TRANSFER TO OFFSET=11 FROM RSER'
 * Updated U13 parameter.
%        END IF
%        IF LPEU12 THEN
^^??       XPEU12 TEXT
%          GET SILENT NOSTORE REAL ' ' ' '
%          EVALUATE RSER = VALUE
%          COPY 'TRANSFER TO OFFSET=12 FROM RSER'
 * Updated U12 parameter.
%        END IF
%        IF LPED THEN
^^??       XPED TEXT
%          GET SILENT NOSTORE REAL ' ' ' '
%          EVALUATE RSER = VALUE
%          COPY 'TRANSFER TO OFFSET=13 FROM RSER'
 * Updated spare/peak height parameter.
%        END IF
%        IF LPEG .OR. LPEP THEN
^^??       XPEG TEXT
%          GET SILENT NOSTORE INTEGER ' ' ' '
%          EVALUATE IPEG = VALUE
^^??       XPEP TEXT
%          GET SILENT NOSTORE INTEGER ' ' ' '
%          EVALUATE IPEP = VALUE
%          IF IPEP .GT. 999 THEN
{E Group number should not exceed 999: setting to 999
%             EVALUATE IPEP = 999
%          END IF
%          IF IPEG .GT. 999 THEN
{E Assembly number should not exceed 999: setting to 999
%             EVALUATE IPEG = 999
%          END IF
%          IF ( IPEP .GE. 0 ) THEN
%            EVALUATE IPEG = IPEG * 1000 + IPEP
%          ELSE
%            EVALUATE IPEG = - IPEG * 1000 + IPEP
%          END IF
%          COPY 'TRANSFER TO OFFSET=14 FROM IPEG'
 * Updated assembly / group number.
%        END IF
%        COPY 'WRITE OVERWRITE=OVERWRITE'
%        COPY 'END'
^^CO   DISPOSE XPARA
%      FINISH
%    END BLOCK
%    BLOCK % Delete %
%% Find current atom
%       BLOCK
%         ON EDITERROR TERMINATE
%         COPY '#GENERALEDIT 5'
%         COPY 'LOCATE RECORDTYPE=101'
%         COPY 'ERROR MESS=NO SIGN=NONE ACTI=CONT NAME=EDITERROR'
%         LOOP NINDEX - 1 TIMES
%            COPY 'NEXT'
%         END LOOP
%        COPY 'DELETE'
%        COPY 'WRITE'
%        COPY 'END'
%       END BLOCK
^^CO   DISPOSE XPARA
%      FINISH
%    END BLOCK
%   END CASE
%  END LOOP
%END SCRIPT
