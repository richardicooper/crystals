%SCRIPT SG
%%
%% Script to determine a space group using external program
%% 1) Get options from user.
%% 2) Write a file
%% 3) Fire up space group program
%% 4) Read back, present, analyse and select result.
%%
%% Variables used by the script:
%%
% VARIABLE INTEGER CLAS UNIQ CHIR NREG NTEST NGLEN NRES NSG
% VARIABLE REAL A B C AL BE GA SCORE
% VARIABLE CHARACTER CLASS1
%%
%% Do some initial checks that all data is present
%%
% IF ( EXISTS 1 .EQ. 0 ) THEN
{E Missing unit cell
{I The unit cell is required to determine the space group.
%   FINISH
% END IF
% IF ( EXISTS 6 .EQ. 0 ) THEN
{E Missing observations
{I Reflections (hkl data) are required to determine the space group.
%   FINISH
% END IF
%%
%%
%% STEP 1a - Display a dialog to the user
%%
^^WI WINDOW SG 'Space group determination' MODAL COMMIT='SGOK' CANCEL='SGXX'
^^WI GRID 'top' NROWS=7 NCOLS=3 {
^^WI    @ 2,2 GRID 'options' NROWS=1 NCOLS=7 {
^^WI       @ 1,1 STATIC 'T' 'Crystal class:'
^^WI       @ 1,3 DROPDOWN 'CLASS' INFORM=YES ADDTOLIST
^^WI         'Triclinic' 'Monoclinic' 'Orthorhombic' 'Tetragonal'
^^WI         'Rhombohedral' 'Trigonal' 'Hexagonal' 'Cubic' NULL
^^WI       @ 1,5 STATIC 'T2' 'Unique axis:'
^^WI       @ 1,7 DROPDOWN 'UNIQUE' DISABLED=YES ADDTOLIST
^^WI         ' ' 'a' 'b' 'c' NULL
^^WI    }
^^WI
^^WI    @ 4,2 CHECKBOX 'CHIRAL' 'Material is definitely chirally pure.'
^^WI
^^WI    @ 6,2 GRID 'buttons' NROWS=1 NCOLS=5 {
^^WI       @ 1,1 BUTTON  'SGOK' '&Ok' DEFAULT
^^WI       @ 1,3 BUTTON  'SGXX' '&Cancel'
^^WI       @ 1,4 STRETCH 'SGH' HORIZONTAL
^^WI       @ 1,5 BUTTON  'SGHELP' '&Help'
^^WI    }
^^WI }
^^WI SHOW
^^CR
%% Step 1a - if SG already entered, get class
%%
% IF ( EXISTS 2 .NE. 0 ) THEN
%   COPY '#GENERALEDIT 2'
%   COPY 'LOCATE RECORDTYPE = 107'
%   COPY 'TRANSFER FROM OFFSET = 0 TO CLASS1'
%   COPY 'END'
%   IF UPPERCASE CLASS1 STARTSWITH 'TRIC' THEN
^^CO  SET CLASS SELECTION=1
%   ELSE IF UPPERCASE CLASS1 STARTSWITH 'MONO' THEN
^^CO  SET CLASS SELECTION=2 SET UNIQUE SELECTION=3 DISABLED=NO
%   ELSE IF UPPERCASE CLASS1 STARTSWITH 'ORTH' THEN
^^CO  SET CLASS SELECTION=3
%   ELSE IF UPPERCASE CLASS1 STARTSWITH 'TETR' THEN
^^CO  SET CLASS SELECTION=4
%   ELSE IF UPPERCASE CLASS1 STARTSWITH 'RHOM' THEN
^^CO  SET CLASS SELECTION=5
%   ELSE IF UPPERCASE CLASS1 STARTSWITH 'TRIG' THEN
^^CO  SET CLASS SELECTION=6
%   ELSE IF UPPERCASE CLASS1 STARTSWITH 'HEXA' THEN
^^CO  SET CLASS SELECTION=7
%   ELSE IF UPPERCASE CLASS1 STARTSWITH 'CUBI' THEN
^^CO  SET CLASS SELECTION=8
%   END IF
% END IF
%%
%% Step 1b - Read their responses.
%%
% LOOP
%%
%% Here are the four possible responses from the dialog:
%%
%   VERIFY SGXX SGHELP CLASS SGOK
%%
%% We read one, the variable VALUE is assigned its index in the Verify list:
%%
%   GET SILENT NOSTORE FINAL ABBREVIATED ' ' ' '
%%
%% We switch on that value:
%%
%   CASE VALUE
%     BLOCK     % SGXX - the user pressed cancel, kill window and exit script
^^CO    DISPOSE SG
%       FINISH
%     END BLOCK
%     BLOCK     % SGHELP - the user wants help.
%       COPY '#SCRIPT XHELP1'

 This dialog runs a program to help you to determine the space group
 of a crystal by analysing the systematic absences in the data.

 You must specify the crystal class, and optionally, if the
 class requires it you can specify the unique axis.

 If you KNOW that your material is chirally pure, you may check the
 'chirally pure' check box.
%       COPY '#SCRIPT XHELP2'
%     END BLOCK
%     BLOCK     % CLASS - the class has been changed.
%       GET SILENT NOSTORE INTEGER ' '
%       IF VALUE .EQ. 2 THEN
%% Monoclinic
^^CO      SET UNIQUE SELECTION=1 DISABLED=NO
%       ELSE
%% Other
^^CO      SET UNIQUE SELECTION=1 DISABLED=YES
%       END IF
%     END BLOCK
%     BLOCK     % SGOK - user pressed OK, carry on.
%       EVALUATE LOOPEND = LOOPCOUNTER
%     END BLOCK
%   END CASE
% END LOOP
%%
%% Step 1c -  Collect the responses and close the dialog.
%%
^^?? CLASS SELECTED
% GET NOSTORE SILENT INTEGER ' '
% EVALUATE CLAS = VALUE
^^?? UNIQUE SELECTED
% GET NOSTORE SILENT INTEGER ' '
% EVALUATE UNIQ = VALUE
^^?? CHIRAL STATE
% VERIFY OFF ON
% GET SILENT NOSTORE FINAL ABBREVIATED ' ' ' '
% EVALUATE CHIR = VALUE - 1
%%
%% Step 2 - WRITE A FILE
%%
% COPY '#RELEASE PUNCH sg.ini'
%%
%% The cell line:
%%
% COPY '#GENERALEDIT 1'
% COPY 'LOCATE RECORD=101'
% COPY 'TRANSFER FROM OFFSET=0 TO A'
% COPY 'TRANSFER FROM OFFSET=1 TO B'
% COPY 'TRANSFER FROM OFFSET=2 TO C'
% COPY 'TRANSFER FROM OFFSET=3 TO AL'
% COPY 'TRANSFER FROM OFFSET=4 TO BE'
% COPY 'TRANSFER FROM OFFSET=5 TO GA'
% COPY 'END'
% EVALUATE AL = AL * 57.29578
% EVALUATE BE = BE * 57.29578
% EVALUATE GA = GA * 57.29578
% TRANSFER 'CELL ' // CHARACTER A // ' ' // CHARACTER B // ' ' // -
  CHARACTER C // ' ' // CHARACTER AL // ' ' // CHARACTER BE // ' ' // -
  CHARACTER GA TO PUNCH
%%
%
%% The HKL line
%%
% TRANSFER 'HKL "sg.hkl"' TO PUNCH
%%
%% The CLASS line
%%
%%         'Triclinic' 'Monoclinic' 'Orthorhombic' 'Tetragonal'
%%         'Rhombohedral' 'Trigonal' 'Hexagonal' 'Cubic' NULL
% CASE CLAS
%   TRANSFER 'CLASS TRICLINIC' TO PUNCH
%   TRANSFER 'CLASS MONOCLINIC' TO PUNCH
%   TRANSFER 'CLASS ORTHORHOMBIC' TO PUNCH
%   TRANSFER 'CLASS TETRAGONAL' TO PUNCH
%   TRANSFER 'CLASS RHOMBOHEDRAL' TO PUNCH
%   TRANSFER 'CLASS TRIGONAL' TO PUNCH
%   TRANSFER 'CLASS HEXAGONAL' TO PUNCH
%   TRANSFER 'CLASS CUBIC' TO PUNCH
% END CASE
%%
%% The UNIQUE line, if reqd
%%
% CASE UNIQ
%   TRANSFER 'UNIQUE NONE/UNKNOWN' TO PUNCH
%   TRANSFER 'UNIQUE A' TO PUNCH
%   TRANSFER 'UNIQUE B' TO PUNCH
%   TRANSFER 'UNIQUE C' TO PUNCH
% END CASE
%%
%% The CHIRAL line:
%%
% IF ( CHIR .EQ. 0 ) THEN
%   TRANSFER 'CHIRAL UNKNOWN' TO PUNCH
% ELSE
%   TRANSFER 'CHIRAL YES' TO PUNCH
% END IF
%% 
%% The OUTPUT file:
%%
% TRANSFER 'OUTPUT "sg.dat"' TO PUNCH
%%
%% Switch PUNCH unit to sg.hkl
%%
% COPY '#RELEASE PUNCH sg.hkl'
%%
%% Output a plain HKLF4 format listing of reflections
%%
% COPY '#PUNCH 6 F'
% COPY 'END'
%%
%% Close punch file.
%%
% COPY '#RELEASE PUNCH bfile.pch'
%%
%% Run the program
%%
% COPY '#SPAWN + "CRYSDIR:Spacegroup.exe" -b sg.ini -t "CRYSDIR:tables.txt"'
%%
%% Check for output file
%%
% IF .NOT. FILEEXISTS 'sg.dat' THEN
{E No output file found. SpaceGroup determination program must have failed.
{I File a bug report!
%  FINISH
% END IF
%%
%% Open the output file.
%%
% COPY '#CLOSE SCPDATA'
% COPY '#OPEN SCPDATA sg.dat'
%%
%% The TOTAL line
%%
% EXTRACT NEXT
% EXTRACT TRANSFER INPUT
% GET SILENT NOSTORE KEYWORD ' '
% GET SILENT NOSTORE INTEGER ' '
% TRANSFER 'Total number of reflections ' // CHARACTER VALUE TO DISPLAY
%%
%% The AVINT line
%%
% EXTRACT NEXT
% EXTRACT TRANSFER INPUT
% GET SILENT NOSTORE KEYWORD ' '
% GET SILENT NOSTORE REAL ' '
% TRANSFER 'Average intenstiy ' // CHARACTER VALUE TO DISPLAY
%%
%% The NREGIONS line
%%
% EXTRACT NEXT
% EXTRACT TRANSFER INPUT
% GET SILENT NOSTORE KEYWORD ' '
% GET SILENT NOSTORE INTEGER ' '
% EVALUATE NREG = VALUE
% TRANSFER 'Number of regions: ' // CHARACTER VALUE TO DISPLAY
% LOOP NREG TIMES
%   EXTRACT NEXT
% END LOOP
%%
%% The NTESTS line
%%
% EXTRACT NEXT
% EXTRACT TRANSFER INPUT
% GET SILENT NOSTORE KEYWORD ' '
% GET SILENT NOSTORE INTEGER ' '
% EVALUATE NTEST = VALUE
% TRANSFER 'Number of tests: ' // CHARACTER VALUE TO DISPLAY
% LOOP NTEST TIMES
%   EXTRACT NEXT
% END LOOP
%%
%% The DATA line
%%
% EXTRACT NEXT
% EXTRACT TRANSFER INPUT
% GET SILENT NOSTORE KEYWORD ' '
% GET SILENT NOSTORE INTEGER ' '
% GET SILENT NOSTORE INTEGER ' '
% EVALUATE NGLEN = VALUE
% TRANSFER 'Data group length: ' // CHARACTER VALUE TO DISPLAY
% LOOP ( NREG * NTEST * NGLEN ) TIMES
%   EXTRACT NEXT
% END LOOP
%%
%% The RESULTS line
%%
% EXTRACT NEXT
% EXTRACT TRANSFER INPUT
% GET SILENT NOSTORE KEYWORD ' '
% GET SILENT NOSTORE INTEGER ' '
% EVALUATE NRES = VALUE
% TRANSFER 'Number of results: ' // CHARACTER VALUE TO DISPLAY
% LOOP NRES TIMES
%% The SCORE line
%   EXTRACT NEXT
%   EXTRACT TRANSFER INPUT
%   GET SILENT NOSTORE KEYWORD ' '
%   GET SILENT NOSTORE REAL ' '
%   EVALUATE SCORE = VALUE
%   LOOP ( NREG + 1 ) TIMES
%     EXTRACT NEXT
%   END LOOP
%% The spacegroups line
%   EXTRACT NEXT
%   EXTRACT TRANSFER INPUT
%   GET SILENT NOSTORE KEYWORD ' '
%   GET SILENT NOSTORE INTEGER ' '
%   EVALUATE NSG = VALUE
%   LOOP NSG TIMES
%     EXTRACT NEXT
%     EXTRACT TRANSFER INPUT
%     GET SILENT NOSTORE TEXT ' '
%     TRANSFER 'Score: ' // CHARACTER SCORE // ' for ' // CVALUE TO DISPLAY
%   END LOOP
% END LOOP

Finished!

%END SCRIPT
