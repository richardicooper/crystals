%SCRIPT REGROUP 
% VARIABLE LOGICAL SCRIPTEXT
% IF SCRIPTEXT .EQ. TRUE THEN
 REGROUP takes an atom list and orders that list so that bonded atoms       
 are adjacent to each other in the list. It the molecule branches, each     
 branch is followed to an end, after which the branch from the last         
 node is followed. This is repeated until all atoms have been processed     
  A 'bond' is defined as existing if atoms are within a specified range     
 of each other after symmetry operators have been applied. By default       
 all symmetry operators and unit cell translations are tried.               
  Once the list has been reordered, the atoms may retain their original     
 serial numbers, or they can be renumbered according to their position      
 in the list.                                                               
  Since REGROUP works its way through the atom list from top to bottom,     
 the result will depend upon the original ordering of the atom list.        
  It is often a good strategy to sort the atom list so that 'heavy'         
 are at the top.                                                            
 It is possible to leave original atoms unmoved, and only shift peaks.      
% ELSE
A SCRIPT to help reorganise an atom list so that bonded atoms are adjacent
to each other.
% END IF
%% check we have an atom list
%  IF EXISTS 5 .NE. 1 THEN
  You do not have an atom list.
%  FINISH
%  END IF
%  BLOCK
%    ON ERROR REPEAT
%    QUEUE REWIND
%    CLEAR
%    VERIFY ALL NEW NONE
%    GET NOSTORE FINAL ABBREVIATED  -
  'Do you want to collect all the atoms, or just the new peaks' 'NONE'
%    IF VALUE .EQ. 1 THEN
%        INSERT 'SELECT TYPE = ALL'
%    ELSE IF VALUE .EQ. 2 THEN
%        INSERT 'SELECT TYPE = PEAKS'
%    ELSE
%        FINISH
%    END IF
%    VERIFY YES NO
%    GET NOSTORE FINAL ABBREVIATED  -
  'Do you want to resequence the atom serial numbers ?' 'NO'
%    IF VALUE .EQ. 1 THEN
%        INSERT 'SEQUENCE = YES '
%    ELSE
%        INSERT 'SEQUENCE = NO '
%    END IF
%    INSERT 'MOVE =  '
%    GET FINAL REAL 'Value for maximum bonding distance, A ' '2.1'
%    QUEUE SEND
%  END BLOCK
%  COPY '#REGROUP'
%  QUEUE PROCESS
%  COPY 'END'
%END SCRIPT
