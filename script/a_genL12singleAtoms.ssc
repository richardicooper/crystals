%SCRIPT GENL12SINGLEATOMS
%%
%% Variables from calling script
%%
%  VARIABLE LOGICAL LPOS LGRP LUISO LUANI LUISOEQ
%%
%  VARIABLE CHARACTER CELE CLINE CPARAM
%  VARIABLE INTEGER ISELECTED ISER
%%
%  EVALUATE ISELECTED = 0
%%
%  IF LPOS THEN
%    EVALUATE CPARAM = ", X'S"
%  END IF
%  IF LUISO THEN
%    EVALUATE CPARAM = CPARAM // ", U[ISO]"
%  ELSE IF LUANI THEN
%    EVALUATE CPARAM = CPARAM // ", U'S"
%  END IF
%  EVALUATE CPARAM = CPARAM // ")"
%%
%  COPY '#OPEN SCPDATA AtomsToWorkOn.dat'
%  BLOCK
%    QUEUE REWIND
%    QUEUE COPY #LIST 12
%    QUEUE COPY BLOCK SCALE

%    LOOP
%      ON ERROR TERMINATE
%      ON END TERMINATE
%      EXTRACT NEXT
%      EXTRACT TRANSFER INPUT
%      CLEAR
%      GET KEYWORD 'Entry'
%% force an exit from loop on reading an END card
%      IF CVALUE .EQ. 'END' THEN
%        EVALUATE LOOPEND = LOOPCOUNTER
%      ELSE
%        EVALUATE CELE = FIRSTSTR ( CVALUE )
%        EVALUATE ISER = FIRSTINT ( CVALUE )
%        IF CELE .NE. "H" THEN
%          EVALUATE CLINE = "CONTINUE " // CELE // "(" // CHARACTER ( ISER ) // CPARAM
%%         TRANSFER CLINE TO DISPLAY
%          CLEAR
%          STORE CHARACTER CLINE
%          QUEUE SEND
%          EVALUATE ISELECTED = ISELECTED + 1
%        END IF
%      END IF
%    END LOOP
%    EXTRACT REWIND
%%
%  IF LGRP THEN
%    QUEUE COPY GROUP
%    LOOP
%      ON ERROR TERMINATE
%      ON END TERMINATE
%      EXTRACT NEXT
%      EXTRACT TRANSFER INPUT
%      CLEAR
%      GET KEYWORD 'Entry'
%% force an exit from loop on reading an END card
%      IF CVALUE .EQ. 'END' THEN
%        EVALUATE LOOPEND = LOOPCOUNTER
%      ELSE
%        EVALUATE CELE = FIRSTSTR ( CVALUE )
%        EVALUATE ISER = FIRSTINT ( CVALUE )
%        EVALUATE CLINE = "CONTINUE " // CELE // "(" // CHARACTER ( ISER ) // ")"
%%       TRANSFER CLINE TO DISPLAY
%        CLEAR
%        STORE CHARACTER CLINE
%        QUEUE SEND
%      END IF
%    END LOOP
%    EXTRACT REWIND
%  END IF
%%
%  IF LUISOEQ THEN
%    QUEUE COPY EQUIVALENCE
%    LOOP
%      ON ERROR TERMINATE
%      ON END TERMINATE
%      EXTRACT NEXT
%      EXTRACT TRANSFER INPUT
%      CLEAR
%      GET KEYWORD 'Entry'
%% force an exit from loop on reading an END card
%      IF CVALUE .EQ. 'END' THEN
%        EVALUATE LOOPEND = LOOPCOUNTER
%      ELSE
%        EVALUATE CELE = FIRSTSTR ( CVALUE )
%        EVALUATE ISER = FIRSTINT ( CVALUE )
%        EVALUATE CLINE = "CONTINUE " // CELE // "(" // CHARACTER ( ISER ) // ", U[ISO])"
%%       TRANSFER CLINE TO DISPLAY
%        CLEAR
%        STORE CHARACTER CLINE
%        QUEUE SEND
%      END IF
%    END LOOP
%  END IF
%%
%    QUEUE COPY END
%    IF ISELECTED .GT. 0 THEN
%      QUEUE PROCESS
%    END IF
%  END BLOCK
%  COPY '#CLOSE SCPDATA'
%%
%END SCRIPT