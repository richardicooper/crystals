%SCRIPT L12PARTSSOF                                                             
%%                                                                              
%% Variable passed by calling routine                                           
%%                                                                              
%  VARIABLE LOGICAL REFSOFASS                                                   
%%                                                                              
%  VARIABLE INTEGER IPRT IPEG IPEP IPRL ILST                                    
%  VARIABLE LOGICAL LDEBUG L_OPEN  
%%
%  VARIABLE LOGICAL L_EQUIV                                             
%%                                                                              
%  EVALUATE LDEBUG = FALSE                                                      
%% EVALUATE LDEBUG = TRUE                                                       
%  EVALUATE L_OPEN = FALSE  
%  EVALUATE L_EQUIV = FALSE                                                    
%%                                                                              
%  COPY '#RELEASE PUNCH refsofass.12'                                           
%  COPY '#OPEN SCPDATA Parts.dat'                                               
%  LOOP                                                                         
%    ON ERROR TERMINATE                                                         
%    ON END TERMINATE                                                           
%    EXTRACT NEXT                                                               
%    EXTRACT TRANSFER INPUT                                                     
%    CLEAR                                                                      
%    GET INTEGER 'Number'                                                       
%    EVALUATE IPRT = VALUE                                                      
%    COPY '#SCRIPT A_SPLITPARTNUMBER'                                           
%    IF LDEBUG THEN  
%      transfer "{E Loop " // character ( loopcounter ) to display                                                           
%      TRANSFER "{I part " // CHARACTER ( IPRT ) TO DISPLAY                     
%      TRANSFER "{I assembly " // CHARACTER ( IPEG ) TO DISPLAY                 
%      TRANSFER "{I group " // CHARACTER ( IPEP ) // "..." TO DISPLAY           
%    END IF                                                                     
%% Calculate position                                                           
%    IF .NOT. L_EQUIV THEN                                                 
%      IF LDEBUG THEN                                                           
%        TRANSFER "{I Assembly is " // CHARACTER ( IPEG ) TO DISPLAY            
%        TRANSFER "{I group is " // CHARACTER ( IPEP ) TO DISPLAY               
%      END IF                                                                   
%      IF IPEP .NE. 0 THEN                                                      
%        TRANSFER "EQUIVALENCE PART(" // CHARACTER ( IPRT ) // -                
         ", OCC)" TO PUNCH                                                      
%        EVALUATE L_OPEN = TRUE                                                 
%        EVALUATE L_EQUIV = TRUE                                                 
%      END IF                                                                   
%%                                                                              
%    ELSE                                                                       
%      IF ILST .EQ. IPEG THEN                                                   
%        IF LDEBUG THEN                                                         
%          TRANSFER "{I                group is " // -                          
           CHARACTER ( IPEP ) TO DISPLAY                                        
%        END IF                                                                 
%        IF IPEP .NE. 0 THEN                                                    
%          TRANSFER "CONTINUE    PART(" // CHARACTER ( IPRT ) // -              
           ", OCC)" TO PUNCH                                                    
%        END IF                                                                 
%%                                                                              
%      ELSE                                                                     
%        IF LDEBUG THEN                                                         
%          TRANSFER "{I Assembly is " // CHARACTER ( IPEG ) TO DISPLAY          
%          TRANSFER "{I group is " // CHARACTER ( IPEP ) TO DISPLAY             
%        END IF                                                                 
%        IF IPEP .NE. 0 THEN                                                    
%          IF ILST .NE. 0 THEN                                                  
%            TRANSFER "WEIGHT -1   PART(" // CHARACTER ( IPRL ) // -            
             ", OCC)" TO PUNCH                                                  
%            EVALUATE L_OPEN = FALSE                                            
%          END IF                                                               
%          TRANSFER "EQUIVALENCE PART(" // CHARACTER ( IPRT ) // -              
           ", OCC)" TO PUNCH                                                    
%          EVALUATE L_OPEN = TRUE                                               
%        END IF                                                                 
%%                                                                              
%      END IF                                                                   
%    END IF                                                                     
%%   TRANSFER "Assembly: " // CHARACTER ( IPEG ) // ", part: " // -             
     CHARACTER ( IPRT ) TO DISPLAY                                              
%    IF IPEG .NE. 0 THEN                                                        
%      EVALUATE ILST = IPEG                                                     
%      EVALUATE IPRL = IPRT                                                     
%%     TRANSFER "  Updating..." TO DISPLAY                                      
%    END IF                                                                     
%  END LOOP                                                                     
%  IF L_OPEN THEN                                                               
%    TRANSFER "WEIGHT -1   PART(" // CHARACTER ( IPRL ) // -                    
     ", OCC)" TO PUNCH                                                          
%    EVALUATE L_OPEN = FALSE                                                    
%  END IF                                                                       
%  COPY '#CLOSE SCPDATA'                                                        
%  COPY '#RELEASE PUNCH bfile.pch'                                              
%%                                                                              
%END SCRIPT                                                                     
