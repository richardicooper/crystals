%SCRIPT MOGULRES
%     VARIABLE REAL ZMAX ZSUM ZNUM ZTOT ZAVE
%     VARIABLE REAL IDEAL ACTUAL DEV Z
%     VARIABLE INTEGER NIN NFOM MAT1 MAT2 MAT3 MAT4 NUMOBS ZMISS
%     VARIABLE CHARACTER CAT1 CAT2 CAT3 CAT4 RSVAL RSESD CLINE1
%     EVALUATE ZMAX = 0.0
%     EVALUATE ZSUM = 0.0
%     EVALUATE ZTOT = 0.0
%     EVALUATE ZNUM = 0.0
%     COPY '#RELEASE PUNCH bfile.pch'
%     COPY '#CLOSE SCPDATA'
%     COPY '#OPEN SCPDATA mogul.stat'
^^WI WINDOW MOGUL2 'Mogul Results' MODAL
^^WI POSITION=CENTRED '_MAINTEXTOUTPUT'
^^WI GRID M NROWS=6 NCOLS=3 {
^^WI  @ 4,2 GRID G NROWS=3 NCOLS=3 {
^^WI     @ 2,1 GRID GA NROWS=3 NCOLS=1 {
^^WI        @ 1,1 STATIC RT_T4 'Figures of merit (zero is best)'
^^WI        @ 3,1 LISTBOX RT_RES VISLINES=9 INFORM=YES
^^WI              ADDTOLIST
{I About to get all the FOM's
%     EXTRACT REWIND
%     LOOP
%       ON ERROR TERMINATE
%       ON END TERMINATE
%%  Get the atom names
%       EXTRACT NEXT
%       EXTRACT TRANSFER INPUT
%       CLEAR
%       VERIFY DIST ANGLE TORSION
%       GET SILENT NOSTORE ABBREVIATED ' '
%       EVALUATE NIN = VALUE
%       GET SILENT NOSTORE INTEGER ' '
%       LOOP NIN TIMES
%         GET SILENT NOSTORE INTEGER ' '
%       END LOOP
%       GET SILENT NOSTORE REAL ' '
%       EVALUATE ACTUAL = VALUE
%       INSERT !^^WI '!
%       GET SILENT TEXT ' ' ' '
%%  Work out the Z-score
%       EXTRACT NEXT
%       EXTRACT TRANSFER INPUT
%       GET SILENT NOSTORE INTEGER ' '
%       EVALUATE NUMOBS = VALUE
%       GET SILENT NOSTORE REAL ' '
%       EVALUATE IDEAL = VALUE
%       GET SILENT NOSTORE REAL ' '
%       EVALUATE DEV = VALUE
%       IF ( DEV .LT. 0.000001 ) THEN
%         EVALUATE DEV = 0.000001
%       END IF
%       EVALUATE Z = ( IDEAL - ACTUAL ) / DEV
%       IF Z .GT. 100.0 THEN
%         INSERT '>100.0'
%       ELSE IF Z .LT. - 100.0 THEN
%         INSERT '>-100.0'
%       ELSE
%         TRANSFER CHARACTER ( Z ) TO BUFFER
%       END IF
%       INSERT !'!
%       OUTPUT
%       EVALUATE ZTOT = ZTOT + 1.0
%       IF NUMOBS .GE. 4 THEN
%%
%          IF Z .GT. 0.0 THEN
%            EVALUATE ZSUM = ZSUM + Z
%          ELSE
%            EVALUATE ZSUM = ZSUM - Z
%          END IF
%%
%          EVALUATE ZNUM = ZNUM + 1.0
%%
%          IF Z .GT. ZMAX THEN
%             EVALUATE ZMAX = Z
%          END IF
%          IF ( - Z ) .GT. ZMAX THEN
%             EVALUATE ZMAX = - Z
%          END IF
%%
%       END IF
%     END LOOP
^^WI              'NULL'
^^WI     }
^^WI     @ 2,3 GRID GB NROWS=5 NCOLS=1 {
^^WI        @ 1,1 GRID GBA NROWS=14 NCOLS=3 {
^^WI           @ 1,1 STATIC RT_T3 'Fragment:'
^^WI           @ 1,3 STATIC MR_TYPE 'none yet'
^^WI           @ 2,1 STATIC RT_T3 'Actual:'
^^WI           @ 2,3 STATIC MR_ACTU '0000.0000'
^^WI           @ 4,1 STATIC RT_T3 'Num obs:'
^^WI           @ 4,3 STATIC MR_NUMO '000000'
^^WI           @ 5,1 STATIC RT_T3 'Median:'
^^WI           @ 5,3 STATIC MR_IDEA '0000.0000'
^^WI           @ 6,1 STATIC RT_T3 'Min:'
^^WI           @ 6,3 STATIC MR_MINO '0000.0000'
^^WI           @ 7,1 STATIC RT_T3 'Max:'
^^WI           @ 7,3 STATIC MR_MAXO '0000.0000'
^^WI           @ 8,1 STATIC RT_T3 'Deviation:'
^^WI           @ 8,3 STATIC MR_SIGM '0000.0000'
^^WI           @ 9,1 STATIC RT_T3 'Z-score:'
^^WI           @ 9,3 STATIC MR_ZSCO '0000.0000'
^^WI           @ 11,1 STATIC RT_T3 'Mean Z:'
^^WI           @ 11,3 STATIC MR_ZAVE '0000.0000'
^^WI           @ 12,1 STATIC RT_T3 'Max Z:'
^^WI           @ 12,3 STATIC MR_ZMAX '0000.0000'
^^WI           @ 13,1 STATIC RT_T3 '< 4 obs:'
^^WI           @ 13,3 STATIC MR_ZMIS '0000.0000'
^^WI           @ 14,1 STATIC RT_T3 'N res:'
^^WI           @ 14,3 STATIC MR_ZTOT '0000.0000'
^^WI        }
^^WI     }
^^WI  }
^^WI  @ 5,2 GRID B NROWS=2 NCOLS=7 {
^^WI     @ 1,1 STRETCH RT_STR2 HORIZONTAL
^^WI     @ 1,2 BUTTON RT_BOK '&Examine in Mogul'
^^WI     @ 1,4 BUTTON RT_BRR '&Restrain'
^^WI     @ 1,6 BUTTON RT_BXX '&Close' DEFAULT COMMIT CANCEL
^^WI   }
^^WI }
^^WI SHOW
^^CR
%     EVALUATE ZMISS = INTEGER ( ZTOT - ZNUM )
%     IF ZNUM .LE. 0.1 THEN
%      EVALUATE ZNUM = 1.0
%     END IF
%     EVALUATE ZAVE = ZSUM / ZNUM
%%
%     TRANSFER '^^CO SET MR_ZMIS TEXT ' // CHARACTER ( ZMISS ) TO DISPLAY
%     TRANSFER '^^CO SET MR_ZTOT TEXT ' // CHARACTER ( ZTOT ) TO DISPLAY
%     TRANSFER '^^CO SET MR_ZMAX TEXT ' // CHARACTER ( ZMAX ) TO DISPLAY
%     TRANSFER '^^CO SET MR_ZAVE TEXT ' // CHARACTER ( ZAVE ) TO DISPLAY
%%
%     LOOP
%%
%% Flush input buffer:
%       GET NOPROMPT NOSTORE TEXT ' ' ' '
%%
%% Loop back here every time. First, fill in the details for the
%% currently selected FOM.
%%
^^??    RT_RES SELECTED
%       GET NOSTORE SILENT INTEGER ' ' ' '
%       EVALUATE NFOM = VALUE
%%
%%
%%
%% Rewind mogul.stat
%       EXTRACT REWIND
%% Skip (NFOM-1 * 2) lines
%       LOOP ( ( NFOM - 1 ) * 2 ) TIMES
%         ON ERROR TERMINATE
%         ON END TERMINATE
%         EXTRACT NEXT
%       END LOOP
%%
%% Get the info
%%
%       BLOCK
%         ON ERROR TERMINATE
%         ON END TERMINATE
%%
%         EXTRACT NEXT
%         EXTRACT TRANSFER INPUT
%%
%% Get the type
%%
%         CLEAR
%         VERIFY DIST ANGLE TORSION
%         GET SILENT NOSTORE ABBREVIATED ' '
%         EVALUATE NIN = VALUE
%         CASE NIN
%           TRANSFER '^^CO SET MR_TYPE TEXT Distance' TO DISPLAY
%           TRANSFER '^^CO SET MR_TYPE TEXT Angle' TO DISPLAY
%           TRANSFER '^^CO SET MR_TYPE TEXT Torsion' TO DISPLAY
%         END CASE
%%
%% Get the atom indexes
%%
%         CASE NIN
%           BLOCK
%             GET SILENT NOSTORE INTEGER ' '
%             EVALUATE MAT1 = VALUE
%             GET SILENT NOSTORE INTEGER ' '
%             EVALUATE MAT2 = VALUE
%           END BLOCK
%           BLOCK
%             GET SILENT NOSTORE INTEGER ' '
%             EVALUATE MAT1 = VALUE
%             GET SILENT NOSTORE INTEGER ' '
%             EVALUATE MAT2 = VALUE
%             GET SILENT NOSTORE INTEGER ' '
%             EVALUATE MAT3 = VALUE
%           END BLOCK
%           BLOCK
%             GET SILENT NOSTORE INTEGER ' '
%             EVALUATE MAT1 = VALUE
%             GET SILENT NOSTORE INTEGER ' '
%             EVALUATE MAT2 = VALUE
%             GET SILENT NOSTORE INTEGER ' '
%             EVALUATE MAT3 = VALUE
%             GET SILENT NOSTORE INTEGER ' '
%             EVALUATE MAT4 = VALUE
%           END BLOCK
%         END CASE
%%
%% Get the actual value
%%
%         CLEAR
%         INSERT !^^CO SET MR_ACTU TEXT '!
%         GET SILENT REAL ' '
%         EVALUATE ACTUAL = VALUE
%         INSERT !'!
%         OUTPUT
%%
%% Get the crystals atom names
%%
%         EVALUATE CAT1 = ' '
%         EVALUATE CAT2 = ' '
%         EVALUATE CAT3 = ' '
%         EVALUATE CAT4 = ' '
^^CO SET MODEL01 SELECT ALL NO
%         LOOP ( NIN + 1 ) TIMES
%           EVALUATE CAT4 = CAT3
%           EVALUATE CAT3 = CAT2
%           EVALUATE CAT2 = CAT1
%           CLEAR
%           INSERT '^^CO SET MODEL01 SELECT '
%           GET SILENT KEYWORD ' '
%           EVALUATE CAT1 = CVALUE
%           INSERT ' YES'
%           OUTPUT
%         END LOOP
%%
%%  Work out the Z-score
%         EXTRACT NEXT
%         EXTRACT TRANSFER INPUT
%%
%         CLEAR
%         INSERT !^^CO SET MR_NUMO TEXT '!
%         GET SILENT INTEGER ' '
%         INSERT !'!
%         OUTPUT
%%
%         CLEAR
%         INSERT !^^CO SET MR_IDEA TEXT '!
%         GET SILENT REAL ' '
%         EVALUATE IDEAL = VALUE
%         INSERT !'!
%         OUTPUT
%%
%         CLEAR
%         INSERT !^^CO SET MR_SIGM TEXT '!
%         GET SILENT REAL ' '
%         EVALUATE DEV = VALUE
%         INSERT !'!
%         OUTPUT
%%
%         CLEAR
%         INSERT !^^CO SET MR_MINO TEXT '!
%         GET SILENT REAL ' '
%         INSERT !'!
%         OUTPUT
%%
%         CLEAR
%         INSERT !^^CO SET MR_MAXO TEXT '!
%         GET SILENT REAL ' '
%         INSERT !'!
%         OUTPUT
%%
%         IF ( DEV .LT. 0.000001 ) THEN
%           EVALUATE DEV = 0.000001
%         END IF
%         EVALUATE Z = ( IDEAL - ACTUAL ) / DEV
%%
%         CLEAR
%         INSERT !^^CO SET MR_ZSCO TEXT '!
%         IF Z .GT. 100.0 THEN
%           INSERT '>100.0'
%         ELSE
%           TRANSFER CHARACTER ( Z ) TO BUFFER
%         END IF
%         INSERT !'!
%         OUTPUT
%       END BLOCK
%       VERIFY RT_BXX RT_BOK RT_BRR RT_RES 
%       GET NOSTORE SILENT FINAL ABBREVIATED ' ' ' '
%       CASE VALUE
%         BLOCK   %RT_BXX%
^^CO        DISPOSE MOGUL2
%           FINISH
%         END BLOCK
%         BLOCK
^^CO        DISPOSE MOGUL2
%           COPY     '#RELEASE PUNCH crystals.qf'
%           TRANSFER 'DISPLAY' TO PUNCH
%           CASE NIN
%             TRANSFER 'DIST  ' // CHARACTER ( MAT1 ) // ' ' // -
 CHARACTER ( MAT2 ) TO PUNCH
%             TRANSFER 'ANGLE ' // CHARACTER ( MAT1 ) // ' ' // -
 CHARACTER ( MAT2 ) // ' ' // CHARACTER ( MAT3 ) TO PUNCH
%             TRANSFER 'TORSION ' // CHARACTER ( MAT1 ) // ' ' // -
 CHARACTER ( MAT2 ) // ' ' // CHARACTER ( MAT3 ) // ' ' -
 CHARACTER ( MAT4 ) TO PUNCH
%           END CASE
%           COPY '#RELEASE PUNCH bfile.pch'
%           COPY '#FOREIGN CSD'
%           COPY 'END'
% COPY '#spawn +copy \mogul\develop\mogul\bin\moguldatfil.txt .'
% COPY '#SPAWN "CRYSDIR:mogul.bat" qf crystals.qf'
%           FINISH
%         END BLOCK
%         BLOCK        %%RT_BRR
%           CASE NIN
%             BLOCK %DIST%
%% Get two values
%               CLEAR
^^WI WINDOW XRESTRD 'Restrain Distance' MODAL
^^WI GRID RESMAIN NROWS=5 NCOLS=5
^^WI {
% TRANSFER "^^WI @ 2,2 STATIC T0 'Restrain " // CAT1 // " to " // -
  CAT2 // "'" TO DISPLAY
^^WI   @ 4,2 GRID LEFT NROWS=3 NCOLS=5
^^WI   {
^^WI     @ 1,1 STATIC T1 'Distance'
%TRANSFER "^^WI @ 1,3 EDITBOX E1 '" // CHARACTER IDEAL // -
          "' CHARS=10 REAL" TO DISPLAY
^^WI     @ 1,5 STATIC T2 'angstroms'
^^WI     @ 3,1 STATIC T3 'E.s.d.'
%TRANSFER "^^WI @ 3,3 EDITBOX E2 '" // CHARACTER DEV // -
          "' CHARS=10 REAL" TO DISPLAY
^^WI     @ 3,5 STATIC T4 'angstroms'
^^WI   }
^^WI   @ 4,4 GRID RIGHT NROWS=3 NCOLS=1
^^WI   {
^^WI     @ 1,1 BUTTON BOK '&Ok' COMMIT DEFAULT
^^WI     @ 3,1 BUTTON BXX '&Cancel' CANCEL
^^WI   }
^^WI }
^^WI  SHOW
^^CR
%               VERIFY BOK BXX
%               GET SILENT NOSTORE FINAL ABBREVIATED 'Ok or cancel?'
%               CASE VALUE
%                 BLOCK %BOK%
^^??                E1 TEXT
%                   GET SILENT NOSTORE REAL 'Distance' '1.0'
%                   EVALUATE RSVAL = CVALUE
^^??                E2 TEXT
%                   GET SILENT NOSTORE REAL 'Esd' '0.02'
%                   EVALUATE RSESD = CVALUE
%                   EVALUATE CLINE1 = 'DISTANCE ' // RSVAL // ' , ' //  -
                    RSESD // ' = ' // CAT1 // ' to ' // CAT2
%                   COPY '#SCRIPT YADDLI16'
^^CO                DISPOSE XRESTRD
%% YADDLI16 closes SCPDATA - reopen it.
%                   COPY '#CLOSE SCPDATA'
%                   COPY '#OPEN SCPDATA mogul.stat'
%                 END BLOCK
%                 BLOCK %BXX%
^^CO                DISPOSE XRESTRD
%                   FINISH
%                 END BLOCK
%               END CASE
%             END BLOCK
%           END CASE
%         END BLOCK
%         BLOCK        %%RT_RES
%           GET NOSTORE SILENT INTEGER ' ' ' '
%         END BLOCK
%       END CASE
%     END LOOP
%END SCRIPT
                                  
